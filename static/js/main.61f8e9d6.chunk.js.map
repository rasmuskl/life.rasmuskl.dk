{"version":3,"sources":["serviceWorker.ts","components/ServiceWorkerInstall.tsx","layout/styles.ts","db/EventListener.ts","db/db.ts","components/Loader.tsx","model.tsx","lib/dropboxApi.ts","db/syncer.ts","components/ServiceWorkerUpdate.tsx","components/Layout.tsx","db/project.ts","framework/ToolSection.tsx","lib/contextActions.ts","db/context.ts","lib/UseQueryState.ts","components/SettingsCompactor.tsx","components/ContextTag.tsx","components/ContextBar.tsx","pages/TaskPage.tsx","db/note.ts","db/person.ts","components/MarkedViewer.tsx","components/SimpleSplitEditor.tsx","components/TreeEditor.tsx","components/ContextSelector.tsx","components/TagInput.tsx","components/NoteEditor.tsx","db/stagingArea.ts","pages/notes/EditNotePage.tsx","components/TreeViewer.tsx","components/ReferenceViewer.tsx","pages/notes/ShowNotePage.tsx","framework/List.tsx","pages/notes/NotePage.tsx","pages/ContextPage.tsx","pages/ProjectPage.tsx","components/EmbeddedNote.tsx","pages/ShowTaskPage.tsx","pages/ShowProjectPage.tsx","pages/ShowContextPage.tsx","pages/DataPage.tsx","db/crypt.ts","pages/SettingsPage.tsx","pages/people/PeoplePage.tsx","pages/people/EditPersonPage.tsx","pages/people/ShowPersonPage.tsx","pages/StatsPage.tsx","pages/notes/DailyNotes.tsx","routes.tsx","pages/PlaygroundPage.tsx","pages/SyncPage.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","config","a","navigator","URL","process","href","origin","addEventListener","swUrl","checkValidServiceWorker","serviceWorker","ready","console","log","registerValidSW","self","event","data","type","skipWaiting","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","fetch","headers","response","contentType","get","status","indexOf","unregister","reload","ServiceWorkerInstall","props","installEvent","e","preventDefault","setState","this","prompt","userChoice","then","choiceResult","outcome","className","onClick","onInstallClick","React","hoverGlow","css","background","cursorPointer","cursor","display","alignItems","horizontalSpace","width","around","paddingLeft","undefined","paddingRight","marginLeft","marginRight","verticalSpace","height","paddingTop","paddingBottom","marginBottom","EventListener","listeners","listener","push","filter","x","arg","LocalForageStore","store","changeListener","createInstance","name","entityProps","now","Date","toISOString","id","uuid","versionId","parentVersionIds","createdAt","updatedAt","entity","setItem","getKey","trigger","Error","parentVersionId1","getLeafNodes","leafNodes","length","warn","map","node","_","getKeysPrefixed","keys","getItem","prefix","k","startsWith","split","objs","parts","parentVersionId2","groups","o","leafNodeArrays","Object","group","parents","result","leafObjs","dropInstance","join","replace","c","r","Math","random","toString","contexts","tasks","notes","projects","people","getSyncKeys","getBySyncKey","syncKey","entities","import","serverEntities","serverEntity","unencryptedData","JSON","parse","syncKeys","entityData","stringify","db","importEntites","importServerEntites","exportServerEntities","Loader","style","justifyContent","border","padding","Data","DataContext","createContext","refreshData","DataProvider","useState","setData","useEffect","syncer","registerDataListener","getData","startServerSync","ensureServerSyncEnqueued","init","value","useCallback","Provider","children","useData","useContext","isLocalMode","host","clientId","signIn","dropbox","Dropbox","assign","getAuthenticationUrl","isSignedIn","getStateSnapshot","snapshot","files","Set","setStateSnapshot","removeItem","listFiles","useSnapshot","getAccessToken","accessToken","hasMore","filesListFolderContinue","fileListResult","results","entries","path_lower","substring","p","file","add","has_more","filesListFolder","path","recursive","getAccessTokenFromUrl","str","ret","trim","forEach","param","key","shift","val","decodeURIComponent","retVal","Array","isArray","parseAuthFromHash","hash","access_token","uploadFile","contents","filesUpload","getFile","filesDownload","Promise","resolve","blob","fileBlob","reader","FileReader","json","readAsText","tryStoreAccessKey","SyncStatus","Idle","intervalHandle","syncListener","dataListener","note","concat","task","context","project","person","loadData","setInterval","difference","setA","setB","_difference","delete","Syncing","dropboxApi","startAt","toSend","toFetch","limit","pLimit","promises","all","endAt","error","size","send","Failed","message","getAll","orderBy","ServiceWorkerUpdate","waitingServiceWorker","setWaitingServiceWorker","waiting","target","update","componentDidMount","postMessage","isMobile","matchMedia","matches","ProjectState","Layout","sidebar","setSidebar","count","setCount","onNavClick","registerSyncListener","overflow","cx","styles","to","exact","activeClassName","overflowY","overflowX","ToolSection","verticalAround","getNestedContexts","grouped","contextId","taskCounts","topContexts","nestedContexts","getFilteredContextIds","contextIds","queue","next","pop","nested","ContextState","useQueryState","initialValue","queryParam","URLSearchParams","search","rawValue","setRawValue","urlParams","set","queryString","history","replaceState","pathname","dispatchEvent","CustomEvent","useQueryStateT","convertTo","convertFrom","strValue","SettingsCompactor","expanded","setExpanded","alwaysVisible","wideStyle","mobileOnly","flexDirection","ContextTag","find","title","ContextBar","ContextActions","borderRight","onChange","i","renderListContext","depth","Inactive","showTaskCount","color","perspectives","groupedProject","groupedContext","defaultPerspective","TaskPage","text","setText","showCompleted","showDeferred","showIncubated","showContextBar","includeNested","options","setOptions","setContextId","projectId","setProjectId","perspectiveId","setPerspectiveId","onKeyPress","create","content","stateChangedAt","noteId","onCompleteChange","save","renderProject","renderDeferred","deferredUntil","moment","format","fromNow","renderNote","renderTitle","pattern","stopPropagation","rel","filterTasks","complete","t","incubatedProjectIds","Incubated","sort","b","renderTask","skipProjectContext","source","encodeURIComponent","checked","textDecoration","perspective","taskBlock","filteredContextIds","stateOrder","Active","Completed","Dropped","emptyActiveProjects","filteredProjects","projectTasks","noProjectTasks","htmlFor","placeholder","getNoteTitle","dailyDate","parsedTitle","exec","noteReferenceRegex","escapeRegExp","getNoteReferenceMatchRegExp","reference","RegExp","getNoteAliasReferenceMatchRegExp","alias","extractReferences","matchAll","extractAllReferences","toLowerCase","existing","n","references","has","existingResult","values","mentionRegex","getAlias","SplitMode","MarkedViewer","useHistory","lifeNavigate","url","markdown","group1","matchContextId","matchTitle","prefixContext","contextTitle","test","referenceRegExp","html","marked","dangerouslySetInnerHTML","__html","NoteModeSelector","mode","onModeChange","SplitModeSelector","Split","Editor","Preview","SimpleSplitEditor","expand","zIndex","maxHeight","components","textAreaStyle","flexGrow","minWidth","borderTop","markedStyle","fontSize","onTextChanged","theme","showGutter","showPrintMargin","wrapEnabled","enableBasicAutocompletion","snippetCompleter","textCompleter","keyWordCompleter","enableLiveAutocompletion","enableSnippets","TreeEditor","invalid","nodes","setNodes","inputRef","useRef","active","setActive","noteTitles","setNoteTitles","noteCompletions","titles","flat","peopleAliases","setPeopleAliases","aliases","onInputChanged","getParentNode","targetNode","searchNodes","parentNode","childResult","preorderTraversal","stack","reverse","childNode","removeNodeIfEmpty","nodeIndex","findIndex","splice","removeNode","indentNode","unindentNode","parentParentNode","targetNodes","parentNodeIndex","commands","bindKey","win","mac","setTimeout","above","current","editor","getCursorPosition","row","column","newNode","afterNode","insertNode","activeIndex","max","getSession","doc","getLength","min","completions","getCompletions","session","pos","callback","token","getTokenAt","hasPrefix","caption","snippet","meta","requiredPrefix","position","bottom","left","right","focus","insert","renderNode","index","level","isActive","letterSpacing","lineHeight","ref","highlightActiveLine","maxLines","Infinity","borderLeft","ContextSelector","activeContexts","inactiveContexts","disabled","TagInput","setFocus","TagState","availableTags","tags","tagState","setTagState","timeoutId","tagInput","onTextChange","withText","newTagState","getTags","onFocus","clearTimeout","onBlur","selectedTags","onKeyDown","decrementIndex","incrementIndex","addSelectedTag","addText","reopenLastTag","getFilteredAvailableTags","slice","tag","addTag","lastTag","Tag","TagList","NoteEditor","splitMode","setSplitMode","flex","updateNote","noteFor","registered","ensureRegister","listen","onNavigate","processQueue","queuedPath","queuedNote","action","hasChanges","useNote","pristineNote","pristine","setNote","setHasChanges","newNote","newHasChanges","EditNotePage","goBack","setGoBack","daily","createUnsaved","onNoteAdded","TreeViewer","setInvalid","referenceTitle","personAlias","extra","repeat","ReferenceViewer","contextNotes","fontWeight","marginTop","PersonReferenceViewer","matchingNotes","ShowNotePage","viewer","ShowVirtualNotePage","List","items","renderItem","NotePage","s","filterTags","setFilterTags","showTagsBar","setShowTagsBar","searchResult","setSearchResult","searchIndex","setSearchIndex","showNotesFor","setShowNotesFor","showNoContext","setShowNoContext","virtualReferences","setVirtualReferences","refs","debouncedSearch","debounce","score","idx","lunr","field","tagCounts","notesOutput","isRef","virtualReferencesOutput","v","output","toggleTag","ContextPage","renderTarget","ProjectPage","bind","EmbeddedNoteEdit","targetEntity","addNode","EmbeddedNoteShow","ShowTaskPage","isDirty","setTaskState","setContext","setProject","setDefer","ShowProjectPage","projectState","setProjectState","ShowContextPage","contextState","setContextState","DataPage","render","lifeKeyStore","Uint8Array","getCurrentKey","PeoplePage","localeCompare","EditPersonPage","initialState","setValues","handleChange","persist","useForm","birthday","onSave","ShowPersonPage","StatsPage","noteTotalCount","setNoteTotalCount","taskTotalCount","setTaskTotalCount","peopleTotalCount","setPeopleTotalCount","projectTotalCount","setProjectTotalCount","contextTotalCount","setContextTotalCount","DailyNotePage","oneWeekAgo","filteredContexts","dailyNotes","contextCounts","countBy","routes","routeProps","params","component","Fragment","getResults","getTime","setCurrentKey","serviceWorkerState","setServiceWorkerState","clearEntities","confirm","dropboxConnected","setDropboxConnected","refreshKeys","newCurrentKey","createBrowserHistory","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61f8e9d6.chunk.js","sourcesContent":["declare var self: ServiceWorkerGlobalScope;\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' || window.location.hostname === '[::1]' || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport async function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        \n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        \n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n        \n        window.addEventListener('load', async () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n            \n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n                \n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                await navigator.serviceWorker.ready;\n                console.log('This web app is being served cache-first by a service worker.'\n                );\n            } else {\n                // Is not localhost. Just register service worker\n                await registerValidSW(swUrl, config);\n            }\n        });\n\n        self.addEventListener('message', event => {\n            if (event.data && event.data.type === 'SKIP_WAITING') {\n                self.skipWaiting();\n              }\n        });\n    }\n}\n\nasync function registerValidSW(swUrl: string, config?: Config) {\n    const registration = await navigator.serviceWorker.register(swUrl);\n    \n    registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        \n        if (installingWorker == null) {\n            return;\n        }\n        \n        installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                    // At this point, the updated precached content has been fetched,\n                    // but the previous service worker will still serve the older\n                    // content until all client tabs are closed.\n                    console.log('New content is available and will be used when all tabs for this page are closed.');\n                    \n                    // Execute callback\n                    if (config && config.onUpdate) {\n                        config.onUpdate(registration);\n                    }\n                } else {\n                    // At this point, everything has been precached.\n                    // It's the perfect time to display a\n                    // \"Content is cached for offline use.\" message.\n                    console.log('Content is cached for offline use.');\n                    \n                    // Execute callback\n                    if (config && config.onSuccess) {\n                        config.onSuccess(registration);\n                    }\n                }\n            }\n        };\n    };\n}\n\nasync function checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    const response = await fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' }\n    });\n    \n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        const registration = await navigator.serviceWorker.ready;\n        await registration.unregister()\n        window.location.reload();\n    } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n    }\n}\n\nexport async function unregister() {\n    if ('serviceWorker' in navigator) {\n        const registration = await navigator.serviceWorker.ready;\n        registration.unregister();\n    }\n}\n","import * as React from 'react';\n\nexport class ServiceWorkerInstall extends React.Component<{ }, { installEvent: any }> {\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            installEvent: null\n        };\n    }\n\n    componentDidMount() {\n        window.addEventListener('beforeinstallprompt', (e: any) => {\n            // Prevent Chrome 67 and earlier from automatically showing the prompt\n            e.preventDefault();\n            this.setState({ installEvent: e });\n        });\n    }\n\n    onInstallClick() {\n        if (this.state.installEvent === null) {\n            return;\n        }\n        \n        this.state.installEvent.prompt();\n    \n        // Wait for the user to respond to the prompt\n        this.state.installEvent.userChoice.then((choiceResult: any) => {\n            if (choiceResult.outcome === 'accepted') {\n                console.log('User accepted the A2HS prompt');\n            } else {\n                console.log('User dismissed the A2HS prompt');\n            }\n        });\n    }\n\n    render() {\n        if (!this.state.installEvent) {\n            return null;\n        }\n\n        return (\n            <div className=\"button\" onClick={() => this.onInstallClick()}>Install app</div>\n        );\n    }\n}","import {css} from 'emotion';\n\nexport const hoverGlow = css({\n    '&': {\n        '&:hover': {\n            background: '#3f3f3f'\n        }\n    }\n});\n\nexport const cursorPointer = css({\n    cursor: 'pointer'\n});\n\nexport const verticalCenter = css({\n    display: 'flex',\n    alignItems: 'center'\n});\n\nexport function horizontalSpace(width = '.3rem', around = false) {\n    return css({\n        paddingLeft: around ? width : undefined,\n        paddingRight: around ? width : undefined,\n        '&': {\n            '& > *:first-child': {\n                marginLeft: 0\n            },\n            '& > *': {\n                marginRight: width\n            },\n            '& > *:last-child': {\n                marginRight: 0\n            }\n        }\n    });\n}\n\nexport function verticalSpace(height = '.3rem', around = false) {\n    return css({\n        paddingTop: around ? height : undefined,\n        paddingBottom: around ? height : undefined,\n        '&': {\n            '& > *': {\n                marginBottom: height\n            },\n            '& > *:last-child': {\n                marginBottom: 0\n            }\n        }\n    });\n}","export class EventListener<T> {\n    listeners: ((arg: T) => void)[] = [];\n\n    register(listener: (arg: T) => void) {\n        this.listeners.push(listener);\n        return () =>  {\n            this.listeners = this.listeners.filter(x => x !== listener);\n        };\n    }\n\n    trigger(arg: T) {\n        for(const listener of this.listeners) {\n            listener(arg);\n        }\n    }\n}","import {createInstance} from 'localforage';\nimport {Context} from './context';\nimport { Project } from './project';\nimport { Task } from './task';\nimport { Note } from './note';\nimport * as _ from 'lodash';\nimport { Person } from './person';\nimport { EventListener } from './EventListener';\n\ninterface Store<T extends Entity> {\n    getAll(): Promise<T[]>;\n    get(id: string, revision?: string): Promise<T|null>;\n    save(entity: T): void;\n}\n\nexport type EntityType = 'note' | 'task' | 'project' | 'context' | 'person';\n\nexport interface Entity {\n    id: string;\n    versionId: string;\n    parentVersionId1: string|null;\n    parentVersionId2: string|null;\n    type: EntityType;\n    createdAt: string;\n    updatedAt: string;\n    deferredUntil: string|null;\n}\n\n// type EntityProperty = keyof Entity;\n\n// const sampleEntity: Entity = {\n//     id: 'test',\n//     versionId: 'test',\n//     parentVersionId1: null,\n//     parentVersionId2: null,\n//     type: 'task',\n//     createdAt: 'now',\n//     updatedAt: 'now',\n//     deferredUntil: null\n// };\n\n// const entityProperties: EntityProperty[] = Object.keys(sampleEntity) as EntityProperty[];\n\nexport interface ServerEntity {\n    id: string;\n    versionId: string;\n    data: string;\n    // encryption: string;\n    parentVersionId1: string|null;\n    parentVersionId2: string|null;\n    type: EntityType;\n    createdAt: string;\n    updatedAt: string;\n}\n\nexport interface ServerEntityEncryption {\n    key: string;\n    fingerprint: string;\n    iv: string;\n}\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>\n\nclass LocalForageStore<T extends Entity> implements Store<T> {\n    store: LocalForage;\n    type: EntityType;\n    changeListener: EventListener<T>;\n\n    constructor(type: EntityType) {\n        this.type = type;\n        this.store = createInstance({\n            name: `store-${type}`\n        });\n        this.changeListener = new EventListener<T>();\n    }\n\n    createUnsaved(entityProps: Omit<T, keyof Entity>): T {\n        const now = new Date().toISOString();\n        let entity = {\n            id: this.uuid(),\n            versionId: this.uuid(),\n            type: this.type,\n            parentVersionIds: [] as string[],\n            createdAt: now,\n            updatedAt: now,\n            ...entityProps as any,\n        } as T;\n        return entity;\n    }\n\n    async create(entityProps: Omit<T, keyof Entity>): Promise<T> {\n        const now = new Date().toISOString();\n        let entity = {\n            id: this.uuid(),\n            versionId: this.uuid(),\n            type: this.type,\n            parentVersionIds: [] as string[],\n            createdAt: now,\n            updatedAt: now,\n            ...entityProps as any,\n        } as T;\n        await this.store.setItem(this.getKey(entity), entity);\n        this.changeListener && this.changeListener.trigger(entity);\n        return entity;\n    }\n\n    save(entity: T): void {\n        if (!entity.id) {\n            entity.id = this.uuid();\n        }\n\n        if (entity.type !== this.type) {\n            throw new Error(`Invalid type: ${entity.type} - expected ${this.type}`);\n        }\n\n        const now = new Date().toISOString();\n\n        if (!entity.createdAt) {\n            entity.createdAt = now;\n        }\n\n        entity.updatedAt = now;\n\n        if(entity.versionId) {\n            entity.parentVersionId1 = entity.versionId;\n        }\n\n        entity.versionId = this.uuid();\n        this.store.setItem(this.getKey(entity), entity);\n        this.changeListener && this.changeListener.trigger(entity);\n    }\n\n    import(entity: T) {\n        if (entity.type !== this.type) {\n            throw new Error(`Invalid type ${entity.type} - expected ${this.type}`);\n        }\n\n        this.store.setItem(this.getKey(entity), entity);\n        this.changeListener && this.changeListener.trigger(entity);\n    }\n\n    async get(id: string, versionId?: string): Promise<T|null> {\n        if (versionId === undefined) {\n            const leafNodes = await this.getLeafNodes(`${id}/`);\n\n            if (leafNodes.length > 1) {\n                console.warn(`Found ${leafNodes.length} leaf nodes for entity ${this.type}/${id} - expected 1: ${leafNodes.map(x => x.versionId)}`);\n\n                for(const node of leafNodes) {\n                    console.log('leaf node', node);\n                }\n                \n                // throw `Found ${leafNodes.length} leaf nodes for entity ${this.type}/${id} - expected 1: ${leafNodes.map(x => x.versionId)}`;\n                return _.orderBy(leafNodes, x => x.updatedAt, 'desc')[0];\n            }\n\n            if (leafNodes.length === 0) {\n                return null;\n            }\n\n            return leafNodes[0];\n        } else {\n            const keys = await this.getKeysPrefixed(`${id}/${versionId}`);\n            return await this.store.getItem(keys[0]) as T;\n        }\n    }\n\n    async getAll(): Promise<T[]> {\n        return await this.getLeafNodes();\n    }\n\n    async getKeysPrefixed(prefix: string) {\n        const keys = await this.store.keys();\n        return keys.filter(k => k.startsWith(prefix));\n    }\n\n    async getSyncKeys(): Promise<string[]> {\n        const keys = await this.store.keys();\n        return keys.map(x => `${this.type}/${x.split('/')[0]}/${x.split('/')[1]}`)\n    }\n\n    private async getLeafNodes(prefix = '') {\n        const keys = await this.getKeysPrefixed(prefix);\n\n        const objs = keys.map(k => {\n            const parts = k.split('/');\n\n            let parentVersionId1 = null;\n            let parentVersionId2 = null;\n\n            if (parts[2].length > 0) {\n                const parentVersionIds = parts[2].split('+');\n\n                if (parentVersionIds.length > 2) {\n                    throw new Error(\"ParentVersionIds length > 2\");\n                }\n\n                parentVersionId1 = parentVersionIds[0];\n                parentVersionId2 = parentVersionIds.length > 1 ? parentVersionIds[1] : null;\n            }\n\n            return {\n                id: parts[0],\n                versionId: parts[1],\n                parentVersionId1: parentVersionId1,\n                parentVersionId2: parentVersionId2,\n            }\n        });\n\n        const groups = _.groupBy(objs, o => o.id);\n\n        const leafNodeArrays = Object.keys(groups).map(k => {\n            const group = groups[k];\n            const parents: { [key: string]: boolean } = {};\n\n            for(const o of group) {\n                if (o.parentVersionId1) {\n                    parents[o.parentVersionId1] = true;\n                }\n                if (o.parentVersionId2) {\n                    parents[o.parentVersionId2] = true;\n                }\n            }\n\n            const leafNodes = group.filter(o => {\n                const isLeaf = !parents[o.versionId];\n                return isLeaf;\n            });\n\n            return leafNodes;\n        });\n\n        const result: T[] = [];\n\n        for(let leafNodes of leafNodeArrays) {\n            const leafObjs: T[] = [];\n            for(let node of leafNodes) {\n                leafObjs.push(await (this.store.getItem(this.getKey(node))) as T);\n            }\n\n            if(leafObjs.length !== 1) {\n                console.warn(`Found ${leafObjs.length} leaf nodes for entity ${this.type}/${leafNodes[0].id} - expected 1: ${leafObjs.map(x => x.versionId)}`);\n    \n                for(const node of leafObjs) {\n                    console.log('leaf node', node);\n                }\n    \n                result.push(_.orderBy(leafObjs, x => x.updatedAt, 'desc')[0])\n            } else {\n                result.push(leafObjs[0]);\n            }\n        }\n\n        return result;\n    }\n\n    registerChangeListener(listener: (status: T) => void) {\n        this.changeListener.register(listener)\n    }\n\n    dropInstance() {\n        this.store.dropInstance();\n    }\n\n    private getKey(entity: { id: string, versionId: string, parentVersionId1: string|null, parentVersionId2: string|null }) {\n        let parentVersionIds = [];\n\n        if (entity.parentVersionId1) {\n            parentVersionIds.push(entity.parentVersionId1);\n        }\n\n        if (entity.parentVersionId2) {\n            parentVersionIds.push(entity.parentVersionId2);\n        }\n\n\n        return `${entity.id}/${entity.versionId}/${parentVersionIds.join('+')}`;\n    }\n\n    private uuid() {\n        return 'xxxxxxxx-xxxx-xxxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            const r = Math.random() * 16 | 0, v = c === 'x' ? r : ((r & 0x3) | 0x8);\n            return v.toString(16);\n        });\n    }\n}\n\nconst contexts = new LocalForageStore<Context>(\"context\");\nconst tasks = new LocalForageStore<Task>(\"task\");\nconst notes = new LocalForageStore<Note>(\"note\");\nconst projects = new LocalForageStore<Project>(\"project\");\nconst people = new LocalForageStore<Person>(\"person\");\n\nasync function getSyncKeys() {\n    const keys: string[] = [\n        ...(await contexts.getSyncKeys()),\n        ...(await tasks.getSyncKeys()),\n        ...(await notes.getSyncKeys()),\n        ...(await projects.getSyncKeys()),\n        ...(await people.getSyncKeys()),\n    ];\n\n    return keys;\n}\n\nasync function getBySyncKey(syncKey: string): Promise<Entity|null> {\n    const [type, id, versionId] = syncKey.split('/');\n\n    switch(type) {\n        case 'context':\n            return contexts.get(id, versionId);\n        case 'task':\n            return tasks.get(id, versionId);\n        case 'note':\n            return notes.get(id, versionId);\n        case 'project':\n            return projects.get(id, versionId);\n        case 'person':\n            return people.get(id, versionId);\n        default:\n            throw new Error('Unknown type: ' + type);\n    }\n}\n\nasync function importEntites(entities: Entity[]) {\n    for(const entity of entities) {\n        switch(entity.type) {\n            case 'context':\n                contexts.import(entity as Context);\n                break;\n            case 'task':\n                tasks.import(entity as Task);\n                break;\n            case 'note':\n                notes.import(entity as Note);\n                break;\n            case 'project':\n                projects.import(entity as Project);\n                break;\n            case 'person':\n                people.import(entity as Person);\n                break;\n            default:\n                throw new Error('Unknown type: ' + entity.type);\n        }\n    }\n}\n\nasync function importServerEntites(serverEntities: ServerEntity[]) {\n    for(const serverEntity of serverEntities) {\n        // const encryption = JSON.parse(serverEntity.encryption) as ServerEntityEncryption;\n        // const unencryptedData = await unwrapAndDecrypt(encryption.fingerprint, encryption.key, serverEntity.data, encryption.iv);\n        const unencryptedData = serverEntity.data;\n        let entity = JSON.parse(unencryptedData) as Entity;\n\n        entity.id = serverEntity.id;\n        entity.versionId = serverEntity.versionId;\n        entity.type = serverEntity.type;\n        entity.parentVersionId1 = serverEntity.parentVersionId1;\n        entity.parentVersionId2 = serverEntity.parentVersionId2;\n        entity.createdAt = serverEntity.createdAt;\n        entity.updatedAt = serverEntity.updatedAt;\n\n        switch(serverEntity.type) {\n            case 'context':\n                contexts.import(entity as Context);\n                break;\n            case 'task':\n                tasks.import(entity as Task);\n                break;\n            case 'note':\n                notes.import(entity as Note);\n                break;\n            case 'project':\n                projects.import(entity as Project);\n                break;\n            case 'person':\n                people.import(entity as Person);\n                break;\n            default:\n                throw new Error('Unknown type: ' + entity.type);\n        }\n    }\n}\n\nasync function exportServerEntities(syncKeys: string[]): Promise<ServerEntity[]> {\n    const result: ServerEntity[] = [];\n\n    for (const syncKey of syncKeys) {\n        const entity = await getBySyncKey(syncKey);\n\n        if (entity === null) {\n            console.warn(\"Entity with key not found: \" + syncKey)\n            continue;\n        }\n\n        const entityData = {...entity};\n\n        delete entityData.createdAt;\n        delete entityData.updatedAt;\n        delete entityData.id;\n        delete entityData.versionId;\n        delete entityData.type;\n        delete entityData.parentVersionId1;\n        delete entityData.parentVersionId2;\n\n        const unencryptedData = JSON.stringify(entityData);\n        // const encryptionResult = await encryptAndWrap((await getCurrentKey()).fingerprint, unencryptedData);\n        // const encryption: ServerEntityEncryption = { \n        //     fingerprint: encryptionResult.fingerprint, \n        //     key: encryptionResult.key,\n        //     iv: encryptionResult.iv\n        // };\n        // const encryptionJson = JSON.stringify(encryption);\n\n        const serverEntity: ServerEntity = {\n            id: entity.id,\n            versionId: entity.versionId,\n            type: entity.type,\n            parentVersionId1: entity.parentVersionId1,\n            parentVersionId2: entity.parentVersionId2,\n            createdAt: entity.createdAt,\n            updatedAt: entity.updatedAt,\n            data: unencryptedData,\n            // encryption: encryptionJson\n        };\n\n        result.push(serverEntity);\n    }\n\n    return result;\n}\n\nexport const db = {\n    contexts,\n    tasks,\n    notes,\n    projects,\n    people,\n    getSyncKeys,\n    importEntites,\n    importServerEntites,\n    exportServerEntities\n};","import * as React from 'react';\n\nexport const Loader: React.FC = (props) => {\n    return (\n        <div style={{display: 'flex', height: '100%', justifyContent: 'center', alignItems: 'center'}}>\n            <div style={{border: '1px solid #555', padding: '1rem 2rem', background: '#2e2e2e'}}>Loading...</div>\n        </div>\n    );\n}","import { Note } from \"./db/note\";\nimport { Task } from \"./db/task\";\nimport { Context } from \"./db/context\";\nimport { Project } from \"./db/project\";\nimport { Person } from \"./db/person\";\nimport React, { useContext, useEffect } from \"react\";\nimport { syncer } from \"./db/syncer\";\nimport { Loader } from \"./components/Loader\";\n\nexport class Data {\n    constructor(notes: Note[], tasks: Task[], contexts: Context[], projects: Project[], people: Person[]) {\n        this.notes = notes;\n        this.tasks = tasks;\n        this.contexts = contexts;\n        this.projects = projects;\n        this.people = people;\n    }\n\n    readonly notes: Note[];\n    readonly tasks: Task[];\n    readonly contexts: Context[];\n    readonly projects: Project[];\n    readonly people: Person[];\n};\n\ninterface DataContextState {\n    data: Data;\n    refreshData: () => void;\n}\n\nconst DataContext = React.createContext<DataContextState>({\n    data: null as any,\n    refreshData: () => {}\n});\n\nexport const DataProvider: React.FC = props => {\n    const [data, setData] = React.useState<Data>(null as any);\n\n    useEffect(() => {\n        async function init() {\n            syncer.registerDataListener(data => setData(data));\n            setData(await syncer.getData());\n            await syncer.startServerSync();\n            await syncer.ensureServerSyncEnqueued();\n        };\n        init();\n    }, []);\n\n    const refreshData = React.useCallback(async () => {\n        // setData(await syncer.getData());\n        syncer.startServerSync();\n    }, []);\n\n    const value: DataContextState = {\n        data,\n        refreshData\n    };\n\n    if (!data) {\n        return <Loader />;\n    }\n\n    return (\n      <DataContext.Provider value={value}>\n        {props.children}\n      </DataContext.Provider>\n    );\n};\n\nexport const useData = () => {\n    const value = useContext(DataContext);\n    return value;\n};","import { Dropbox } from 'dropbox';\nimport {createInstance} from 'localforage';\n\nconst store = createInstance({name: 'store-dropbox'})\n\nconst localClientId = 'jh9cnt92wi5e5my';\nconst prodClientId = 'li12ai4q2cs3dkc';\n\nexport const isLocalMode = window.location.host !== 'life.rasmuskl.dk';\n\nconst clientId = isLocalMode ? localClientId : prodClientId;\n\ntryStoreAccessKey();\n\nexport function signIn() {\n    const dropbox = new Dropbox({ clientId, fetch });\n    window.location.assign(dropbox.getAuthenticationUrl(window.location.toString()));\n}\n\nexport async function isSignedIn() {\n    return !!(await store.getItem('token'));\n}\n\ninterface DropboxSnapshot {\n    cursor: string|null;\n    files: Set<string>;\n}\n\nasync function getStateSnapshot() {\n    const snapshot = await store.getItem('snapshot') as DropboxSnapshot|null;\n    return snapshot || { cursor: null, files: new Set<string>() };\n}\n\nasync function setStateSnapshot(snapshot: DropboxSnapshot|null) {\n    if (!snapshot) {\n        await store.removeItem('snapshot');\n    } else {\n        await store.setItem('snapshot', snapshot);\n    }\n}\n\nexport async function listFiles(useSnapshot = true) {\n    if(!await isSignedIn()) {\n        throw new Error('Not authenticated');\n    }\n\n    const dropbox = new Dropbox({ accessToken: await getAccessToken(), fetch });\n    let snapshot: DropboxSnapshot = { cursor: null, files: new Set<string>() };\n\n    if (useSnapshot) {\n        snapshot = await getStateSnapshot();\n    }\n\n    let hasMore = true;\n\n    while(hasMore) {\n        if (snapshot.cursor) {\n            const fileListResult = await dropbox.filesListFolderContinue({ cursor: snapshot.cursor });\n            const results = fileListResult.entries.filter(e => e['.tag'] === 'file').map(e => e.path_lower?.substring(1)).filter(p => p) as string[];\n            snapshot.cursor = fileListResult.cursor;\n            for(const file of results) {\n                snapshot.files.add(file);\n            }\n            hasMore = fileListResult.has_more;\n        } else {\n            const fileListResult = await dropbox.filesListFolder({path: '', recursive: true});\n            const results = fileListResult.entries.filter(e => e['.tag'] === 'file').map(e => e.path_lower?.substring(1)).filter(p => p) as string[];\n            snapshot.cursor = fileListResult.cursor;    \n            for(const file of results) {\n                snapshot.files.add(file);\n            }\n            hasMore = fileListResult.has_more;\n        }\n\n        await setStateSnapshot(snapshot);\n    }\n\n    return snapshot.files;\n}\n\nexport function getAccessTokenFromUrl() {\n    const results = parseAuthFromHash(window.location.hash);\n    return results.access_token;\n}\n\nexport async function tryStoreAccessKey() {\n    const accessToken = getAccessTokenFromUrl();\n\n    if (accessToken) {\n        await store.setItem('token', accessToken);\n    }\n}\n\nexport async function uploadFile(path: string, contents: string) {\n    if(!await isSignedIn()) {\n        throw new Error('Not authenticated');\n    }\n\n    const dropbox = new Dropbox({ accessToken: await getAccessToken(), fetch });\n    await dropbox.filesUpload({\n        path: `/${path}`,\n        contents\n    });\n}\n\nexport async function getFile<T>(path: string) {\n    if(!await isSignedIn()) {\n        throw new Error('Not authenticated');\n    }\n\n    const dropbox = new Dropbox({ accessToken: await getAccessToken(), fetch });\n    const response = await dropbox.filesDownload({path: `/${path}` })\n    return new Promise<T>((resolve) => {\n        const blob: Blob = (response as any).fileBlob;\n        const reader = new FileReader();\n        reader.addEventListener(\"loadend\", function() {\n            const json = reader.result as string;\n            resolve(JSON.parse(json) as T);\n        });\n        reader.readAsText(blob);\n    });\n}\n\n\nasync function getAccessToken() {\n    return await store.getItem('token') as string;\n}\n\nfunction parseAuthFromHash(str: string) {\n    const ret: { [k: string]: string[] | string } = {};\n\n    if (typeof str !== 'string') {\n        return ret;\n    }\n\n    str = str.trim().replace(/^(\\?|#|&)/, '');\n\n    if (!str) {\n        return ret;\n    }\n\n    str.split('&').forEach(function (param) {\n        const parts = param.replace(/\\+/g, ' ').split('=');\n        let key = parts.shift();\n        let val = parts.length > 0 ? parts.join('=') : null;\n\n        key = decodeURIComponent(key!);\n        val = val ? decodeURIComponent(val) : null;\n\n        var retVal = ret[key];\n        if (ret[key] === undefined) {\n            ret[key] = val!;\n        } else if (Array.isArray(retVal)) {\n            retVal.push(val!);\n        } else {\n            ret[key] = [ret[key] as string, val!];\n        }\n    });\n\n    return ret;\n}","import { db, ServerEntity } from \"./db\";\nimport * as _ from \"lodash\";\nimport { Data } from \"../model\";\nimport {EventListener} from './EventListener';\nimport * as dropboxApi from '../lib/dropboxApi';\nimport pLimit from 'p-limit';\n\nexport enum SyncStatus {\n    Idle,\n    Syncing,\n    Failed,\n};\n\nexport interface SyncResult {\n    startAt: Date;\n    endAt: Date;\n    fetch: number;\n    send: number;\n    error: Error|null;\n}\n\nclass Syncer {\n    status = SyncStatus.Idle;\n    results: SyncResult[] = [];\n    data: Data|null = null;\n    intervalHandle: number|null = null;\n\n    syncListener = new EventListener<SyncStatus>();\n    dataListener = new EventListener<Data>();\n\n    constructor() {\n        db.notes.changeListener.register(note => {\n            if(!this.data) {\n                return;\n            }\n\n            const notes = _.orderBy(this.data.notes.filter(x => x.id !== note.id).concat(note), x => x.updatedAt);\n            this.data = new Data(notes, this.data.tasks, this.data.contexts, this.data.projects, this.data.people);\n            this.dataListener.trigger(this.data);\n        });\n\n        db.tasks.changeListener.register(task => {\n            if(!this.data) {\n                return;\n            }\n\n            const tasks = this.data.tasks.filter(x => x.id !== task.id).concat(task);\n            this.data = new Data(this.data.notes, tasks, this.data.contexts, this.data.projects, this.data.people);\n            this.dataListener.trigger(this.data);\n        });\n\n        db.contexts.changeListener.register(context => {\n            if(!this.data) {\n                return;\n            }\n\n            const contexts = this.data.contexts.filter(x => x.id !== context.id).concat(context);\n            this.data = new Data(this.data.notes, this.data.tasks, contexts, this.data.projects, this.data.people);\n            this.dataListener.trigger(this.data);\n        });\n\n        db.projects.changeListener.register(project => {\n            if(!this.data) {\n                return;\n            }\n\n            const projects = this.data.projects.filter(x => x.id !== project.id).concat(project);\n            this.data = new Data(this.data.notes, this.data.tasks, this.data.contexts, projects, this.data.people);\n            this.dataListener.trigger(this.data);\n        });\n\n        db.people.changeListener.register(person => {\n            if(!this.data) {\n                return;\n            }\n\n            const people = this.data.people.filter(x => x.id !== person.id).concat(person);\n            this.data = new Data(this.data.notes, this.data.tasks, this.data.contexts, this.data.projects, people);\n            this.dataListener.trigger(this.data);\n        });\n    }\n\n    registerSyncListener(listener: (status: SyncStatus) => void) {\n        this.syncListener.register(listener)\n    }\n\n    registerDataListener(listener: (status: Data) => void) {\n        this.dataListener.register(listener)\n    }\n\n    getResults() {\n        return this.results;\n    }\n\n    async getData() {\n        if (!this.data) {\n            this.data = await this.loadData();\n        }\n\n        return this.data;\n    }\n\n    async ensureServerSyncEnqueued() {\n        if (this.intervalHandle !== null) {\n            return;\n        }\n\n        this.intervalHandle = setInterval(async () => {\n            await this.startServerSync();\n        }, 60000) as any;\n    }\n\n    async startServerSync() {\n        if (this.status === SyncStatus.Syncing) {\n            return;\n        }\n\n        if(!dropboxApi.isSignedIn()) {\n            return;\n        }\n\n        const startAt = new Date();\n        this.status = SyncStatus.Syncing;\n        this.syncListener.trigger(this.status);\n\n        function difference<T>(setA: Set<T>, setB: Set<T>): Set<T> {\n            let _difference = new Set(setA);\n            for (const key of setB) {\n                _difference.delete(key);\n            }\n            return _difference;\n        }\n\n        try {\n            const files = await dropboxApi.listFiles();\n            const syncKeys = new Set(await db.getSyncKeys());\n    \n            const toSend = difference(syncKeys, files);\n            const toFetch = difference(files, syncKeys);\n    \n            for(const key of toSend) {\n                const entities = await db.exportServerEntities([key]);\n                await dropboxApi.uploadFile(key, JSON.stringify(entities[0]));\n            }\n    \n            const limit = pLimit(10);\n            const promises = [];\n    \n            for(const key of toFetch) {\n                promises.push(limit(async () => {\n                    const entity = await dropboxApi.getFile<ServerEntity>(key);\n                    await db.importServerEntites([entity]);\n                }));\n            }\n    \n            await Promise.all(promises);\n\n            this.results.push({ startAt, endAt: new Date(), error: null, fetch: toFetch.size, send: toSend.size })\n            this.status = SyncStatus.Idle;\n            this.syncListener.trigger(this.status);\n        } catch (e) {\n            this.status = SyncStatus.Failed;\n            this.results.push({ startAt, endAt: new Date(), error: e && e.message ? e.message : e, fetch: 0, send: 0 });\n            this.syncListener.trigger(this.status);\n        }\n    }\n\n    private async loadData(): Promise<Data> {\n        const contexts = db.contexts.getAll();\n        const tasks = await db.tasks.getAll();\n        const projects = db.projects.getAll();\n        const people = db.people.getAll();\n        const notes = _.orderBy(await db.notes.getAll(), x => x.updatedAt);\n        \n        return new Data(notes, await tasks, await contexts, await projects, await people);\n    }\n}\n\nexport const syncer = new Syncer();\n\n","import * as React from 'react';\n\nexport function ServiceWorkerUpdate() {\n    const [waitingServiceWorker, setWaitingServiceWorker] = React.useState<ServiceWorker|null>(null);\n\n    React.useEffect(() => {\n        async function componentDidMount() {\n            const registration = await navigator.serviceWorker.ready;\n            setWaitingServiceWorker(registration.waiting);\n            registration.addEventListener('updatefound', () => {\n                registration.installing?.addEventListener('statechange', (event: any) => {\n                    if (event.target.state === 'installed') {\n                        setWaitingServiceWorker(event.target);\n                    }\n                })\n            });\n            registration.update();\n        }\n        \n        componentDidMount();\n\n        setInterval(async () => {\n            const registration = await navigator.serviceWorker.ready;\n            registration.update();\n        }, 60 * 60 * 1000)\n    }, [])\n\n    if (!waitingServiceWorker) {\n        return null;\n    }\n\n    const updateServiceWorker = () => {\n        waitingServiceWorker.addEventListener('statechange', (event: any) => {\n            if (event.target.state === 'activated') {\n                window.location.reload()\n              }\n        })\n        waitingServiceWorker.postMessage({ type: 'SKIP_WAITING' })\n    };\n\n    return (\n        <div className=\"button\" onClick={updateServiceWorker}>Update</div>\n    );\n}","import * as React from 'react';\nimport './Layout.scss';\nimport { NavLink } from 'react-router-dom';\nimport { ServiceWorkerInstall } from './ServiceWorkerInstall';\nimport * as styles from '../layout/styles';\nimport { syncer, SyncStatus } from '../db/syncer';\nimport { cx } from 'emotion';\nimport { ServiceWorkerUpdate } from './ServiceWorkerUpdate';\n\nexport function isMobile() {\n    return window.matchMedia(\"(max-width: 768px)\").matches;\n}\n\nexport const Layout: React.FC<{}> = (props) => {\n    const [sidebar, setSidebar] = React.useState(() => !isMobile())\n    const [count, setCount] = React.useState(0);\n\n    React.useEffect(() => {\n        syncer.registerSyncListener(() => setCount(c => c +  1));\n    }, []);\n\n    function onNavClick() {\n        if(isMobile()) {\n            setSidebar(false);\n        }\n    }\n\n    return <>\n        <section style={{display: 'flex', overflow: 'hidden', height: '100%'}}>\n            <React.Fragment key={count} />\n            <div className={cx('navbar')}>\n                <div className={cx(styles.horizontalSpace('1rem'))}>\n                    {!sidebar && (\n                        <>\n                            <NavLink className={cx('button', styles.hoverGlow)} to={ '/' } onClick={onNavClick} exact activeClassName='is-active'>Notes</NavLink>\n                            <NavLink className={cx('button', styles.hoverGlow)} to={ '/tasks' } onClick={onNavClick} exact activeClassName='is-active'>Tasks</NavLink>\n                        </>\n                    )}\n                </div>\n                <div className={cx(styles.horizontalSpace('1rem'))}>\n                    <NavLink className=\"button\" to=\"/sync\">Sync: {SyncStatus[syncer.status]}</NavLink>\n                    <ServiceWorkerUpdate />\n                    <ServiceWorkerInstall />\n                    <button className=\"button\" onClick={() => setSidebar(!sidebar)}>\n                        Menu\n                    </button>\n                </div>\n            </div>\n\n            <div className={cx('sidebar', 'list')} style={{overflowY: 'auto', paddingTop: 52, height: '100%', width: sidebar ? undefined : 0, overflowX: 'hidden'}}>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/' } onClick={onNavClick} exact activeClassName='is-active'>Notes</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/notes/daily' } onClick={onNavClick} exact activeClassName='is-active'>Daily Notes</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/tasks' } onClick={onNavClick} exact activeClassName='is-active'>Tasks</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/projects' } onClick={onNavClick} exact activeClassName='is-active'>Projects</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/contexts' } onClick={onNavClick} exact activeClassName='is-active'>Contexts</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/people' } onClick={onNavClick} exact activeClassName='is-active'>People</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/playground' } onClick={onNavClick} exact activeClassName='is-active'>Playground</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/stats' } onClick={onNavClick} exact activeClassName='is-active'>Stats</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/settings' } onClick={onNavClick} exact activeClassName='is-active'>Settings</NavLink>\n            </div>\n\n            <div className=\"main\" style={{paddingTop: 52}}>\n                { props.children }\n            </div>\n        </section>\n    </>;\n}\n","import { Entity } from \"./db\";\n\nexport enum ProjectState {\n    Active = 'Active',\n    Incubated = 'Incubated',\n    Completed = 'Completed',\n    Dropped = 'Dropped',\n}\n\nexport interface Project extends Entity {\n    type: 'project',\n    title: string;\n    contextId: string|null;\n    state: ProjectState;\n}","import * as React from 'react';\nimport * as styles from '../layout/styles';\nimport { cx } from 'emotion';\n\nexport const ToolSection: React.SFC<{ verticalAround?: boolean }> = (props) => {\n    let verticalAround = props.verticalAround;\n\n    if (verticalAround === undefined) {\n        verticalAround = true;\n    }\n\n    return (\n        <div className={cx(styles.horizontalSpace('8px', true), styles.verticalSpace('8px', verticalAround))}>{props.children}</div>\n    );\n}","import { Data } from \"../model\";\nimport * as _ from 'lodash';\nimport { Context } from \"../db/context\";\n\nexport interface NestedContexts {\n    topContexts: Context[];\n    nestedContexts: {[id: string]: Context[]};\n    taskCounts: {[id: string]: number};\n}\n\nexport function getNestedContexts(data: Data): NestedContexts {\n    const grouped = _.groupBy(data.contexts, x => x.contextId);\n    const taskCounts = _.countBy(data.tasks.filter(x => x.state === 'active'), x => x.contextId);\n\n    return {\n        topContexts: data.contexts.filter(x => !x.contextId),\n        nestedContexts: grouped,\n        taskCounts\n    };\n}\n\nexport function getFilteredContextIds(contextId: string|null, data: Data) {\n    const contexts = getNestedContexts(data);\n\n    if (contextId) {\n        const contextIds = [contextId];\n        const queue = [contextId];\n\n        while (queue.length) {\n            const next = queue.pop();\n\n            if (!next) {\n                break;\n            }\n\n            for(const nested of contexts.nestedContexts[next] || []) {\n                contextIds.push(nested.id);\n                queue.push(nested.id);\n            }\n        }\n\n        return contextIds;\n    } else {\n        return data.contexts.map(c => c.id);\n    }\n};","import { Entity } from \"./db\";\n\nexport enum ContextState {\n    Active = 'Active',\n    Inactive = 'Inactive',\n}\n\nexport interface Context extends Entity {\n    type: 'context';\n    title: string;\n    contextId: string|null;\n    state: ContextState;\n}","import * as React from \"react\";\n\nexport const useQueryState = (initialValue: string|null, queryParam: string): [string|null, (value: string|null) => void] => {\n    const [rawValue, setRawValue] = React.useState(() => {\n        const urlParams = new URLSearchParams(window.location.search);\n        return urlParams.get(queryParam) || initialValue;\n    });\n\n    const setValue = (value: string|null) => {\n        const urlParams = new URLSearchParams(window.location.search);\n        setRawValue(value);\n        if (!value || value === initialValue) {\n            urlParams.delete(queryParam);\n        } else {\n            urlParams.set(queryParam, value);\n        }\n\n        const queryString = urlParams.toString();\n\n        if (queryString.length) {\n            window.history.replaceState(null, '', `?${queryString}`);\n        } else {\n            window.history.replaceState(null, '', window.location.pathname);\n        }\n\n        window.dispatchEvent(new (window as any).CustomEvent('popstate'));\n    };\n\n    return [rawValue, setValue];\n};\n\nexport const useQueryStateT = <T extends {}>(initialValue: T, queryParam: string, convertTo: (value: string|null) => T, convertFrom: (value: T) => string|null): [T, (value: T) => void] => {\n    const [rawValue, setRawValue] = React.useState<T>(() => {\n        const urlParams = new URLSearchParams(window.location.search);\n        return convertTo(urlParams.get(queryParam)) || initialValue;\n    });\n\n    const setValue = (value: T) => {\n        const urlParams = new URLSearchParams(window.location.search);\n        setRawValue(value);\n        if (!value || value === initialValue) {\n            urlParams.delete(queryParam);\n        } else {\n            const strValue = convertFrom(value);\n            if (strValue) {\n                urlParams.set(queryParam, strValue);\n            } else {\n                urlParams.delete(queryParam);\n            }\n        }\n\n        const queryString = urlParams.toString();\n\n        if (queryString.length) {\n            window.history.replaceState(null, '', `?${queryString}`);\n        } else {\n            window.history.replaceState(null, '', window.location.pathname);\n        }\n\n        window.dispatchEvent(new (window as any).CustomEvent('popstate'));\n    };\n\n    return [rawValue, setValue];\n};\n\nexport const useQueryStateBoolean = (initialValue: boolean, queryParam: string) => {\n    return useQueryStateT<boolean>(initialValue, queryParam, x => x === 'true', x => x === initialValue ? null : x.toString());\n};","import * as React from 'react';\nimport { isMobile } from './Layout';\nimport * as styles from '../layout/styles';\nimport { cx } from 'emotion';\n\nexport const SettingsCompactor : React.FC<{className?: string, alwaysVisible?: () => JSX.Element, mobileOnly?: () => JSX.Element, wideStyle?:React.CSSProperties}> = props => {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const alwaysVisible = props.alwaysVisible ? props.alwaysVisible() : null;\n\n    if(!isMobile()) {\n        return (\n            <div style={{display: 'flex', alignItems: 'center', ...props.wideStyle}} className={styles.horizontalSpace('.3rem')}>\n                {alwaysVisible}\n                {props.children}\n            </div>\n        );\n    }\n\n    const mobileOnly = props.mobileOnly ? props.mobileOnly() : null;\n\n    if(!expanded) {\n        return (\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\n                {alwaysVisible}\n                {mobileOnly}\n                <div className=\"button\" onClick={() => setExpanded(true)}>S</div>\n            </div>\n        );\n    }\n\n    return (\n        <div style={{display: 'flex', flexDirection: 'column'}} className={styles.verticalSpace('.3rem')}>\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\n                {alwaysVisible}\n                <div className=\"button\" onClick={() => setExpanded(false)}>S</div>\n            </div>\n            <div className={cx(styles.verticalSpace('.3rem'), props.className)}>\n                {props.children}\n            </div>\n        </div>\n    );\n};","import * as React from 'react';\nimport { useData } from '../model';\n\nexport const ContextTag: React.FC<{contextId: string|null}> = (props) => {\n    const {data} = useData();\n\n    if (!props.contextId) {\n        return null;\n    }\n\n    const context = data.contexts.find(p => p.id === props.contextId);\n\n    if (!context) {\n        return null;\n    }\n\n    return <div className=\"tag is-context\">{context.title}</div>;\n}","import * as React from 'react';\nimport { useData } from '../model';\nimport { ContextState, Context } from '../db/context';\nimport * as styles from '../layout/styles';\nimport * as ContextActions from '../lib/contextActions';\nimport { cx } from 'emotion';\n\nexport const ContextBar: React.FC<{contextId: string|null, onChange: (contextId: string|null) => void, showTaskCount?: boolean}> = (props) => {\n    const {data} = useData();\n\n    const nestedContexts = ContextActions.getNestedContexts(data);\n\n    const renderListContext = (context: Context, contexts: ContextActions.NestedContexts, depth = 0) => {\n        if (context.state && context.state === ContextState.Inactive) {\n            return <React.Fragment key={context.id}></React.Fragment>;\n        }\n\n        return (\n            <React.Fragment key={context.id}>\n                <div onClick={() => props.onChange(context.id)} style={{paddingLeft: 10 + depth * 10, background: props.contextId === context.id ? \"#3f3f3f\" : undefined}} className={cx('item', styles.hoverGlow, styles.cursorPointer)}>\n                    {context.title} {props.showTaskCount && <span style={{color: '#999'}}>{contexts.taskCounts[context.id]}</span>}\n                </div>\n                {contexts.nestedContexts[context.id] && contexts.nestedContexts[context.id].map(c => (\n                    renderListContext(c, contexts, depth + 1)\n                ))}\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <div style={{borderRight: '1px solid #666', width: 200}}>\n            <div className=\"list\">\n                <div className={cx('item', styles.hoverGlow, styles.cursorPointer)} style={{paddingLeft: 10, background: props.contextId === null ? \"#3f3f3f\" : undefined}} onClick={() => props.onChange(null)}>All</div>\n                {nestedContexts.topContexts.map(i => renderListContext(i, nestedContexts))}\n            </div>\n        </div>\n    )\n}","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as styles from '../layout/styles';\nimport { useData } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport * as ContextActions from '../lib/contextActions';\nimport { isMobile } from '../components/Layout';\nimport { Task } from '../db/task';\nimport { ProjectState, Project } from '../db/project';\nimport { db } from '../db/db';\nimport moment from 'moment';\nimport { useQueryState } from '../lib/UseQueryState';\nimport { SettingsCompactor } from '../components/SettingsCompactor';\nimport { ContextTag } from '../components/ContextTag';\nimport { ContextBar } from '../components/ContextBar';\nimport { cx } from 'emotion';\nimport _ from 'lodash';\n\ninterface Perspective {\n    id: string;\n    title: string;\n    groupedProject: boolean;\n    groupedContext: boolean;\n}\n\nlet perspectives: Perspective[] = [\n    { id: '1', title: 'All', groupedProject: false, groupedContext: false },\n    { id: '2', title: 'Grouped', groupedProject: false, groupedContext: true },\n    { id: '3', title: 'Grouped Project', groupedProject: true, groupedContext: false }\n]\n\nlet defaultPerspective = perspectives[1];\n\ninterface TaskFilters {\n    showCompleted: boolean;\n    showContextBar: boolean;\n    includeNested: boolean;\n    showDeferred: boolean;\n    showIncubated: boolean;\n}\n\nexport const TaskPage: React.FC<{}> = (props) => {\n    const {data, refreshData} = useData();\n    const [text, setText] = React.useState('');\n    const [options, setOptions] = React.useState<TaskFilters>({\n        showCompleted: false,\n        showDeferred: false,\n        showIncubated: false,\n        showContextBar: isMobile() ? false : true,\n        includeNested: true,\n    });\n\n    const [contextId, setContextId] = useQueryState(null, 'context');\n    const [projectId, setProjectId] = useQueryState(null, 'project');\n    const [perspectiveId, setPerspectiveId] = useQueryState('2', 'perspective');\n\n    const onKeyPress = async (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter') {\n            await db.tasks.create({\n                title: text,\n                contextId: contextId,\n                projectId: projectId,\n                content: null,\n                state: 'active',\n                stateChangedAt: new Date().toISOString(),\n                noteId: null,\n            });\n\n            setText('');\n            refreshData();\n        }\n    }\n\n    const onCompleteChange = async (task: Task, e: React.ChangeEvent<HTMLInputElement>) => {\n        task.state = task.state === 'completed' ? 'active' : 'completed';\n        task.stateChangedAt = new Date().toISOString();\n        await db.tasks.save(task);\n        refreshData();\n    }\n\n    const renderProject = (task: Task) => {\n        const project = data.projects.find(p => p.id === task.projectId);\n\n        if (project) {\n            return <div className=\"tag is-info\">{project.title}</div>;\n        }\n\n        return null;\n    };\n\n    const renderDeferred = (task: Task) => {\n        if (task.deferredUntil && new Date(task.deferredUntil) > new Date()) {\n            return <div className=\"tag is-primary\" title={`${moment(task.deferredUntil).format('YYYY-MM-DD')}`}>deferred {moment(task.deferredUntil).fromNow(true)}</div>;\n        }\n        return null;\n    };\n\n    const renderNote = (task: Task) => {\n        if (task.noteId) {\n            return <div className=\"tag is-primary\" >N</div>;\n        }\n        return null;\n    };\n\n    const renderTitle = (title: string) => {\n        const pattern = /(https?:\\/\\/[^\\s]+)/;\n        return title.split(pattern).map((c, i) => {\n            if (c.match(pattern)) {\n                let title = c.replace(/https?:\\/\\//, '');\n                title = title.replace(/\\/.*/, '/...');\n                return <a key={i} href={c} onClick={e => { e.stopPropagation(); }} target=\"_blank\"  rel=\"noopener noreferrer\" className=\"button is-small is-link\" style={{display: 'inline-block', marginLeft: '5px', marginRight: '5px'}}>{title}</a>;\n            }\n\n            return <span key={i}>{c}</span>;\n        });\n    };\n\n    const filterTasks = (complete: boolean, contexts: ContextActions.NestedContexts) => {\n        let tasks = data.tasks;\n\n        if (complete) {\n            tasks = tasks.filter(t => t.state === 'completed')\n        } else {\n            tasks = tasks.filter(t => t.state !== 'completed')\n        }\n\n        if (projectId) {\n            tasks = tasks.filter(t => t.projectId === projectId);\n        }\n\n        if (!options.showDeferred) {\n            tasks = tasks.filter(t => t.deferredUntil == null || new Date(t.deferredUntil) < new Date());\n        }\n\n        if (!options.showIncubated) {\n            tasks = tasks.filter(t => t.state !== 'incubated');\n\n            const incubatedProjectIds = data.projects.filter(p => p.state === ProjectState.Incubated).map(p => p.id);\n            tasks = tasks.filter(t => !t.projectId || incubatedProjectIds.indexOf(t.projectId) === -1);\n        }\n\n        if (contextId) {\n            const contextIds = ContextActions.getFilteredContextIds(contextId, data);\n            tasks = tasks.filter(t => t.contextId && contextIds.indexOf(t.contextId) !== -1);\n        }\n\n        return tasks.sort((a, b) =>  b.createdAt! < a.createdAt! ?  -1 : b.createdAt! > a.createdAt! ? 1 : 0);\n    }\n\n    const renderTask = (task: Task, skipProjectContext = false) => {\n        let source: string|null = null;\n        if (window.location.search.length) {\n            const urlParams = new URLSearchParams(window.location.search);\n            source = `?source=${encodeURIComponent(`${window.location.pathname}?${urlParams.toString()}`)}`\n        }\n\n        return (\n            <NavLink key={task.id} to={`/tasks/${task.id}${source ? source : ''}`} className={cx('item', 'task', styles.hoverGlow)}>\n                <div className=\"task-checkbox\">\n                    <input type=\"checkbox\" style={{display: 'block', padding: 10}} checked={task.state === 'completed'} onClick={e => e.preventDefault()} onChange={e => onCompleteChange(task, e)}/>\n                </div>\n                <div className=\"task-title\" style={{color: task.state === 'incubated' ? '#999' : undefined}}>\n                    {task.state === 'completed' ? <span style={{textDecoration: 'line-through'}}>{renderTitle(task.title)}</span> : renderTitle(task.title)}\n                    {task.state === 'incubated' ? <span> [Incubated]</span> : null}\n                </div>\n                <div className=\"task-details\">\n                    <div className=\"tags\">\n                        {renderNote(task)}\n                        {renderDeferred(task)}\n                        {!skipProjectContext && <ContextTag contextId={task.contextId} /> }\n                        {!skipProjectContext && renderProject(task)}\n                    </div>\n                </div>\n            </NavLink>\n        );\n    };\n\n    const perspective = perspectives.find(x => x.id === perspectiveId) || defaultPerspective;\n    const nestedContexts = ContextActions.getNestedContexts(data);\n\n    let taskBlock: JSX.Element[] = [];\n\n    if (perspective.groupedContext) {\n        const filteredContextIds: (string|null)[] = ContextActions.getFilteredContextIds(contextId, data);\n\n        if (!contextId) {\n            filteredContextIds.push(null);\n        }\n\n        for (const contextId of filteredContextIds) {\n            const context = data.contexts.find(p => p.id === contextId);\n\n            let tasks = filterTasks(false, nestedContexts);\n\n            if (contextId) {\n                if (!context) {\n                    continue;\n                }\n\n                tasks = tasks.filter(t => t.contextId === contextId);\n\n                if (!tasks.length) {\n                    continue;\n                }\n\n                taskBlock.push(\n                    <div key={contextId} style={{display: 'flex', justifyContent: 'space-between', padding: '.6rem', background: '#00503C', cursor: 'pointer'}} onClick={() => setContextId(context.id)}>\n                        {context.title}\n                        <NavLink className=\"button small\" to={`/contexts/${context.id}`}>Edit</NavLink>\n                    </div>\n                )\n            } else {\n                tasks = tasks.filter(t => t.contextId === contextId);\n\n                if (!tasks.length) {\n                    continue;\n                }\n\n                taskBlock.push(<div key={'no-context'} style={{padding: '.6rem', background: '#00503C'}}>No Context</div>)\n            }\n\n            let stateOrder = [ProjectState.Active, ProjectState.Incubated, ProjectState.Completed, ProjectState.Dropped];\n    \n            const emptyActiveProjects: Project[] = [];\n    \n            let filteredProjects = data.projects;\n    \n            if (projectId !== null) {\n                filteredProjects = filteredProjects.filter(p => p.id === projectId);\n            }\n    \n            filteredProjects.sort((a, b) => stateOrder.indexOf(a.state) - stateOrder.indexOf(b.state)).forEach(p => {\n                let projectTasks = tasks.filter(t => t.projectId === p.id);\n    \n                if (!projectTasks.length) {\n                    if (p.state === ProjectState.Active) {\n                        if (contextId) {\n                            if (p.contextId && filteredContextIds.indexOf(p.contextId) !== -1) {\n                                emptyActiveProjects.push(p);\n                            }\n                        } else {\n                            emptyActiveProjects.push(p);\n                        }\n                    }\n                    return;\n                }\n    \n                taskBlock.push(\n                    <React.Fragment key={`p-${p.id}`}>\n                        <div className=\"header link\" onClick={() => { setProjectId(p.id); setContextId(p.contextId); }}>\n                            {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''}\n                            <div style={{display: 'flex'}}>\n                                <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\n                            </div>\n                        </div>\n                        {projectTasks.map(t => renderTask(t, true))}\n                    </React.Fragment>\n                );\n            });\n    \n            const noProjectTasks = tasks.filter(t => t.projectId === null);\n    \n            if (noProjectTasks.length) {\n                taskBlock.push(\n                    <React.Fragment key={`no-p-${contextId}`}>\n                        <div className=\"header\">No Project</div>\n                        {noProjectTasks.map(t => renderTask(t, true))}\n                    </React.Fragment>\n                );\n            }\n    \n            for(const p of emptyActiveProjects) {\n                if (p.contextId !== contextId) {\n                    continue;\n                }\n\n                taskBlock.push(\n                    <div key={p.id} className=\"header link\" onClick={() => { setProjectId(p.id); setContextId(p.contextId); }}>\n                        {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''} [Empty]\n                        <div style={{display: 'flex'}}>\n                            <div className=\"tags\">\n                                <ContextTag contextId={p.contextId} />\n                            </div>\n                            <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\n                        </div>\n                    </div>\n                );\n            }\n        }\n\n        if (options.showCompleted) {\n            taskBlock.push(\n                <React.Fragment key=\"completed\">\n                    <div className=\"header\">Completed</div>\n                    {_.orderBy(filterTasks(true, nestedContexts), x => x.stateChangedAt, 'desc').map(t => renderTask(t))}\n                </React.Fragment>\n            );\n        }\n\n    } else if (perspective.groupedProject) {\n        let tasks = filterTasks(false, nestedContexts);\n\n        let stateOrder = [ProjectState.Active, ProjectState.Incubated, ProjectState.Completed, ProjectState.Dropped];\n\n        const emptyActiveProjects: Project[] = [];\n\n        let filteredProjects = data.projects;\n\n        if (projectId !== null) {\n            filteredProjects = filteredProjects.filter(p => p.id === projectId);\n        }\n\n        const filteredContextIds = ContextActions.getFilteredContextIds(contextId, data);\n\n        filteredProjects.sort((a, b) => stateOrder.indexOf(a.state) - stateOrder.indexOf(b.state)).forEach(p => {\n            let projectTasks = tasks.filter(t => t.projectId === p.id);\n\n            if (!projectTasks.length) {\n                if (p.state === ProjectState.Active) {\n                    if (contextId) {\n                        if (p.contextId && filteredContextIds.indexOf(p.contextId) !== -1) {\n                            emptyActiveProjects.push(p);\n                        }\n                    } else {\n                        emptyActiveProjects.push(p);\n                    }\n                }\n                return;\n            }\n\n            taskBlock.push(\n                <React.Fragment key={`p-${p.id}`}>\n                    <div className=\"header link\" onClick={() => { setProjectId(p.id); setContextId(p.contextId); }}>\n                        {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''}\n                        <div style={{display: 'flex'}}>\n                            <div className=\"tags\">\n                                <ContextTag contextId={p.contextId} />\n                            </div>\n                            <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\n                        </div>\n                    </div>\n                    {projectTasks.map(t => renderTask(t))}\n                </React.Fragment>\n            );\n        });\n\n        const noProjectTasks = tasks.filter(t => t.projectId === null);\n\n        if (noProjectTasks.length) {\n            taskBlock.push(\n                <React.Fragment key=\"no-p\">\n                    <div className=\"header\">No Project</div>\n                    {noProjectTasks.map(t => renderTask(t))}\n                </React.Fragment>\n            );\n        }\n\n        for(const p of emptyActiveProjects) {\n            taskBlock.push(\n                <React.Fragment key={`p-${p.id}`}>\n                    <div className=\"header link\" onClick={() => { setProjectId(p.id); setContextId(p.contextId); }}>\n                        {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''} [Empty]\n                        <div style={{display: 'flex'}}>\n                            <div className=\"tags\">\n                                <ContextTag contextId={p.contextId} />\n                            </div>\n                            <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\n                        </div>\n                    </div>\n                </React.Fragment>\n            );\n        }\n\n        if (options.showCompleted) {\n            taskBlock.push(\n                <React.Fragment key=\"completed\">\n                    <div className=\"header\">Completed</div>\n                    {filterTasks(true, nestedContexts).map(t => renderTask(t))}\n                </React.Fragment>\n            );\n        }\n    } else {\n        taskBlock.push(\n            <React.Fragment key=\"tasks\">\n                {filterTasks(false, nestedContexts).map(t => renderTask(t))}\n                {options.showCompleted && <>\n                    <div className=\"header\">Completed</div>\n                    {filterTasks(true, nestedContexts).map(t => renderTask(t))}\n                </>}\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <div style={{display: 'flex', height: '100%'}}>\n            {options.showContextBar && <ContextBar contextId={contextId} onChange={setContextId} showTaskCount={true} />}\n            <div style={{width: '100%'}}>\n                <ToolSection>\n                    <SettingsCompactor alwaysVisible={() => (\n                        <div className=\"button\" onClick={() => { setContextId(null); setProjectId(null); }}>R</div>\n                    )} mobileOnly={() => (\n                        <div className=\"button\" style={{marginLeft: 'auto', marginRight: 8}} onClick={() => setOptions({ ...options, showContextBar: !options.showContextBar })}>C</div>\n                    )}>\n                        <select style={{padding: '0.3rem', display: 'block'}} value={contextId || ''} onChange={e => setContextId(e.target.value === '' ? null : e.target.value) }>\n                            <option value=\"\">All contexts</option>\n                            {data.contexts.map(c => (\n                                <option key={c.id} value={c.id}>{c.title}</option>\n                            ))}\n                        </select>\n                        <select style={{padding: '0.3rem', display: 'block'}} value={projectId || ''} onChange={e => setProjectId(e.target.value === '' ? null : e.target.value)}>\n                            <option value=\"\">All projects</option>\n                            {data.projects.filter(c => c.state === ProjectState.Active).map(c => (\n                                <option key={c.id} value={c.id}>{c.title}</option>\n                            ))}\n                        </select>\n                        <select style={{padding: '0.3rem', display: 'block'}} value={perspectiveId || ''} onChange={e => setPerspectiveId(e.target.value === '' ? null : e.target.value)}>\n                            <option value=\"\">Select Perspective</option>\n                            {perspectives.map(c => (\n                                <option key={c.id} value={c.id}>{c.title}</option>\n                            ))}\n                        </select>\n                        <div>\n                            <input id=\"completed-box\" type=\"checkbox\" checked={options.showCompleted} onChange={() => setOptions({ ...options, showCompleted: !options.showCompleted })} />\n                            <label htmlFor=\"completed-box\">Show completed</label>\n                        </div>\n                        <div>\n                            <input id=\"deferred-box\" type=\"checkbox\" checked={options.showDeferred} onChange={() => setOptions({ ...options, showDeferred: !options.showDeferred })} />\n                            <label htmlFor=\"deferred-box\">Show deferred</label>\n                        </div>\n                        <div>\n                            <input id=\"incubated-box\" type=\"checkbox\" checked={options.showIncubated} onChange={() => setOptions({ ...options, showIncubated: !options.showIncubated })} />\n                            <label htmlFor=\"incubated-box\">Show incubated</label>\n                        </div>\n                        <div>\n                            <input id=\"context-box\" type=\"checkbox\" checked={options.showContextBar} onChange={() => setOptions({ ...options, showContextBar: !options.showContextBar })} />\n                            <label htmlFor=\"context-box\">Show context bar</label>\n                        </div>\n                        <div>\n                            <input id=\"include-nested-box\" type=\"checkbox\" checked={options.includeNested} onChange={() => setOptions({ ...options, includeNested: !options.includeNested })} />\n                            <label htmlFor=\"include-nested-box\">Include nested contexts</label>\n                        </div>\n                    </SettingsCompactor>\n                    <input type=\"text\" className=\"input is-large is-wide\" placeholder=\"Add task...\" value={text} onChange={e => setText(e.target.value)} onKeyPress={onKeyPress} />\n                </ToolSection>\n                <div className=\"list\">\n                    {taskBlock}\n                </div>\n            </div>\n        </div>\n    );\n};\n","import { Entity } from \"./db\";\nimport moment from \"moment\";\n\nexport type NoteMode = 'markdown'|'tree';\n\nexport interface Note extends Entity {\n    type: 'note',\n    mode: NoteMode|null;\n    title: string;\n    tags: string;\n    content: string;\n    contextId: string|null;\n    noteFor: Reference|null;\n    dailyDate: string|null;\n};\n\nexport interface Reference {\n    type: string;\n    id: string;\n};\n\nexport interface HasNote extends Entity {\n    noteId: string|null;\n}\n\nexport function getNoteTitle(note: Pick<Note, 'dailyDate'|'title'|'content'>) {\n    if (note.dailyDate) {\n        return `Daily - ${moment(note.dailyDate).format('MMMM Do, YYYY')}`;\n    }\n\n    if (note.title && note.title.length) {\n        return note.title;\n    }\n\n    const parsedTitle = /# (.+)/.exec(note.content);\n\n    if (parsedTitle && parsedTitle.length > 1) {\n        return parsedTitle[1];\n    }\n\n    return '';\n}\n\nexport const noteReferenceRegex = /\\[\\[([^\\]]+)\\]\\]/ig;\n\nfunction escapeRegExp(str: string) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nexport function getNoteContextTitlePrefixRegExp(contextTitle: string) {\n    return new RegExp(`^${escapeRegExp(contextTitle)}/`, 'i')\n}\n\nexport function getNoteTitleMatchRegExp(reference: string) {\n    return new RegExp(`^${escapeRegExp(reference)}$`, 'i')\n}\n\nexport function getNoteReferenceMatchRegExp(reference: string) {\n    return new RegExp(`\\\\[\\\\[${escapeRegExp(reference)}\\\\]\\\\]`, 'i')\n}\n\nexport function getNoteAliasReferenceMatchRegExp(alias: string) {\n    return new RegExp(`\\\\B@${escapeRegExp(alias)}`, 'i')\n}\n\nexport function extractReferences(text: string) {\n    if(!text) {\n        return [];\n    }\n\n    const regex = /\\[\\[([^\\]]+)\\]\\]/ig;\n    const results = [];\n    for(const match of text.matchAll(regex)) {\n        results.push(match[1])\n    }\n\n    return results;\n}\n\nexport function extractAllReferences(notes: Note[]) {\n    const results: { [reference: string]: { title: string, contextId: string|null, updatedAt: Date } } = {};\n\n    function getKey(title: string, contextId: string|null) {\n        return `${contextId}-${title.toLowerCase()}`\n    }\n\n    const existing = new Set<string>(notes.filter(n => n.title).map(n => getKey(n.title, n.contextId)));\n\n    for(const note of notes) {\n        const references = extractReferences(note.content);\n\n        for(const reference of references) {\n            const key = getKey(reference, note.contextId);\n            \n            if (existing.has(key)) {\n                continue;\n            }\n            \n            const existingResult = results[key];\n\n            if (existingResult && existingResult.updatedAt > new Date(note.updatedAt)) {\n                continue;\n            }\n\n            results[key] = {\n                title: reference,\n                contextId: note.contextId,\n                updatedAt: new Date(note.updatedAt)\n            };\n        }\n    }\n\n    return Object.values(results);\n}","import { Entity } from \"./db\";\nimport { HasNote } from \"./note\";\n\nexport interface Person extends Entity, HasNote {\n    type: 'person';\n    name: string;\n    alias: string|null;\n    birthday: string|null;\n}\n\nexport const mentionRegex = /\\B(@[^\\s()[\\].,!:]+)/g;\n\nexport function convertNameToAlias(name: string) {\n    if(!name) {\n        return null;\n    }\n\n    return name.toLowerCase().replace(/ /g, '_');\n}\n\nexport function getAlias(person: Person) {\n    return `${person.alias || convertNameToAlias(person.name)}`;\n}","import * as React from 'react';\nimport marked from 'marked';\nimport '../github-markdown.css';\nimport { useData } from '../model';\nimport { getNoteTitleMatchRegExp, getNoteContextTitlePrefixRegExp, noteReferenceRegex } from '../db/note';\nimport {useHistory} from 'react-router-dom';\nimport { mentionRegex, getAlias } from '../db/person';\n\n\nexport const MarkedViewer: React.FC<{ markdown: string; contextId: string|null }> = props => {\n    const history = useHistory();\n    const {data} = useData();\n\n    (window as any).lifeNavigate = function(url: string) {\n        history.push(url);\n        return false;\n    };\n\n    let markdown = props.markdown.replace(noteReferenceRegex, (_, group1) => {\n        let matchContextId = props.contextId;\n        let matchTitle = group1;\n\n        const prefixContext = data.contexts.find(x => getNoteContextTitlePrefixRegExp(x.title).test(group1));\n        if (prefixContext) {\n            matchTitle = matchTitle.substring(prefixContext.title.length + 1);\n            matchContextId = prefixContext.id;\n        }\n\n        const referenceRegExp = getNoteTitleMatchRegExp(matchTitle);\n        const note = data.notes.find(x => x.contextId === matchContextId && referenceRegExp.test(x.title));\n\n        if (note) {\n            const url = `/notes/${note.id}`;\n            return `<span style=\"color: #444\">[[ </span><a onclick=\"return lifeNavigate('${url}')\" href=\"${url}\">${group1}</a><span style=\"color: #444\"> ]]</span>`;\n        }\n\n        const url = `/notes/virtual?title=${encodeURIComponent(group1)}${props.contextId ? `&context=${props.contextId}` : ''}&source=${encodeURIComponent(`${window.location.pathname}`)}`;\n        return `<span style=\"color: #444\">[[ </span><a onclick=\"return lifeNavigate('${url}')\" href=\"${url}\">${group1}</a><span style=\"color: #444\"> ? ]]</span>`;\n    });\n\n    markdown = markdown.replace(mentionRegex, (_, group1) => {\n        const person = data.people.find(x => `@${getAlias(x)}` === group1);\n\n        if (person) {\n            const url = `/people/${person.id}?source=${encodeURIComponent(`${window.location.pathname}`)}`;\n            return `<a onclick=\"return lifeNavigate('${url}')\" href=\"${url}\" style=\"background: #333; padding: 0px 4px; border-radius: 4px\">${person.name}</a>`;\n        }\n\n        const url = `/people/virtual?alias=${encodeURIComponent(group1)}&source=${encodeURIComponent(`${window.location.pathname}`)}`;\n        return `<a onclick=\"return lifeNavigate('${url}')\" href=\"${url}\" style=\"background: #333; padding: 0px 4px; border-radius: 4px\">${group1}</a><span style=\"color: #444\"> ?</span>`;\n    });\n\n    const html = marked(markdown);\n    return (\n        <div className=\"marked-viewer note markdown-body\" dangerouslySetInnerHTML={{ __html: html }}></div>\n    );\n};","import * as React from 'react';\nimport { MarkedViewer } from './MarkedViewer';\nimport * as styles from '../layout/styles';\nimport { NoteMode } from '../db/note';\n\nimport AceEditor from \"react-ace\";\nimport {textCompleter, snippetCompleter, keyWordCompleter} from \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/mode-markdown\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport { Data } from '../model';\nimport { cx } from 'emotion';\n\nexport enum SplitMode {\n    Split,\n    Editor,\n    Preview\n}\n\nexport const NoteModeSelector: React.SFC<{mode: NoteMode, onModeChange: (mode: NoteMode) => void}> = props => (\n    <div className={cx(styles.horizontalSpace('.5rem'))}>\n        <button className=\"button\" style={{background: !props.mode || props.mode !== 'markdown' ? '#444' : undefined}} onClick={() => props.onModeChange('markdown')}>Markdown</button>\n        <button className=\"button\" style={{background: props.mode !== 'tree' ? '#444' : undefined}} onClick={() => props.onModeChange('tree')}>Tree</button>\n    </div>\n);\n\n\nexport const SplitModeSelector: React.SFC<{mode: SplitMode, onModeChange: (mode: SplitMode) => void}> = props => (\n    <div className={cx(styles.horizontalSpace('.5rem'))}>\n        <button className=\"button\" style={{background: props.mode !== SplitMode.Split ? '#444' : undefined}} onClick={() => props.onModeChange(SplitMode.Split)}>Split</button>\n        <button className=\"button\" style={{background: props.mode !== SplitMode.Editor ? '#444' : undefined}} onClick={() => props.onModeChange(SplitMode.Editor)}>Editor</button>\n        <button className=\"button\" style={{background: props.mode !== SplitMode.Preview ? '#444' : undefined}} onClick={() => props.onModeChange(SplitMode.Preview)}>Preview</button>\n    </div>\n);\n\nexport class SimpleSplitEditor extends React.Component<{ text: string, onTextChanged: (text: string) => void, expand?: boolean, mode: SplitMode, data: Data, contextId: string|null }, {}> {\n\n    render() {\n        const style: React.CSSProperties = {};\n\n        if(this.props.expand) {\n            style.width = '100%';\n            style.height = '100%';\n            style.zIndex = 100;\n            style.display = 'flex';\n            style.maxHeight = '100%';\n        }\n\n        const border = '1px solid #666';\n        const components = [];\n\n        let textAreaStyle: React.CSSProperties = {\n            flexGrow: 1, \n            minWidth: '50%', \n            borderTop: border, \n            height: '100%'\n        };\n\n        let markedStyle: React.CSSProperties = {\n            flexGrow: 1, \n            minWidth: '50%', \n            background: 'transparent', \n            padding: '1rem', \n            borderTop: border\n        };\n\n        if (this.props.mode === SplitMode.Split) {\n            textAreaStyle.borderRight = border;\n            markedStyle.overflowY = 'scroll';\n        }\n\n        if (this.props.mode === SplitMode.Editor || this.props.mode === SplitMode.Split) {\n            components.push(\n                    <AceEditor \n                        key=\"editor\"\n                        value={this.props.text} \n                        fontSize={18}\n                        style={textAreaStyle}\n                        onChange={e => this.props.onTextChanged(e)} \n                        mode=\"markdown\"\n                        theme=\"monokai\"\n                        showGutter={false} \n                        showPrintMargin={false}\n                        wrapEnabled={true}\n                        enableBasicAutocompletion={[snippetCompleter, textCompleter, keyWordCompleter] as any}\n                        enableLiveAutocompletion={true}\n                        enableSnippets={true}\n                    />\n            );\n        }\n\n        if (this.props.mode === SplitMode.Preview || this.props.mode === SplitMode.Split) {\n            components.push(\n                <div key=\"2\" style={markedStyle}>\n                    <MarkedViewer markdown={this.props.text} contextId={this.props.contextId} />\n                </div>\n            );\n        }\n\n        return (\n            <div style={style}>\n                {components}\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { useState, useRef } from 'react';\nimport { horizontalSpace } from '../layout/styles';\nimport { MarkedViewer } from './MarkedViewer';\nimport AceEditor, { ICommand } from \"react-ace\";\n\nimport {textCompleter, snippetCompleter, keyWordCompleter} from \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/mode-markdown\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport ReactAce from 'react-ace/lib/ace';\nimport { Loader } from './Loader';\nimport { extractReferences } from '../db/note';\nimport { useData } from '../model';\nimport { cx } from 'emotion';\nimport { getAlias } from '../db/person';\n\ninterface Node {\n    text: string;\n    nodes: Node[];\n}\n\nexport const TreeEditor: React.FC<{text: string, onTextChanged: (text: string) => void, contextId: string|null}> = (props) => {\n    const {data} = useData();\n    const [invalid] = useState(() => {\n        if (!props.text || props.text === '') {\n            return false;\n        }\n        try {\n            JSON.parse(props.text);\n            return false;\n        } catch {\n            return true;\n        }\n    })\n\n    const [nodes, setNodes] = useState<Node[]>(() => {\n        if (invalid) {\n            return [];\n        }\n\n        if (!props.text || props.text === '') {\n            return [\n                { text: '', nodes: [] }\n            ];\n        }\n\n        return JSON.parse(props.text);\n    });\n\n    const inputRef = useRef<ReactAce>(null);\n    const [active, setActive] = useState(nodes[0]);\n\n    const [noteTitles, setNoteTitles] = React.useState<{ title: string; context: string|null }[]>();\n\n    React.useEffect(() => {\n        const noteCompletions  = data.notes.map(n => {\n            let titles = extractReferences(n.content);\n\n            if (n.title && n.title.length) {\n                titles.push(n.title);\n            }\n\n            const context = data.contexts.find(c => c.id === n.contextId)?.title || null;\n\n            return titles.map(t => ({ title: t, context }));\n        }).flat().filter(t => t.title !== null);\n\n        setNoteTitles(noteCompletions);\n    }, [props.contextId, data.contexts, data.notes]);\n\n    const [peopleAliases, setPeopleAliases] = React.useState<string[]>();\n\n    React.useEffect(() => {\n        const aliases  = data.people.map(n => getAlias(n)).filter(t => t !== null);\n        setPeopleAliases(aliases);\n    }, [data.people]);\n\n    if (invalid) {\n        return (\n            <div>Invalid tree content (not valid JSON).</div>\n        )\n    }\n\n    if (!noteTitles || !peopleAliases) {\n        return <Loader />;\n    }\n\n    const updateText = () => {\n        props.onTextChanged(JSON.stringify(nodes));\n    }\n\n    const onInputChanged = (node: Node, value: string) => {\n        node.text = value;\n        setNodes([...nodes]);\n        updateText();\n    };\n\n    const getParentNode = (targetNode: Node, searchNodes: Node[] = nodes, parentNode: Node|null = null): Node|null => {\n      for(const node of searchNodes) {\n          if (node === targetNode) {\n              return parentNode;\n          }\n\n          const childResult = getParentNode(targetNode, node.nodes, node);\n          if (childResult) {\n              return childResult;\n          }\n      }\n\n      return null;\n    };\n\n    const preorderTraversal = () => {\n        const result: Node[] = [];\n        const stack = [...nodes].reverse();\n\n        while(stack.length) {\n            let node = stack.pop();\n\n            if (!node) {\n                return result;\n            }\n\n            result.push(node);\n\n            for(let childNode of [...node.nodes].reverse()) {\n                stack.push(childNode);\n            }\n\n        }\n\n        return result;\n    };\n\n    const insertNode = (afterNode: Node, above = false) => {\n        const parentNode = getParentNode(afterNode);\n        const searchNodes = parentNode ? parentNode.nodes : nodes;\n        const nodeIndex = searchNodes.findIndex(x => x === afterNode);\n        const node: Node = { text: '', nodes: [] };\n        searchNodes.splice(nodeIndex + (above ? 0 : 1), 0, node);\n        setNodes([...nodes]);\n        return node;\n    };\n\n    const removeNode = (node: Node) => {\n        const parentNode = getParentNode(node);\n        const searchNodes = parentNode ? parentNode.nodes : nodes;\n        const nodeIndex = searchNodes.findIndex(x => x === node);\n        searchNodes.splice(nodeIndex, 1);\n        setNodes([...nodes]);\n        return node;\n    };\n\n    const removeNodeIfEmpty = (node: Node) => {\n        if (node.text.length || node.nodes.length) {\n            return;\n        }\n        removeNode(node);\n    };\n\n    const indentNode = (node: Node) => {\n        const parentNode = getParentNode(node);\n        const searchNodes = parentNode ? parentNode.nodes : nodes;\n        const nodeIndex = searchNodes.findIndex(x => x === node);\n\n        if (nodeIndex === 0) {\n            return;\n        } else {\n            searchNodes.splice(nodeIndex, 1);\n            searchNodes[nodeIndex - 1].nodes.push(node);\n            setNodes([...nodes]);\n        }\n    };\n\n    const unindentNode = (node: Node) => {\n        const parentNode = getParentNode(node);\n\n        if(parentNode === null) {\n            return;\n        }\n\n        const parentParentNode = getParentNode(parentNode);\n        const targetNodes = parentParentNode ? parentParentNode.nodes : nodes;\n        const parentNodeIndex = targetNodes.findIndex(x => x === parentNode);\n        targetNodes.splice(parentNodeIndex + 1, 0, node);\n        const nodeIndex = parentNode.nodes.findIndex(x => x === node);\n        parentNode.nodes.splice(nodeIndex, 1);\n\n        setNodes([...nodes]);\n    };\n\n    const commands: ICommand[] = [\n        { name: 'indent', bindKey: { win: 'tab', mac: 'tab' }, exec: () => {\n            setTimeout(() => {\n                indentNode(active);\n            }, 0);\n            return true;\n        }},\n        { name: 'unindent', bindKey: { win: 'shift+tab', mac: 'shift+tab' }, exec: () => {\n            setTimeout(() => {\n                unindentNode(active);\n            }, 0);\n            return true;\n        }},\n        { name: 'enter', bindKey: { win: 'enter', mac: 'enter' }, exec: () => {\n            if (active.text === '') {\n                return;\n            }\n            const above = inputRef.current && inputRef.current.editor.getCursorPosition().row === 0 && inputRef.current.editor.getCursorPosition().column === 0;\n            setTimeout(() => {\n                const newNode = insertNode(active, !!above);\n                setActive(newNode);\n            }, 0);\n            return true;\n        }},\n        { name: 'up', bindKey: { win: 'up', mac: 'up' }, exec: () => {\n            const onFirstRow = inputRef.current && inputRef.current.editor.getCursorPosition().row === 0;\n            if (!onFirstRow) {\n                return false;\n            }\n            const searchNodes = preorderTraversal();\n            let activeIndex = searchNodes.findIndex(x => x === active);\n            activeIndex = Math.max(0, activeIndex - 1);\n            setTimeout(() => {\n                setActive(searchNodes[activeIndex]);\n                removeNodeIfEmpty(active);\n            }, 0);\n            return true;\n        }},\n        { name: 'down', bindKey: { win: 'down', mac: 'down' }, exec: () => {\n            const onLastRow = inputRef.current && inputRef.current.editor.getCursorPosition().row + 1 === inputRef.current.editor.getSession().doc.getLength();\n            if(!onLastRow) {\n                return false;\n            }\n            const searchNodes = preorderTraversal();\n            let activeIndex = searchNodes.findIndex(x => x === active);\n            activeIndex = Math.min(searchNodes.length - 1, activeIndex + 1);\n            setTimeout(() => {\n                setActive(searchNodes[activeIndex]);\n                removeNodeIfEmpty(active);\n            }, 0);\n            return true;\n        }},\n        { name: 'space', bindKey: { win: 'space', mac: 'space' }, exec: () => {\n            const atStart = inputRef.current && inputRef.current.editor.getCursorPosition().row === 0 && inputRef.current.editor.getCursorPosition().column === 0;\n            if (atStart) {\n                setTimeout(() => {\n                    indentNode(active);\n                }, 0);\n                return true;\n            }\n            return false;\n        }},\n        { name: 'backspace', bindKey: { win: 'backspace', mac: 'backspace' }, exec: () => {\n            const atStart = inputRef.current && inputRef.current.editor.getCursorPosition().row === 0 && inputRef.current.editor.getCursorPosition().column === 0;\n            if (atStart) {\n                setTimeout(() => {\n                    unindentNode(active);\n                }, 0);\n                return true;\n            }\n            return false;\n        }}\n    ];\n\n    // Look at https://github.com/ajaxorg/ace/blob/41ac47ec9e26f65fe0ffedeedf14b525a22f5462/lib/ace/ext/language_tools.js#L42-L48\n    const completions = {\n        getCompletions: (editor: any, session: any, pos: any, prefix: any, callback: CompletionCallback) => {\n            // console.log('editor', editor, 'session', session, 'pos', pos, 'prefix', prefix, 'callback', callback);\n            const token = session.getTokenAt(pos.row, pos.column);\n\n            if (!token) {\n                return;\n            }\n            \n            function hasPrefix(requiredPrefix: string) {\n                const strWithPrefix = token.value.substring(pos.column - prefix.length - requiredPrefix.length);\n                return strWithPrefix.startsWith(requiredPrefix);\n            }\n\n            if (hasPrefix('[[')) {\n                const completions = noteTitles.map(n => ({\n                    caption: n.title,\n                    snippet: n.title,\n                    meta: n.context || 'note',\n                }))\n\n                callback(null, completions);\n            } else if (hasPrefix('@')) {\n                const completions = peopleAliases.map(n => ({\n                    caption: n,\n                    snippet: n,\n                    meta: 'person',\n                }))\n\n                callback(null, completions);\n            }\n        }\n    }\n\n    const renderNode = (node: Node, index: number, level: number) => {\n        const isActive = node === active;\n        return (\n            <React.Fragment key={`${level}-${index}`}>\n                <div style={{display: 'flex', background: isActive ? '#292929' : undefined, padding: '.6rem .8rem'}} onClick={() => { if(!isActive) { setActive(node); }; }}>\n                    <div style={{letterSpacing: '.5rem', color: isActive ? '#078263' : '#777', lineHeight: 1.5}}>•</div>\n                    {isActive\n                        ? <AceEditor\n                            key=\"editor\"\n                            ref={inputRef}\n                            value={node.text}\n                            fontSize={16}\n                            style={{background: 'transparent', width: '100%'}}\n                            onChange={e => onInputChanged(node, e)}\n                            mode=\"markdown\"\n                            theme=\"monokai\"\n                            focus\n                            highlightActiveLine={false}\n                            showGutter={false}\n                            showPrintMargin={false}\n                            wrapEnabled={true}\n                            maxLines={Infinity}\n                            commands={commands}\n                            enableBasicAutocompletion={[completions, snippetCompleter, textCompleter, keyWordCompleter] as any}\n                            enableLiveAutocompletion={true}\n                            enableSnippets={true}\n                            />\n                        : <MarkedViewer markdown={node.text} contextId={props.contextId} />}\n                </div>\n                <div style={{borderLeft: '1px solid #555', marginLeft: 16, paddingLeft: 16}}>\n                    {node.nodes.map((n, i) => renderNode(n, i, level + 1))}\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    return (\n        <>\n            <div style={{display: 'flex', background: '#444', position: 'fixed', height: 36, bottom: 0, left: 0, right: 0}} className={cx(horizontalSpace('.5rem'))}>\n                    <div className=\"button\" onClick={e => { unindentNode(active); inputRef.current && inputRef.current.editor.focus(); }}>&larr;</div>\n                    <div className=\"button\" onClick={e => { indentNode(active); inputRef.current && inputRef.current.editor.focus(); }}>&rarr;</div>\n                    <div className=\"button\" onClick={e => {\n                        if (!inputRef.current) {\n                            return;\n                        }\n                        inputRef.current.editor.session.insert(inputRef.current.editor.getCursorPosition(), '[[');\n                        inputRef.current.editor.focus();\n                    }}>[[</div>\n                    <div className=\"button\" onClick={e => {\n                        if (!inputRef.current) {\n                            return;\n                        }\n                        inputRef.current.editor.session.insert(inputRef.current.editor.getCursorPosition(), ']]');\n                        inputRef.current.editor.focus();\n                    }}>]]</div>\n            </div>\n            <div style={{height: '100%', marginBottom: 36}}>\n                {nodes.map((n, i) => renderNode(n, i, 0))}\n            </div>\n        </>\n    );\n};\n\ninterface Completion {\n    value?: string;\n    meta: string;\n    type?: string;\n    caption?: string;\n    snippet?: any;\n    score?: number;\n    exactMatch?: number;\n    docHTML?: string;\n}\n\ntype CompletionCallback = (error: Error|null, results: Completion[]) => void;","import * as React from 'react';\nimport { Data } from '../model';\nimport { ContextState } from '../db/context';\nimport _ from 'lodash';\n\nexport const ContextSelector: React.FC<{contextId: string|null, data: Data, onChange: (contextId: string|null) => void}> = (props) => {\n    const activeContexts = _.orderBy(props.data.contexts.filter(x => x.state === ContextState.Active), x => x.title);\n    const inactiveContexts = _.orderBy(props.data.contexts.filter(x => x.state !== ContextState.Active), x => x.title);\n\n    return (\n        <select className=\"input is-large\" value={props.contextId || ''} onChange={e => props.onChange(e.target.value)}>\n            <option value=\"\">Not set</option>\n            {activeContexts.map(c => (<option key={c.id} value={c.id}>{c.title}</option>))}\n            <option value=\"--inactive--\" disabled>-- Inactive</option>\n            {inactiveContexts.map(c => (<option key={c.id} value={c.id}>{c.title}</option>))}\n        </select>\n    );\n}","import * as React from 'react';\n\nexport function TagInput(props: { tags: string; availableTags: string[]; onChange: (tags: string) => void }) {\n    const [focus, setFocus] = React.useState(false)\n\n    const [tagState, setTagState] = React.useState(new TagState(props.availableTags, props.tags && props.tags.length > 0 ? props.tags.split(' ') : []))\n\n    const timeoutId = React.useRef<number|undefined>(undefined);\n    const tagInput = React.useRef<any>();\n\n    function onTextChange(e: React.ChangeEvent<HTMLInputElement>) {\n        onChange(tagState.withText(e.target.value))\n    }\n\n    function onChange(newTagState: TagState) {\n        setTagState(newTagState);\n        props.onChange(newTagState.getTags());\n    }\n\n    function onKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'ArrowUp') {\n            onChange(tagState.decrementIndex());\n        } else if (e.key === 'ArrowDown') {\n            onChange(tagState.incrementIndex());\n        } else if (e.key === 'Enter') {\n            if (tagState.text === '') {\n                onChange(tagState.addSelectedTag());\n            } else {\n                onChange(tagState.addText());\n            }\n        } else if (e.key === 'Tab') {\n            onChange(tagState.addSelectedTag());\n            e.preventDefault();\n        } else if (e.key === 'Backspace') {\n            if (tagState.text === '') {\n                onChange(tagState.reopenLastTag());\n            }\n        }\n    }\n\n    function onClickTag(tag: string) {\n        onChange(tagState.addTag(tag));\n        tagInput.current.focus();\n    }\n\n    function onFocus() {\n        clearTimeout(timeoutId.current);\n\n        if(focus) {\n            return;\n        }\n\n        setFocus(true);\n    }\n\n    function onBlur() {\n        if(!focus) {\n            return;\n        }\n\n        timeoutId.current = setTimeout(() => {\n            setFocus(false);\n        }, 100) as any;\n    }\n\n    return (\n        <div className=\"tag-input\" onFocus={() => onFocus()} onBlur={() => onBlur()}>\n            <div className=\"tags\">\n                {tagState.selectedTags.map((t, i) => <Tag key={`tag-${t}-${i}`} name={t} />)}\n                <input ref={tagInput} placeholder=\"Tag\" type=\"text\" className=\"\" onChange={e => onTextChange(e)} onKeyDown={e => onKeyPress(e)} value={tagState.text} />\n            </div>\n            {focus && tagState.getFilteredAvailableTags().length > 0 &&\n                <div className=\"panel\">\n                    {tagState.getFilteredAvailableTags().slice(0, 10).map((t, i) => <div key={`available-tag-${t}`} style={tagState.index === i ? { background: '#078263'} : {}} onClick={() => onClickTag(t)}>{t}</div>)}\n                </div>\n            }\n        </div>\n    );\n}\n\nexport class TagState {\n    availableTags: string[];\n    selectedTags: string[];\n    text: string;\n    index: number;\n\n    constructor(availableTags: string[], selectedTags: string[], text = \"\", index = 0) {\n        this.availableTags = availableTags;\n        this.selectedTags = selectedTags;\n        this.text = text;\n        this.index = index;\n    }\n\n    withText(text: string) {\n        return new TagState(this.availableTags, this.selectedTags, text, this.index);\n    }\n\n    withAvailableTags(availableTags: string[]) {\n        return new TagState(availableTags, this.selectedTags, this.text, this.index);\n    }\n\n    withSelectedTags(selectedTags: string[]) {\n        return new TagState(this.availableTags, selectedTags, this.text, this.index);\n    }\n\n    decrementIndex() {\n        return new TagState(this.availableTags, this.selectedTags, this.text, Math.max(0, this.index - 1));\n    }\n\n    incrementIndex() {\n        return new TagState(this.availableTags, this.selectedTags, this.text, Math.max(0, Math.min(this.availableTags.length - 1, this.index + 1)));\n    }\n\n    addSelectedTag() {\n        return new TagState(this.availableTags, this.selectedTags.concat([this.getFilteredAvailableTags()[this.index]]), '', 0);\n    }\n\n    addTag(tag: string) {\n        return new TagState(this.availableTags, this.selectedTags.concat([tag]), '', 0);\n    }\n\n    addText() {\n        return new TagState(this.availableTags, this.selectedTags.concat([this.text]), '', 0);\n    }\n\n    reopenLastTag() {\n        const lastTag = this.selectedTags[this.selectedTags.length - 1];\n        return new TagState(this.availableTags, this.selectedTags.slice(0, this.selectedTags.length - 1), lastTag, 0);\n    }\n\n    getFilteredAvailableTags() {\n        return this.availableTags.filter(t => this.selectedTags.indexOf(t) === -1).filter(t => t.toLowerCase().indexOf(this.text) !== -1);\n    }\n\n    getTags() {\n        return this.selectedTags.join(' ');\n    }\n}\n\nexport const Tag: React.FC<{ name: string }> = props => {\n    return (\n        <div className=\"tag is-dark\">{props.name}</div>\n    );\n}\n\nexport const TagList: React.FC<{tags: string}> = props => {\n    return (\n        <div className=\"tags\" style={{marginBottom: 0}}>{props.tags && props.tags.split(' ').map((t, i) => <Tag key={i} name={t} />)}</div>\n    );\n}","import * as React from 'react';\nimport { ToolSection } from '../framework/ToolSection';\nimport { SimpleSplitEditor, SplitMode, SplitModeSelector, NoteModeSelector } from './SimpleSplitEditor';\nimport { isMobile } from './Layout';\nimport { getNoteTitle, Note } from '../db/note';\nimport { TreeEditor } from './TreeEditor';\nimport { SettingsCompactor } from './SettingsCompactor';\nimport './NoteEditor.scss';\nimport { ContextSelector } from '../components/ContextSelector';\nimport { Data } from '../model';\nimport moment from 'moment';\nimport { TagInput } from './TagInput';\n\nexport function NoteEditor(props: {note: Note, updateNote: (props: Partial<Note>) => void, onNoteAdded: () => void, availableTags: string[], data: Data}) {\n    const [splitMode, setSplitMode] = React.useState(isMobile() ? SplitMode.Editor : SplitMode.Split)\n\n    const updateDailyDate = (value: string) => {\n        if (value === '') {\n            props.updateNote({ dailyDate: null });\n        } else {\n            props.updateNote({ dailyDate: new Date(value).toISOString() });\n        }\n    }\n\n    return (\n        <div style={{width: '100%', flex: 1, display: 'flex', flexDirection: 'column'}}>\n            <ToolSection verticalAround={false}>\n                <SettingsCompactor wideStyle={{justifyContent: 'space-between'}} alwaysVisible={() => (\n                    <>\n                        <ContextSelector contextId={props.note.contextId} data={props.data} onChange={contextId => props.updateNote({ contextId })} />\n                        <input type=\"date\" className=\"input is-large\" value={(props.note.dailyDate && moment(props.note.dailyDate).format('YYYY-MM-DD')) || ''} onChange={e => updateDailyDate(e.target.value)} />\n                    </>\n                )}>\n                    <NoteModeSelector mode={props.note.mode || 'tree'} onModeChange={mode => props.updateNote({ mode })} />\n                    <SplitModeSelector mode={splitMode} onModeChange={splitMode => setSplitMode(splitMode)} />\n                </SettingsCompactor>\n            </ToolSection>\n            <ToolSection>\n                {!props.note.noteFor && !props.note.dailyDate && (\n                    <>\n                        <input type=\"text\" placeholder=\"Title\" className=\"input is-large is-wide\" value={props.note.title} onChange={e => props.updateNote({ title: e.target.value })} />\n                        <TagInput availableTags={props.availableTags} tags={props.note.tags} onChange={tags => props.updateNote({ tags })} />\n                    </>\n                )}\n                {props.note.dailyDate && (\n                    <h1>{getNoteTitle({ dailyDate: props.note.dailyDate, title: props.note.title, content: props.note.content })}</h1>\n                )}\n            </ToolSection>\n            <div style={{flex: 1}}>\n                {props.note.mode === 'markdown' ? (\n                    <SimpleSplitEditor text={props.note.content} expand={true} onTextChanged={content => props.updateNote({ content })} mode={splitMode} data={props.data} contextId={props.note.contextId} />\n                ) : (\n                    <TreeEditor text={props.note.content} onTextChanged={content => props.updateNote({ content })} contextId={props.note.contextId} />\n                )}\n            </div>\n        </div>\n    );\n}","import {history} from '../index';\nimport { Note } from './note';\nimport { db } from './db';\nimport {createInstance} from 'localforage';\n\nlet registered = false;\n\nfunction ensureRegister() {\n    if (registered) {\n        return;\n    }\n\n    history.listen(onNavigate);\n    registered = true;\n}\n\nconst store = createInstance({ name: `staging-note` });\n\nasync function processQueue() {\n    for(const key of await store.keys()) {\n        const note = await store.getItem<Note>(key);\n        await db.notes.save(note);\n        await store.removeItem(note.id);\n    }\n}\n\nprocessQueue();\n\nlet queuedPath: string|null = null;\nlet queuedNote: Note|null = null;\n\nasync function onNavigate(location: { pathname: string }, action: string) {\n    if (!queuedNote) {\n        return;\n    }\n\n    if (queuedPath === location.pathname) {\n        return;\n    }\n\n    await db.notes.save(queuedNote);\n    await store.removeItem(queuedNote.id);\n    queuedNote = null;\n}\n\nexport async function register(note: Note, hasChanges: boolean) {\n    ensureRegister();\n    if(hasChanges) {\n        queuedNote = note;\n        queuedPath = window.location.pathname;\n        await store.setItem(note.id, note);\n    } else {\n        queuedNote = null;\n        queuedPath = null;\n        await store.removeItem(note.id);\n    }\n};","import * as React from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { NoteEditor } from '../../components/NoteEditor';\nimport { useData } from '../../model';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { useQueryState } from '../../lib/UseQueryState';\nimport * as styles from '../../layout/styles';\nimport { cx } from 'emotion';\nimport { Note } from '../../db/note';\nimport { db } from '../../db/db';\nimport { register } from '../../db/stagingArea';\nimport moment from 'moment';\n\nfunction useNote(pristineNote: Note): [Note, (props: Partial<Note>) => void, boolean] {\n    const [pristine] = React.useState(pristineNote);\n    const [note, setNote] = React.useState<Note>({...pristineNote});\n    const [hasChanges, setHasChanges] = React.useState(false);\n\n    function updateNote(props: Partial<Note>) {\n        const newNote = {...note, ...props};\n        const newHasChanges = JSON.stringify(pristine) !== JSON.stringify(newNote);\n        setHasChanges(newHasChanges);\n        setNote(newNote);\n        register(newNote, newHasChanges);\n    }\n\n    return [note, updateNote, hasChanges];\n}\n\nexport const EditNotePage: React.FC<{id?: string }> = props => {\n    const {data, refreshData} = useData();\n    let tags: {[key: string]: number} = {};\n    const [goBack, setGoBack] = React.useState(false);\n    const [source] = useQueryState(null, 'source');\n\n    const urlParams = new URLSearchParams(window.location.search);\n    const title = urlParams.get('title');\n    const contextId = urlParams.get('context');\n    const daily = urlParams.has('daily');\n\n    const [note, updateNote] = useNote(data.notes.find(x => x.id === props.id) || db.notes.createUnsaved({ title: title || '', content: '', mode: 'tree', contextId, dailyDate: (daily && moment().format('YYYY-MM-DD')) || null, noteFor: null, tags: '' }));\n\n    if (goBack) {\n        return <Redirect to={source ? decodeURIComponent(source) : '/'} />;\n    }\n\n    for (const note of data.notes || []) {\n        if(!note.tags || !note.tags.length) {\n            continue;\n        }\n\n        for(const tag of note.tags.split(' ')) {\n            if(!tags[tag]) {\n                tags[tag] = 0;\n            }\n\n            tags[tag] += 1;\n        }\n    }\n\n    const availableTags = Object.keys(tags).sort((a, b) => tags[b] - tags[a]);\n\n    if (props.id) {\n        return (\n            <>\n                <div style={{height: '100%', display: 'flex', flexDirection: 'column'}}>\n                    <ToolSection>\n                        <div className={cx(styles.horizontalSpace('.5rem'))}>\n                            <NavLink to={source ? decodeURIComponent(source) : '/'} className=\"button\">Back</NavLink>\n                            {!note.noteFor && <NavLink to={`/notes/${note.id}`} className=\"button\">Show</NavLink>}\n                        </div>\n                    </ToolSection>\n                    <NoteEditor note={note} updateNote={updateNote} {...note} data={data} availableTags={availableTags} onNoteAdded={() => { refreshData(); setGoBack(true); }} />\n                </div>\n            </>\n        );\n    }\n\n    return (\n        <>\n            <div style={{height: '100%', display: 'flex', flexDirection: 'column'}} >\n                <ToolSection>\n                    <NavLink to={`/`} className=\"button\">Back</NavLink>\n                </ToolSection>\n                <NoteEditor note={note} updateNote={updateNote} availableTags={availableTags} data={data} onNoteAdded={() => { refreshData(); setGoBack(true); }} />\n            </div>\n        </>\n    );\n}","import * as React from 'react';\nimport { useState } from 'react';\nimport { MarkedViewer } from './MarkedViewer';\n\nimport \"ace-builds/src-noconflict/mode-markdown\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport { Loader } from './Loader';\nimport { getNoteReferenceMatchRegExp, getNoteAliasReferenceMatchRegExp } from '../db/note';\n\ninterface Node {\n    text: string;\n    nodes: Node[];\n}\n\nexport const TreeViewer: React.FC<{ json: string, contextId: string|null, referenceTitle?: string, personAlias?: string }> = (props) => {\n    const [nodes, setNodes] = useState<Node[]|null>(null);\n    const [invalid, setInvalid] = useState(false);\n\n    React.useEffect(() => {\n        try {\n            let nodes = [];\n            if (props.json) {\n                nodes = JSON.parse(props.json)\n            }\n            setNodes(nodes);\n        } catch {\n            setInvalid(true);\n        }\n    }, [props.json]);\n\n    if (invalid) {\n        return <div>Invalid json</div>;\n    }\n\n    if (!nodes) {\n        return <Loader />;\n    }\n\n    const renderNode = (node: Node, index: number, level: number, filter: RegExp|null) => {\n        const extra: JSX.Element[] = [];\n        if (filter) {\n            if (filter.test(node.text)) {\n                filter = null;\n                if (level > 0) {\n                    extra.push(<div key={`extra-${index}-${level}`} style={{paddingTop: 8, color: '#aaa'}}>{'... > '.repeat(level)}</div>)\n                }\n            } else {\n                return (\n                    <React.Fragment key={`${level}-${index}`}>\n                        {node.nodes.map((n, i) => renderNode(n, i, level + 1, filter))}\n                    </React.Fragment>\n                );\n            }\n        }\n\n        return (\n            <React.Fragment key={`${level}-${index}`}>\n                {extra}\n                <div style={{display: 'flex', padding: '.6rem .8rem'}}>\n                    <div style={{letterSpacing: '.5rem', color: '#777', lineHeight: 1.5}}>•</div>\n                    <MarkedViewer markdown={node.text} contextId={props.contextId} />\n                </div>\n                <div style={{borderLeft: '1px solid #555', paddingLeft: 16, marginLeft: 16}}>\n                    {node.nodes.map((n, i) => renderNode(n, i, level + 1, filter))}\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    let referenceRegExp = props.referenceTitle ? getNoteReferenceMatchRegExp(props.referenceTitle) : null;\n\n    if (props.personAlias) {\n        referenceRegExp = getNoteAliasReferenceMatchRegExp(props.personAlias);\n    }\n\n    return (\n        <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'space-between', height: '100%'}}>\n            <div style={{width: '100%'}}>\n                {nodes.map((n, i) => renderNode(n, i, 0, referenceRegExp))}\n            </div>\n        </div>\n    );\n};","import * as React from 'react';\nimport { useData } from '../model';\nimport { MarkedViewer } from './MarkedViewer';\nimport { getNoteTitle, getNoteReferenceMatchRegExp, getNoteAliasReferenceMatchRegExp } from '../db/note';\nimport { Link } from 'react-router-dom';\nimport * as _ from 'lodash';\nimport { TreeViewer } from './TreeViewer';\n\nexport const ReferenceViewer: React.FC<{ title: string, contextId: string|null }> = (props) => {\n    const {data} = useData();\n    const referenceRegExp = getNoteReferenceMatchRegExp(props.title);\n    const contextNotes = _.orderBy(data.notes.filter(x => x.contextId === props.contextId && referenceRegExp.test(x.content)), x => x.updatedAt, 'desc');\n\n    if (contextNotes.length === 0) {\n        return null;\n    }\n\n    return (\n        <div style={{paddingTop: 32}}>\n            <div style={{fontWeight: 'bold'}}>{contextNotes.length} linked references for \"{props.title}\"</div>\n            {contextNotes.map(note => (\n                <div key={note.id} style={{marginTop: 16}}>\n                    <Link to={`/notes/${note.id}`} style={{color: '#078263'}}>{getNoteTitle(note)}</Link>\n                    <div style={{paddingLeft: 16, background: '#222', marginTop: 8}}>\n                        {note.mode === 'markdown' \n                        ? <MarkedViewer markdown={note.content} contextId={note.contextId} /> \n                        : <TreeViewer json={note.content} contextId={note.contextId} referenceTitle={props.title} />}\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport const PersonReferenceViewer: React.FC<{ alias: string }> = (props) => {\n    const {data} = useData();\n    const referenceRegExp = getNoteAliasReferenceMatchRegExp(props.alias);\n    const matchingNotes = _.orderBy(data.notes.filter(x => referenceRegExp.test(x.content)), x => x.updatedAt, 'desc');\n\n    if (matchingNotes.length === 0) {\n        return null;\n    }\n\n    return (\n        <div style={{paddingTop: 32}}>\n            <div style={{fontWeight: 'bold'}}>{matchingNotes.length} linked references for \"{props.alias}\"</div>\n            {matchingNotes.map(note => (\n                <div key={note.id} style={{marginTop: 16}}>\n                    <Link to={`/notes/${note.id}`} style={{color: '#078263'}}>{getNoteTitle(note)}</Link>\n                    <div style={{paddingLeft: 16, background: '#222', marginTop: 8}}>\n                        {note.mode === 'markdown' \n                        ? <MarkedViewer markdown={note.content} contextId={note.contextId} /> \n                        : <TreeViewer json={note.content} contextId={note.contextId} personAlias={props.alias} />}\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { MarkedViewer } from '../../components/MarkedViewer';\nimport { ReferenceViewer } from '../../components/ReferenceViewer';\nimport { useData } from '../../model';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { useQueryState } from '../../lib/UseQueryState';\nimport { TagList } from '../../components/TagInput';\nimport { ContextTag } from '../../components/ContextTag';\nimport { getNoteTitle } from '../../db/note';\nimport { TreeViewer } from '../../components/TreeViewer';\n\nexport const ShowNotePage: React.SFC<{id: string}> = (props) => {\n    const {data} = useData();\n    const [source] = useQueryState(null, 'source');\n    const note = data.notes.find(x => x.id === props.id);\n\n    if (!note) {\n        return <div>Note not found.</div>\n    }\n\n    let viewer = null;\n\n    if (!note.mode || note.mode === 'markdown') {\n        viewer = <MarkedViewer markdown={note.content} contextId={note.contextId} />;\n    } else {\n        viewer = <TreeViewer json={note.content} contextId={note.contextId} />;\n    }\n\n    return (\n        <>\n            <ToolSection>\n                <NavLink to={source ? decodeURIComponent(source) : '/'} className=\"button\">Back</NavLink>\n                <NavLink to={`/notes/${note.id}/edit`} className=\"button\">Edit</NavLink>\n            </ToolSection>\n            <div className=\"panel\">\n                <div className=\"content\" style={{padding: '1rem'}}>\n                    <h1>{getNoteTitle(note)}</h1>\n                    <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                        <TagList tags={note.tags} />\n                        <ContextTag contextId={note.contextId} />\n                    </div>\n                    {viewer}\n                    <ReferenceViewer title={getNoteTitle(note)} contextId={note.contextId} />\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport const ShowVirtualNotePage: React.SFC<{}> = (props) => {\n    const [source] = useQueryState(null, 'source');\n\n    const urlParams = new URLSearchParams(window.location.search);\n    const title = urlParams.get('title');\n    const contextId = urlParams.get('context');\n\n    if(!title) {\n        return <div>Note not found.</div>\n    }\n\n    return (\n        <>\n            <ToolSection>\n                <NavLink to={source ? decodeURIComponent(source) : '/'} className=\"button\">Back</NavLink>\n                <NavLink to={`/notes/new?title=${encodeURIComponent(title)}${contextId ? `&context=${contextId}` : ''}&source=${encodeURIComponent(`${window.location.pathname}`)}`} className=\"button\">Create</NavLink>\n            </ToolSection>\n            <div className=\"panel\">\n                <div className=\"content\" style={{padding: '1rem'}}>\n                    <h1>{title}</h1>\n                    <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                        <ContextTag contextId={contextId} />\n                    </div>\n                    <ReferenceViewer title={title} contextId={contextId} />\n                </div>\n            </div>\n        </>\n    );\n}","import * as React from 'react';\n\ninterface ListProps<T> {\n    renderItem: (item: T) => JSX.Element;\n    items: T[];\n}\n\nexport function List<T>(props: ListProps<T>) {\n    return (\n        <div className=\"list\">\n            {props.items.map(props.renderItem)}\n        </div>\n    );\n}","import * as React from 'react';\nimport moment from 'moment';\nimport { TagList } from '../../components/TagInput';\nimport { NavLink } from 'react-router-dom';\nimport lunr from 'lunr';\nimport { debounce } from 'throttle-debounce';\nimport { useData } from '../../model';\nimport * as styles from '../../layout/styles';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { getNoteTitle, extractAllReferences } from '../../db/note';\nimport { List } from '../../framework/List';\nimport { isMobile } from '../../components/Layout';\nimport { useQueryState, useQueryStateT, useQueryStateBoolean } from '../../lib/UseQueryState';\nimport { SettingsCompactor } from '../../components/SettingsCompactor';\nimport { ContextTag } from '../../components/ContextTag';\nimport _ from 'lodash';\nimport { Loader } from '../../components/Loader';\nimport { cx } from 'emotion';\n\nexport const NotePage: React.SFC<{ }> = (props) => {\n    const {data} = useData();\n    const [text, setText] = useQueryState(null, 'search');\n    const [filterTags, setFilterTags] = useQueryStateT<string[]>([], 'tags', s => s !== null ? s.split('|') : [], a => a.join('|'));\n    const [showTagsBar, setShowTagsBar] = React.useState(!isMobile());\n    const [searchResult, setSearchResult] = React.useState<{ id: string, score: number }[]|null>(null);\n    const [searchIndex, setSearchIndex] = React.useState<lunr.Index|null>(null);\n    const [showNotesFor, setShowNotesFor] = React.useState(false);\n    const [showNoContext, setShowNoContext] = useQueryStateBoolean(false, 'no-context');\n    const [virtualReferences, setVirtualReferences] = React.useState<{ title: string, contextId: string|null, updatedAt: Date }[]>();\n\n    React.useEffect(() => {\n        const refs = extractAllReferences(data.notes);\n        setVirtualReferences(refs);\n    }, [data.notes])\n\n    const onSearch = (text: string) => {\n        if (!text || !text.length) {\n            setSearchResult(null);\n            return;\n        }\n\n        if (searchIndex === null) {\n            const idx = lunr(function() {\n                this.field('title');\n                this.field('text');\n    \n                for(let note of data.notes) {\n                    this.add({\n                        id: note.id,\n                        title: note.title,\n                        text: note.content\n                    });\n                }\n            });\n\n            setSearchIndex(idx);\n            const result = idx.search(text);\n            setSearchResult(result.map(r => { return { id: r.ref, score: r.score }; }));\n            return;\n        }\n\n        const result = searchIndex.search(text);\n        setSearchResult(result.map(r => { return { id: r.ref, score: r.score }; }));\n    };\n\n    const debouncedSearch = debounce(100, onSearch);\n\n    const toggleTag = (tag: string) => {\n        if (filterTags.indexOf(tag) === -1) {\n            setFilterTags(filterTags.concat([ tag ]));\n        } else {\n            setFilterTags(filterTags.filter(x => x !== tag));\n        }\n    }\n\n    let notes = data.notes || [];\n    let tags: {[key: string]: number} = {};\n\n    for(const tag of filterTags) {\n        notes = notes.filter(x => x.tags.split(' ').indexOf(tag) !== -1);\n    }\n\n    if (!showNotesFor) {\n        notes = notes.filter(x => !x.noteFor);\n    }\n\n    if (showNoContext) {\n        notes = notes.filter(x => !x.contextId);\n    }\n\n    if (searchResult) {\n        notes = searchResult.map(r => {\n            let idx =  notes.findIndex(n => n.id === r.id);\n            return notes[idx];\n        }).filter(n => n);\n    }\n\n    for (const note of notes) {\n\n        if(!note.tags) {\n            continue;\n        }\n\n        for(const tag of note.tags.split(' ')) {\n            if(!tags[tag]) {\n                tags[tag] = 0;\n            }\n\n            tags[tag] += 1;\n        }\n    }\n\n    const tagCounts = Object.keys(tags).map(k => { return { key: k, count: tags[k], active: filterTags.indexOf(k) !== -1 }; }).sort((a, b) => b.count - a.count);\n\n    let source: string|null = null;\n    if (window.location.search.length) {\n        const urlParams = new URLSearchParams(window.location.search);\n        source = `?source=${encodeURIComponent(`${window.location.pathname}?${urlParams.toString()}`)}`\n    }\n\n    if(!virtualReferences) {\n        return <Loader />;\n    }\n\n    interface NoteOutput {\n        id: string|null;\n        title: string;\n        tags: string|null;\n        contextId: string|null;\n        updatedAt: Date;\n        url: string;\n        isRef: boolean;\n    }\n\n    const notesOutput: NoteOutput[] = notes.map(n => ({\n        id: n.id,\n        title: getNoteTitle(n),\n        tags: n.tags,\n        contextId: n.contextId,\n        updatedAt: new Date(n.updatedAt),\n        url: `/notes/${n.id}${source ? source : ''}`,\n        isRef: false\n    }));\n\n    let virtualReferencesOutput: NoteOutput[] = [];\n    \n    if(!searchResult) {\n        virtualReferencesOutput = virtualReferences.map(v => ({\n            id: null,\n            title: v.title,\n            tags: null,\n            contextId: v.contextId,\n            updatedAt: v.updatedAt,\n            url: `/notes/virtual?title=${encodeURIComponent(v.title)}${v.contextId ? `&context=${v.contextId}` : ''}&source=${encodeURIComponent(`${window.location.pathname}`)}`,\n            isRef: true\n        }));\n    }\n\n    const output = _.orderBy(notesOutput.concat(virtualReferencesOutput), o => o.updatedAt, 'desc');\n\n    return (\n        <div style={{display: 'flex', height: '100%'}}>\n            {showTagsBar && <div style={{borderRight: '1px solid #666', width: 200}}>\n                <List<{key: string, count: Number, active: boolean}> items={tagCounts} renderItem={i => {\n                    return (\n                        <div key={i.key} style={{background: i.active ? '#444' : undefined}} onClick={() => toggleTag(i.key)} className={cx('item', styles.hoverGlow)}>{i.key} <span style={{color: '#999'}}>{i.count}</span></div>\n                    );\n                }} />\n            </div>}\n            <div style={{width: '100%'}}>\n                <ToolSection>\n                    <SettingsCompactor alwaysVisible={() => (\n                        <>\n                            <NavLink to={`/notes/new`} className=\"button\">New Note</NavLink>\n                        </>\n                    )}>\n                        <div>\n                            <input id=\"tags-box\" type=\"checkbox\" checked={showTagsBar} onChange={() =>setShowTagsBar(!showTagsBar)} />\n                            <label htmlFor=\"tags-box\">Show tags bar</label>\n                        </div>\n                        <div>\n                            <input id=\"show-notes-for-box\" type=\"checkbox\" checked={showNotesFor} onChange={() =>setShowNotesFor(!showNotesFor)} />\n                            <label htmlFor=\"show-notes-for-box\">Show notes for</label>\n                        </div>\n                        <div>\n                            <input id=\"show-no-context-box\" type=\"checkbox\" checked={showNoContext} onChange={() =>setShowNoContext(!showNoContext)} />\n                            <label htmlFor=\"show-no-context-box\">Show no context</label>\n                        </div>\n                    </SettingsCompactor>\n                    <input style={{fontSize: 16, padding: '.3rem', width: '100%'}} placeholder=\"Search...\" type=\"text\" value={text || ''} onChange={e => { setText(e.target.value); debouncedSearch(e.target.value); }}/>\n                </ToolSection>\n                <div className=\"list\">\n                    {output.map((n, i) => (\n                        <React.Fragment key={i}>\n                            <NavLink to={n.url} className={cx('item', 'note', styles.hoverGlow)} style={{color: n.isRef ? '#aaa' : undefined}}>\n                                <div className=\"note-title\">\n                                    <div>{n.title}</div>\n                                </div> \n                                <div className=\"note-details\">\n                                    <TagList tags={n.tags || ''} />\n                                    <div className=\"tags\">\n                                        <ContextTag contextId={n.contextId} />\n                                    </div>\n                                    <div className=\"note-date\">{moment(n.updatedAt).format('ddd MMM Do HH:mm')}</div>\n                                </div>\n                            </NavLink>\n                        </React.Fragment>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as styles from '../layout/styles';\nimport { ToolSection } from '../framework/ToolSection';\nimport { Context, ContextState } from '../db/context';\nimport { db } from '../db/db';\nimport { useData } from '../model';\nimport { cx } from 'emotion';\n\nexport const ContextPage: React.FC<{ }> = props => {\n    const {data, refreshData} = useData();\n\n    const [text, setText] = React.useState('');\n\n    async function onKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            await db.contexts.create({\n                title: text,\n                state: ContextState.Active,\n                contextId: null\n            });\n\n            setText('');\n            refreshData();\n        }\n    }\n\n    function renderTarget(target: Context) {\n        return (\n            <NavLink key={target.id} to={`/contexts/${target.id}`} className={cx('item', styles.hoverGlow)}>\n                <div>\n                    {target.title}\n                </div>\n            </NavLink>\n        );\n    }\n\n    return (\n        <>\n            <ToolSection>\n                <input type=\"text\" className=\"input is-large is-wide\" placeholder=\"Add context...\" value={text} onChange={e => setText(e.target.value)} onKeyPress={onKeyPress} />\n            </ToolSection>\n\n            <div className=\"list\">\n                <div className=\"header\">Active</div>\n                {data.contexts.filter(p => !p.state || p.state === ContextState.Active).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => renderTarget(t))}\n                <div className=\"header\">Not Active</div>\n                {data.contexts.filter(p => p.state === ContextState.Inactive).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => renderTarget(t))}\n            </div>\n        </>\n    );\n}\n","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as styles from '../layout/styles';\nimport { Data } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport { ProjectState, Project } from '../db/project';\nimport { db } from '../db/db';\nimport { ContextTag } from '../components/ContextTag';\nimport { cx } from 'emotion';\n\nexport class ProjectPage extends React.Component<{ data: Data, refreshData: () => void }, { text: string }> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            text: ''\n        };\n    } \n    \n    async onKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            await db.projects.create({\n                title: this.state.text,\n                state: ProjectState.Active,\n                contextId: null\n            });\n            this.setState({ text: '' }, this.props.refreshData);\n        }\n    }\n\n    renderProject(target: Project) {\n        return (\n            <NavLink key={target.id} to={`/projects/${target.id}`} className={cx('item', styles.hoverGlow)}>\n                <div>\n                    {target.title}\n                </div>\n                <div className=\"tags\">\n                    <div className=\"tag\">{target.state}</div>\n                    <ContextTag contextId={target.contextId} />\n                </div>\n            </NavLink>\n        );\n    }\n\n    render() {\n        return (\n            <>\n                <ToolSection>\n                    <input type=\"text\" className=\"input is-large is-wide\" placeholder=\"Add project...\" value={this.state.text} onChange={e => this.setState({ text: e.target.value })} onKeyPress={this.onKeyPress.bind(this)} />\n                </ToolSection>\n\n                <div className=\"list\">\n                    <div className=\"header\">Active</div>\n                    {this.props.data.projects.filter(p => !p.state || p.state === ProjectState.Active).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => this.renderProject(t))}\n                    <div className=\"header\">Incubated</div>\n                    {this.props.data.projects.filter(p => !p.state || p.state === ProjectState.Incubated).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => this.renderProject(t))}\n                    <div className=\"header\">Not Active</div>\n                    {this.props.data.projects.filter(p => p.state !== ProjectState.Active && p.state !== ProjectState.Incubated).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => this.renderProject(t))}\n                </div>\n            </>\n        );\n    }\n}\n","import * as React from 'react';\nimport { useData } from '../model';\nimport { db } from '../db/db';\nimport { Person } from '../db/person';\nimport { NavLink } from 'react-router-dom';\nimport { MarkedViewer } from './MarkedViewer';\nimport { Task } from '../db/task';\nimport { HasNote } from '../db/note';\nimport { TreeViewer } from './TreeViewer';\n\nexport const EmbeddedNoteEdit: React.FC<{ targetEntity: Person|Task|null }> = (props) => {\n    const {data, refreshData} = useData();\n\n    if (!props.targetEntity) {\n        return null;\n    }\n\n    const {noteId} = props.targetEntity;\n\n    const addNode = async () => {\n        if (!props.targetEntity) {\n            return;\n        }\n\n        const note = await db.notes.create({\n            title: '',\n            content: '',\n            tags: '',\n            contextId: null,\n            noteFor: {\n                type: props.targetEntity.type,\n                id: props.targetEntity.id,\n            },\n            mode: 'tree',\n            dailyDate: null\n        });\n\n        if (props.targetEntity.type === 'person') {\n            props.targetEntity.noteId = note.id;\n            await db.people.save(props.targetEntity);\n        }\n\n        if (props.targetEntity.type === 'task') {\n            props.targetEntity.noteId = note.id;\n            await db.tasks.save(props.targetEntity);\n        }\n\n        refreshData();\n    };\n\n    if (!noteId) {\n        return (\n            <div>\n                <div className=\"button\" onClick={addNode}>Add note</div>\n            </div>\n        );\n    }\n\n    const note = data.notes.find(x => x.id === noteId);\n\n    if (!note) {\n        return null;\n    }\n\n    return (\n        <div>\n            <NavLink to={`/notes/${note.id}/edit?source=${encodeURIComponent(`${window.location.pathname}`)}`} className=\"button\">Edit note</NavLink>\n            {!note.mode || note.mode === 'markdown' ? (\n                <MarkedViewer markdown={note.content} contextId={note.contextId} />\n            ) : (\n                <TreeViewer json={note.content} contextId={note.contextId} />\n            )}\n        </div>\n    )\n};\n\nexport const EmbeddedNoteShow: React.FC<{ targetEntity: HasNote|null }> = (props) => {\n    const {data} = useData();\n\n    if (!props.targetEntity) {\n        return null;\n    }\n\n    const {noteId} = props.targetEntity;\n    if (!noteId) {\n        return null;\n    }\n\n    const note = data.notes.find(x => x.id === noteId);\n\n    if (!note) {\n        return null;\n    }\n\n    return (\n        <div>\n            {!note.mode || note.mode === 'markdown' ? (\n                <MarkedViewer markdown={note.content} contextId={note.contextId} />\n            ) : (\n                <TreeViewer json={note.content} contextId={note.contextId} />\n            )}\n        </div>\n    )\n};","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Data } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport { Task, TaskState } from '../db/task';\nimport { db } from '../db/db';\nimport { ProjectState } from '../db/project';\nimport moment from 'moment';\nimport * as styles from '../layout/styles';\nimport { EmbeddedNoteEdit } from '../components/EmbeddedNote';\nimport { cx } from 'emotion';\n\nexport class ShowTaskPage extends React.Component<{ data: Data, id: string, refreshData(): void }, { title: string, source: string }> {\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            title: '',\n            source: '/tasks'\n        }\n    }\n\n    componentDidMount() {\n        const urlParams = new URLSearchParams(window.location.search);\n\n        let task = this.props.data.tasks.find(x => x.id === this.props.id);\n        this.setState({ title: task!.title }, () => {\n            if (urlParams.has('source')) {\n                this.setState({ source: decodeURIComponent(urlParams.get('source')!)});\n            }\n        });\n    }\n\n    async setContext(task: Task, event: React.ChangeEvent<HTMLSelectElement>) {\n        let contextId: string|null = event.target.value;\n\n        if (contextId === '') {\n            contextId = null;\n        }\n\n        task.contextId = contextId;\n        await db.tasks.save(task);\n        this.props.refreshData();\n    }\n\n    async setProject(task: Task, event: React.ChangeEvent<HTMLSelectElement>) {\n        let projectId: string|null = event.target.value;\n\n        if (projectId === '') {\n            projectId = null;\n        }\n\n        task.projectId = projectId;\n        await db.tasks.save(task);\n        this.props.refreshData();\n    }\n\n    async setDefer(task: Task, event: React.ChangeEvent<HTMLInputElement>) {\n        let value: string|null = event.target.value;\n\n        if (value === '') {\n            task.deferredUntil = null;\n        } else {\n            task.deferredUntil = new Date(value).toISOString();\n        }\n\n        await db.tasks.save(task);\n        this.props.refreshData();\n    }\n\n    async onKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            let task = this.props.data.tasks.find(x => x.id === this.props.id);\n\n            if (!task) {\n                return;\n            }\n\n            if (task.title !== this.state.title) {\n                task.title = this.state.title;\n                await db.tasks.save(task);\n                this.props.refreshData();\n            }\n        }\n    }\n\n    async setTaskState(state: TaskState) {\n        const task = this.props.data.tasks.find(x => x.id === this.props.id);\n\n        if (!task) {\n            return;\n        }\n\n        if (task.state === state) {\n            return;\n        }\n\n        task.state = state;\n        task.stateChangedAt = new Date().toISOString();\n        await db.tasks.save(task);\n        this.props.refreshData();\n    }\n\n    render() {\n        let task = this.props.data.tasks.find(x => x.id === this.props.id);\n\n        if (!task) {\n            return <div>Task not found.</div>\n        }\n\n        let isDirty = false;\n\n        if (task.title !== this.state.title) {\n            isDirty = true;\n        }\n\n        return (\n            <>\n                <ToolSection>\n                    <NavLink to={this.state.source} className=\"button\">Back</NavLink>\n                    {/* <NavLink to={`/tasks/${task.id}/edit`} className=\"button\">Edit</NavLink> */}\n                </ToolSection>\n\n                <ToolSection>\n                    <div>Task</div>\n                    <input type=\"text\" className=\"input is-large is-wide\" style={{border: isDirty ? '2px solid orange' : undefined}} value={this.state.title} onKeyDown={e => this.onKeyDown(e)} onChange={e => this.setState({ title: e.target.value })} />\n\n                    <div>State</div>\n                    <div className={cx(styles.horizontalSpace('.5rem'))}>\n                        <div className={cx('button', task.state !== 'active' ? 'inactive' : null)} onClick={() => this.setTaskState('active')}>Active</div>\n                        <div className={cx('button', task.state !== 'incubated' ? 'inactive' : null)} onClick={() => this.setTaskState('incubated')}>Incubated</div>\n                        <div className={cx('button', task.state !== 'completed' ? 'inactive' : null)} onClick={() => this.setTaskState('completed')}>Completed</div>\n                    </div>\n\n                    <div>Context</div>\n                    <select className=\"input is-large\" value={task.contextId || ''} onChange={e => this.setContext(task!, e)}>\n                        <option value=\"\">Not set</option>\n                        {this.props.data.contexts.map(c => (\n                            <option key={c.id} value={c.id}>{c.title}</option>\n                        ))}\n                    </select>\n\n                    <div>Project</div>\n                    <select className=\"input is-large\" value={task.projectId || ''} onChange={e => this.setProject(task!, e)}>\n                        <option value=\"\">Not set</option>\n                        {this.props.data.projects.filter(p => p.state === ProjectState.Active || p.id === task!.projectId).map(c => (\n                            <option key={c.id} value={c.id}>{c.title}</option>\n                        ))}\n                    </select>\n\n                    <div>Defer</div>\n                    <input type=\"date\" className=\"input is-large\" value={(task.deferredUntil && moment(task.deferredUntil).format('YYYY-MM-DD')) || ''} onChange={e => this.setDefer(task!, e)} />\n                </ToolSection>\n\n                <ToolSection>\n                    <EmbeddedNoteEdit targetEntity={task} {...this.props} />\n                </ToolSection>\n            </>\n        );\n    }\n}","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Data } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport { Project, ProjectState } from '../db/project';\nimport { db } from '../db/db';\nimport { Loader } from '../components/Loader';\nimport { ContextSelector } from '../components/ContextSelector';\n\nexport class ShowProjectPage extends React.Component<{ data: Data, refreshData: () => void, id: string }, { title: string }> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            title: '',\n        }\n    }\n\n    componentDidMount() {\n        let target = this.props.data.projects.find(x => x.id === this.props.id);\n        this.setState({title: target!.title});\n    }\n\n    async setContext(target: Project, contextId: string|null) {\n        if (contextId === '') {\n            contextId = null;\n        }\n\n        target.contextId = contextId;\n        await db.projects.save(target);\n        this.props.refreshData();\n    }\n\n    async setProjectState(target: Project, event: React.ChangeEvent<HTMLSelectElement>) {\n        let projectState: ProjectState = event.target.value as ProjectState;\n\n        target.state = projectState;\n        await db.projects.save(target);\n        this.props.refreshData();\n    }\n\n    async onKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            let target = this.props.data!.projects.find(x => x.id === this.props.id);\n\n            if (!target) {\n                return;\n            }\n\n            if (target.title !== this.state.title) {\n                target.title = this.state.title;\n                await db.projects.save(target);\n                this.props.refreshData();\n            }\n        }\n    }\n\n    render() {\n        if (this.props.data === null) {\n            return <Loader />;\n        }\n\n        let target = this.props.data.projects.find(x => x.id === this.props.id);\n\n        if (!target) {\n            return <div>Project not found.</div>\n        }\n\n        let isDirty = false;\n\n        if (target.title !== this.state.title) {\n            isDirty = true;\n        }\n\n        return (\n            <>\n                <ToolSection>\n                    <NavLink to={`/projects`} className=\"button\">Back</NavLink>\n                </ToolSection>\n\n                <ToolSection>\n                    <div>Project</div>\n                    <input type=\"text\" className=\"input is-large is-wide\" style={{border: isDirty ? '2px solid orange' : undefined}} value={this.state.title} onKeyDown={e => this.onKeyDown(e)} onChange={e => this.setState({ title: e.target.value })} />\n                    \n                    <div>Context</div>\n                    <ContextSelector contextId={target.contextId} onChange={e => this.setContext(target!, e)} data={this.props.data} />\n                    <div>State</div>\n                    <select className=\"input is-large\" value={target.state || ProjectState.Active} onChange={e => this.setProjectState(target!, e)}>\n                        {Object.keys(ProjectState).map(c => (\n                            <option key={c} value={c}>{c}</option>\n                        ))}\n                    </select>\n\n                </ToolSection>\n\n            </>\n        );\n    }\n}","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Data } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport { Context, ContextState } from '../db/context';\nimport { db } from '../db/db';\n\nexport class ShowContextPage extends React.Component<{id: string, data: Data, refreshData(): void }, { title: string }> {\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            title: '',\n        }\n    }\n\n    componentDidMount() {\n        let target = this.props.data.contexts.find(x => x.id === this.props.id);\n        this.setState({ title: target!.title })\n    }\n\n    async onKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            const target = this.props.data.contexts.find(x => x.id === this.props.id);\n\n            if (!target) {\n                return;\n            }\n\n            if (target.title !== this.state.title) {\n                target.title = this.state.title;\n                await db.contexts.save(target);\n                this.props.refreshData();\n            }\n        }\n    }\n\n    async setContext(target: Context, event: React.ChangeEvent<HTMLSelectElement>) {\n        let contextId: string|null = event.target.value;\n\n        if (contextId === '') {\n            contextId = null;\n        }\n\n        target.contextId = contextId;\n        await db.contexts.save(target);\n        this.props.refreshData();\n    }\n\n    async setContextState(target: Context, event: React.ChangeEvent<HTMLSelectElement>) {\n        let contextState: ContextState = event.target.value as ContextState;\n\n        target.state = contextState;\n        await db.contexts.save(target);\n        this.props.refreshData();\n    }\n\n    render() {\n        let target = this.props.data.contexts.find(x => x.id === this.props.id);\n\n        if (!target) {\n            return <div>Context not found.</div>\n        }\n\n        let isDirty = false;\n\n        if (target.title !== this.state.title) {\n            isDirty = true;\n        }\n\n        return (\n            <>\n                <ToolSection>\n                    <NavLink to={`/contexts`} className=\"button\">Back</NavLink>\n                </ToolSection>\n\n                <ToolSection>\n                    <div>Context</div>\n                    <input type=\"text\" className=\"input is-large is-wide\" style={{border: isDirty ? '2px solid orange' : undefined}} value={this.state.title} onKeyDown={e => this.onKeyDown(e)} onChange={e => this.setState({ title: e.target.value })} />\n\n                    <div>Parent Context</div>\n                    <select className=\"input is-large\" value={target.contextId || ''} onChange={e => this.setContext(target!, e)}>\n                        <option value=\"\">Not set</option>\n                        {this.props.data.contexts.filter(c => c.id !== target!.id).map(c => (\n                            <option key={c.id} value={c.id}>{c.title}</option>\n                        ))}\n                    </select>\n\n                    <div>State</div>\n                    <select className=\"input is-large\" value={target.state || ContextState.Active} onChange={e => this.setContextState(target!, e)}>\n                        {Object.keys(ContextState).map(c => (\n                            <option key={c} value={c}>{c}</option>\n                        ))}\n                    </select>\n                </ToolSection>\n            </>\n        );\n    }\n}","import * as React from 'react';\nimport { Data } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport { syncer } from '../db/syncer';\nimport { Loader } from '../components/Loader';\n\ninterface DataPageProps {\n    data: Data;\n    refreshData(): void;\n}\n\nexport class DataPage extends React.Component<{ render: (props: DataPageProps)=>React.ReactNode }, { data: Data|null, error: string|null }> {\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            error: null,\n            data: null\n        };\n\n        this.refreshData = this.refreshData.bind(this);\n    }\n\n    async componentDidMount() {\n        syncer.registerDataListener(data => this.setState({ data }));\n        this.setState({ data: await syncer.getData() }, async () => {\n            await syncer.startServerSync();\n            await syncer.ensureServerSyncEnqueued();\n        });\n    }\n\n    async refreshData() {\n        this.setState({ data: await syncer.getData() }, async () => {\n            syncer.startServerSync();\n        });\n    }\n\n    render() {\n        if (this.state.error) {\n            return (\n                <>\n                    <div>{this.state.error}</div>\n                    <ToolSection>\n                        <div className=\"button\" onClick={() => this.refreshData()}>Retry</div>\n                        <div className=\"button\" onClick={() => window.location.reload()}>Reload</div>\n                        <div className=\"button\" onClick={() => window.location.reload(true)}>Force Reload</div>\n                        <a className=\"button\" href=\"/login\" >Login</a>\n                    </ToolSection>\n                </>\n            );\n        }      \n        \n        if (!this.state.data) {\n            return <Loader />;\n        }\n\n        return this.props.render({ data: this.state.data, refreshData: this.refreshData });\n    }\n}","import {createInstance} from 'localforage';\nimport * as md5 from 'js-md5';\n\nconst lifeKeyStore = createInstance({ name: 'lifekeystore' });\nconst privateKeyStore = createInstance({ name: 'privatekeystore' });\n\nexport interface LifeKey {\n    fingerprint: string;\n    publicKey: string;\n    createdAt: string;\n}\n\nconst rsaSettings = {\n    name: \"RSA-OAEP\",\n    modulusLength: 2048,\n    publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n    hash: {name: \"SHA-256\"},\n};\n\nconst aesSettings = { name: 'AES-GCM', length: 256 };\n\nexport async function generateRsaKey() {\n    try {\n        const keyPair = await crypto.subtle.generateKey(\n            rsaSettings,\n            true,\n            ['encrypt', 'decrypt']\n        );\n\n        const rawPrivateKey = await crypto.subtle.exportKey('pkcs8', keyPair.privateKey);\n        const privateKeyBase64 = arrayBufferToBase64(rawPrivateKey);\n\n        const rawPublicKey = await crypto.subtle.exportKey('spki', keyPair.publicKey);\n        const publicKeyBase64 = arrayBufferToBase64(rawPublicKey);\n        const publicKeyFingerprint = md5.hex(rawPublicKey);\n\n        return { fingerprint: publicKeyFingerprint, privateKey: privateKeyBase64, publicKey: publicKeyBase64 };\n    } catch (error) {\n        console.error('generateKey', error, error.message)\n        throw error;\n    }\n}\n\nexport async function derivePublicRsaKey(privateKey: CryptoKey) {\n    const jwk = await crypto.subtle.exportKey(\"jwk\", privateKey);\n\n    delete jwk.d;\n    delete jwk.dp;\n    delete jwk.dq;\n    delete jwk.q;\n    delete jwk.qi;\n    jwk.key_ops = [\"encrypt\", \"wrapKey\"];\n    \n    const publicKey = await crypto.subtle.importKey(\"jwk\", jwk, rsaSettings, true, [\"encrypt\", \"wrapKey\"]);\n    return publicKey;\n}\n\nexport async function importLifeKey(privateKeyBase64: string) {\n    const importedPrivateKey = base64ToArrayBuffer(privateKeyBase64);\n    const extractablePrivateKey = await crypto.subtle.importKey('pkcs8', importedPrivateKey, rsaSettings, true, ['decrypt', 'unwrapKey']);\n    \n    const publicKey = await derivePublicRsaKey(extractablePrivateKey);\n    const rawPublicKey = await crypto.subtle.exportKey('spki', publicKey);\n    const publicKeyBase64 = arrayBufferToBase64(rawPublicKey);\n    const publicKeyFingerprint = md5.hex(rawPublicKey);\n\n    const privateKey = await crypto.subtle.importKey('pkcs8', importedPrivateKey, rsaSettings, false, ['decrypt', 'unwrapKey']);\n    privateKeyStore.setItem(publicKeyFingerprint, privateKey);\n\n    const lifeKey: LifeKey = {\n        fingerprint: publicKeyFingerprint,\n        publicKey: publicKeyBase64,\n        createdAt: new Date().toISOString(),\n    };\n\n    lifeKeyStore.setItem(lifeKey.fingerprint, lifeKey);\n}\n\nexport async function encryptAndWrap(fingerprint: string, data: string) {\n    try {\n        const lifeKey = await lifeKeyStore.getItem(fingerprint) as LifeKey;\n        if (!lifeKey) {\n            throw new Error(`Key with fingerprint ${fingerprint} not found`);\n        }        \n        const importedPublicKeyBuffer = base64ToArrayBuffer(lifeKey.publicKey);\n        const publicKey = await crypto.subtle.importKey('spki', importedPublicKeyBuffer, rsaSettings, true, ['encrypt', 'wrapKey']);\n    \n        const aesKey = await generateAesKey();\n        const iv = crypto.getRandomValues(new Uint8Array(12));\n    \n        const encryptedData = await crypto.subtle.encrypt({ \n            name: 'AES-GCM', \n            length: 256,\n            iv\n        }, aesKey, strToArrayBuffer(data));\n    \n        const encryptedDataBase64 = arrayBufferToBase64(encryptedData);\n    \n        const wrappedAesKey = await crypto.subtle.wrapKey('raw', aesKey, publicKey, rsaSettings);\n        const wrappedAesKeyBase64 = arrayBufferToBase64(wrappedAesKey);\n    \n        const ivBase64 = arrayBufferToBase64(iv);\n    \n        const result = {\n            payload: encryptedDataBase64,\n            key: wrappedAesKeyBase64,\n            fingerprint: fingerprint,\n            iv: ivBase64\n        };\n    \n        return result;\n    } catch (error) {\n        console.error('encryptAndWrap', error, error.message)\n        throw error;\n    }\n}\n\nexport async function unwrapAndDecrypt(fingerprint: string, wrappedKeyBase64: string, dataBase64: string, ivBase64: string) {\n    try {\n        const privateKey = await privateKeyStore.getItem(fingerprint) as CryptoKey;\n        if (!privateKey) {\n            throw new Error(`Key with fingerprint ${fingerprint} not found`);\n        }\n\n        const aesKey = await crypto.subtle.unwrapKey('raw', base64ToArrayBuffer(wrappedKeyBase64), privateKey, rsaSettings, aesSettings, false, ['decrypt'])\n        const unencryptedDataBuffer = await crypto.subtle.decrypt({ \n            name: 'AES-GCM', \n            length: 256,\n            iv: base64ToArrayBuffer(ivBase64)\n        }, aesKey, base64ToArrayBuffer(dataBase64));\n        return arrayBufferToString(unencryptedDataBuffer);\n    } catch (error) {\n        console.error('unwrapAndDecrypt', error, error.message)\n        throw error;\n    }\n}\n\nexport async function generateAesKey(): Promise<any> {\n    try {\n        const key = await crypto.subtle.generateKey(aesSettings, true, ['encrypt', 'decrypt']);\n        return key;\n    } catch (error) {\n        console.error('generateKey', error, error.message)\n        throw error;\n    }\n}\n\nexport async function getCurrentKey() {\n    const keys = await lifeKeyStore.keys();\n\n    if (keys.length === 0) {\n        throw new Error('No key found');\n    }\n\n    if (keys.length > 1) {\n        throw new Error('More than 1 key found!');\n    }\n\n    return (await lifeKeyStore.getItem(keys[0])) as LifeKey;\n}\n\n\nfunction arrayBufferToBase64( buffer: ArrayBuffer ) {\n    var binary = '';\n    var bytes = new Uint8Array(buffer);\n    var len = bytes.byteLength;\n    for (var i = 0; i < len; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa( binary );\n}\n\nfunction base64ToArrayBuffer(base64: string) {\n    var binary_string =  window.atob(base64);\n    var len = binary_string.length;\n    var bytes = new Uint8Array(len);\n    for (var i = 0; i < len; i++)        {\n        bytes[i] = binary_string.charCodeAt(i);\n    }\n    return bytes.buffer;\n}\n\n// function webSafe64(base64: string) {\n//     return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n// }\n\n// // Convert from web-safe to normal, add trailing \"=\"s\n// function normal64(base64: string) {\n//     return base64.replace(/\\-/g, '+').replace(/_/g, '/') + '=='.substring(0, (3*base64.length)%4);\n// }\n\nfunction strToArrayBuffer(str: string) {\n    var buf = new ArrayBuffer(str.length * 2);\n    var bufView = new Uint16Array(buf);\n    for (var i = 0, strLen = str.length; i < strLen; i++) {\n      bufView[i] = str.charCodeAt(i);\n    }\n    return buf;\n}\n\nfunction arrayBufferToString(buf: ArrayBuffer) {\n    return String.fromCharCode.apply(null, new Uint16Array(buf) as any);\n}","import * as React from 'react';\nimport { ToolSection } from '../framework/ToolSection';\nimport { db } from '../db/db';\nimport { getCurrentKey, generateRsaKey, importLifeKey, LifeKey } from '../db/crypt';\nimport * as dropboxApi from '../lib/dropboxApi';\n\nexport const SettingsPage: React.FC<{}> = () => {\n    // const [pushSubscribed, setPushSubscribed] = React.useState<boolean|null>(null);\n    const [currentKey, setCurrentKey] = React.useState<LifeKey|null>(null);\n\n    const [serviceWorkerState, setServiceWorkerState] = React.useState('none');\n    const [generatedKey, setGeneratedKey] = React.useState<string|null>(null);\n    const [privateKey, setPrivateKey] = React.useState<string|null>(null);\n\n    async function clearEntities() {\n        if(!window.confirm('Clear all local data?')) {\n            return;\n        }\n\n        db.contexts.dropInstance();\n        db.tasks.dropInstance();\n        db.notes.dropInstance();\n        db.projects.dropInstance();\n        db.people.dropInstance();\n    }\n\n    const [dropboxConnected, setDropboxConnected] = React.useState<boolean|null>(null);\n    React.useEffect(() => {\n        dropboxApi.isSignedIn().then(status => {\n            setDropboxConnected(status);\n        });\n    }, [])\n\n    React.useEffect(() => {\n        async function componentDidMount() {\n            // navigator.serviceWorker.ready.then(async (registration) => {\n            //     const subscription = await registration.pushManager.getSubscription();\n            //     setPushSubscribed(!!subscription);\n            // });\n    \n            const registration = await navigator.serviceWorker.ready;\n            const state = [registration.active ? 'active' : null, registration.waiting ? 'waiting' : null, registration.installing ? 'installing' : null];\n            setServiceWorkerState(state.filter(x => x != null).join(', '))\n    \n            await refreshKeys();\n        }\n        componentDidMount() \n    }, [])\n\n    async function refreshKeys() {\n        try {\n            const newCurrentKey = await getCurrentKey();\n            setCurrentKey(newCurrentKey)\n        } catch(err) {\n        }\n    }\n\n    // function unsubscribePush() {\n    //     navigator.serviceWorker.ready.then(async (registration) => {\n    //         const subscription = await registration.pushManager.getSubscription();\n    //         if (subscription) {\n    //             await subscription.unsubscribe();\n    //             setPushSubscribed(!!(await registration.pushManager.getSubscription()));\n    //         }\n    //     });\n    // }\n\n    // function subscribePush() {\n    //     navigator.serviceWorker.ready.then(async (registration) => {\n    //         try {\n    //             const options = {\n    //                 applicationServerKey: 'BEl6vcKrENjrQk-LikFlZ5hy6VuVgSUUZ2uCYOQsuYjMP_WbigIOfDITEkF6JhEbd9MVw9RKiMODYxmpONuYsqY',\n    //                 userVisibleOnly: true\n    //             };\n    //             const subscription = await registration.pushManager.subscribe(options);\n    //             console.log(JSON.stringify(subscription))\n    //             setPushSubscribed(!!subscription);\n    //             // Api.testPush(subscription);\n    //         } catch (err) {\n    //             console.log('Error', err)\n    //         }\n    //     });\n    // }\n\n    function clearServiceWorker() {\n        navigator.serviceWorker.ready.then(async (registration) => {\n            await registration.update();\n        });\n    }\n\n    return (\n        <>\n            <ToolSection>\n                <div className=\"button\" onClick={() => window.location.reload()}>Reload</div>\n                <div className=\"button\" onClick={() => window.location.reload(true)}>Force Reload</div>\n            </ToolSection>\n            <ToolSection>\n                <div className=\"button\" onClick={async () => { await dropboxApi.signIn(); setDropboxConnected(await dropboxApi.isSignedIn()) }}>Connect Dropbox</div>\n                <div style={{display: 'inline-block', background: '#222', padding: '.5rem'}}>Status: {dropboxConnected === null ? 'unknown' : dropboxConnected ? 'connected' : 'not connected'}</div>\n                {dropboxApi.isLocalMode && <div style={{display: 'inline-block', background: '#222', padding: '.5rem'}}>Local [ {window.location.host} ]</div>}\n            </ToolSection>\n            <ToolSection>\n                <div className=\"button\" onClick={async () => await clearEntities()}>Clear Entities</div>\n                <div className=\"button\" onClick={() => clearServiceWorker()}>Update Service Worker</div>\n                <div style={{display: 'inline-block', background: '#222', padding: '.5rem'}}>Service Workers [ {serviceWorkerState} ]</div>\n            </ToolSection>\n            {/* <ToolSection>\n                {pushSubscribed === true && <div className=\"button\" onClick={async () => await unsubscribePush()}>Unsubscribe Push</div>}\n                {pushSubscribed === false && <div className=\"button\" onClick={async () => await subscribePush()}>Subscribe Push</div>}\n            </ToolSection> */}\n            {false && <ToolSection>\n                <h2>Encryption</h2>\n                {!currentKey && (\n                    <>\n                        <div>\n                            <textarea style={{width: '100%'}} onChange={e => setPrivateKey(e.target.value)} />\n                        </div>\n                        <button className=\"button\" onClick={async () => { await importLifeKey(privateKey!); await refreshKeys(); }}>Set private key</button>\n                        <h4>Generate key</h4>\n                        <div className=\"button\" onClick={async () => setGeneratedKey((await generateRsaKey()).privateKey)}>Generate</div>\n                        <textarea style={{width: '100%', background: '#555', color: '#ddd'}} readOnly value={generatedKey || ''} />\n                    </>\n                )}\n                <h4>Keys</h4>\n                <div className=\"list\">\n                    {!currentKey && <div>No keys</div>}\n                    {currentKey && (\n                        <div className=\"item\">\n                            {currentKey!.fingerprint}\n                        </div>\n                    )}\n                </div>\n            </ToolSection>}\n        </>\n    );\n}","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as styles from '../../layout/styles';\nimport { useData } from '../../model';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { Person } from '../../db/person';\nimport { cx } from 'emotion';\n\nexport const PeoplePage: React.FC<{}> = props => {\n    const {data} = useData();\n\n    const renderTarget = (target: Person) => {\n        return (\n            <NavLink key={target.id} to={`/people/${target.id}`} className={cx('item', styles.hoverGlow)}>\n                <div>\n                    {target.name}\n                </div>\n            </NavLink>\n        );\n    };\n\n    return (\n        <>\n            <ToolSection>\n                <NavLink to={`/people/new`} className=\"button\">New Person</NavLink>\n            </ToolSection>\n\n            <div className=\"list\">\n                {data.people.sort((a, b) => a.name.localeCompare(b.name)).map(t => renderTarget(t))}\n            </div>\n        </>\n    );\n};\n","import * as React from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { db } from '../../db/db';\nimport { useState } from 'react';\nimport { EmbeddedNoteEdit } from '../../components/EmbeddedNote';\nimport { useData } from '../../model';\n\nconst useForm = <T extends {}>(initialState: ()=>T) => {\n    const [values, setValues] = useState<T>(initialState);\n    \n    const handleChange = (event: any) => {\n        event.persist();\n        setValues((values) => ({ ...values, [event.target.name]: event.target.value }));\n    };\n\n    return {\n        values,\n        handleChange\n    };\n};\n\nexport const EditPersonPage: React.FC<{id?: string }> = (props) => {\n    const {data, refreshData} = useData();\n    const [goBack, setGoBack] = useState<string|null>(null);\n\n    const {values, handleChange} = useForm(() => {\n        const person = props.id ? data.people.find(x => x.id === props.id) : null;\n        return {\n            name:  person ? person.name : '',\n            alias: person ? person.alias : '',\n            birthday: person ? person.birthday : null\n        }\n    });\n\n    const onSave = async () => {\n        const id = props.id || null;\n\n        if (id) {\n            let person = await db.people.get(id)!;\n\n            if (person === null) {\n                throw new Error('Person is null?');\n            }\n\n            person.name = values.name;\n            person.alias = (values.alias?.length && values.alias) || null;\n            person.birthday = values.birthday;\n\n            await db.people.save(person);\n            refreshData();\n            setGoBack(person.id);\n        } else {\n            const person = await db.people.create({\n                name: values.name,\n                alias: (values.alias?.length && values.alias) || null,\n                birthday: values.birthday,\n                noteId: null,\n            });\n\n            refreshData();\n            setGoBack(person.id);\n        }\n    };\n\n    const person = props.id ? data.people.find(x => x.id === props.id) || null : null;\n\n    return (\n        <>\n            {goBack && <Redirect to={`/people/${goBack}`} />}\n            <div style={{height: '100%', display: 'flex', flexDirection: 'column'}} >\n                <ToolSection>\n                    <NavLink to={`/people`} className=\"button\">Back</NavLink>\n                    {props.id && <NavLink to={`/people/${props.id}`} className=\"button\">Show</NavLink>}\n                </ToolSection>\n                <ToolSection>\n                    {props.id === undefined ?\n                            <button type=\"button\" className=\"button is-primary\" onClick={onSave}>Add person</button> :\n                            <button type=\"button\" className=\"button is-primary\" onClick={onSave}>Update person</button>}\n                </ToolSection>\n                <ToolSection>\n                    <div>Name</div>\n                    <input type=\"text\" name=\"name\" className=\"input is-large is-wide\" value={values.name} onChange={handleChange} />\n                    <div>Alias</div>\n                    <input type=\"text\" name=\"alias\" className=\"input is-large is-wide\" value={values.alias || ''} onChange={handleChange} />\n                    <div>Birthday</div>\n                    <input type=\"date\" name=\"birthday\" className=\"input is-large\" value={values.birthday || ''} onChange={handleChange} />\n                </ToolSection>\n                <ToolSection>\n                    <EmbeddedNoteEdit targetEntity={person} />\n                </ToolSection>\n            </div>\n        </>\n    );\n};","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useData } from '../../model';\nimport { ToolSection } from '../../framework/ToolSection';\nimport moment from 'moment';\nimport { EmbeddedNoteShow } from '../../components/EmbeddedNote';\nimport { getAlias } from '../../db/person';\nimport { PersonReferenceViewer } from '../../components/ReferenceViewer';\n\nexport const ShowPersonPage: React.FC<{id: string}> = (props) => {\n    const {data} = useData();\n    const person = data.people.find(x => x.id === props.id);\n\n    if (!person) {\n        return <div>Person not found.</div>\n    }\n\n    return (\n        <>\n            <ToolSection>\n                <NavLink to={`/people`} className=\"button\">Back</NavLink>\n                <NavLink to={`/people/${person.id}/edit`} className=\"button\">Edit</NavLink>\n            </ToolSection>\n            <div className=\"panel\">\n                <div className=\"content\" style={{padding: '1rem'}}>\n                    <h1>{person.name} (@{getAlias(person)})</h1>\n                    {person.birthday && <div>Birthday: {moment(person.birthday).format('YYYY-MM-DD')}</div>}\n                    <EmbeddedNoteShow targetEntity={person} {...props} />\n                    <PersonReferenceViewer alias={getAlias(person)} />\n                </div>\n            </div>\n        </>\n    );\n}; ","import * as React from 'react';\nimport { ToolSection } from '../framework/ToolSection';\nimport { db } from '../db/db';\nimport { useData } from '../model';\n\nexport const StatsPage: React.SFC<{}> = (props) => {\n    const {data} = useData();\n    const [noteTotalCount, setNoteTotalCount] = React.useState<number|null>(null);\n    const [taskTotalCount, setTaskTotalCount] = React.useState<number|null>(null);\n    const [peopleTotalCount, setPeopleTotalCount] = React.useState<number|null>(null);\n    const [projectTotalCount, setProjectTotalCount] = React.useState<number|null>(null);\n    const [contextTotalCount, setContextTotalCount] = React.useState<number|null>(null);\n    \n    React.useEffect(() => {\n        db.notes.getSyncKeys().then(c => setNoteTotalCount(c.length));\n        db.tasks.getSyncKeys().then(c => setTaskTotalCount(c.length));\n        db.people.getSyncKeys().then(c => setPeopleTotalCount(c.length));\n        db.projects.getSyncKeys().then(c => setProjectTotalCount(c.length));\n        db.contexts.getSyncKeys().then(c => setContextTotalCount(c.length));\n    });\n\n    return (\n        <>\n            <ToolSection>\n            </ToolSection>\n            <div className=\"panel\">\n                <div className=\"content\" style={{padding: '1rem'}}>\n                    <h1>Stats</h1>\n                    <ul>\n                        <li>Notes: {data.notes.length}, versions: {noteTotalCount ? noteTotalCount : '...'}</li>\n                        <li>Tasks: {data.tasks.length}, versions: {taskTotalCount ? taskTotalCount : '...'}</li>\n                        <li>People: {data.people.length}, versions: {peopleTotalCount ? peopleTotalCount : '...'}</li>\n                        <li>Projects: {data.projects.length}, versions: {projectTotalCount ? projectTotalCount : '...'}</li>\n                        <li>Contexts: {data.contexts.length}, versions: {contextTotalCount ? contextTotalCount : '...'}</li>\n                    </ul>\n                </div>\n            </div>\n        </>\n    );\n}","import * as React from 'react';\nimport { ContextBar } from '../../components/ContextBar';\nimport { useQueryState } from '../../lib/UseQueryState';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { useData } from '../../model';\nimport moment from 'moment';\nimport { getNoteTitle, Note } from '../../db/note';\nimport { ContextTag } from '../../components/ContextTag';\nimport { TagList } from '../../components/TagInput';\nimport { MarkedViewer } from '../../components/MarkedViewer';\nimport _ from 'lodash';\nimport * as ContextActions from '../../lib/contextActions';\nimport { TreeViewer } from '../../components/TreeViewer';\nimport { NavLink } from 'react-router-dom';\n\nexport const DailyNotePage: React.SFC<{ }> = (props) => {\n    const [contextId, setContextId] = useQueryState(null, 'context');\n    const {data} = useData();\n\n    const oneWeekAgo = moment().add(-7,'d');\n    \n    const filteredContexts = ContextActions.getFilteredContextIds(contextId, data);\n    const dailyNotes = _.orderBy(data.notes.filter(x => x.dailyDate && moment(x.dailyDate) > oneWeekAgo && (!contextId || filteredContexts.indexOf(x.contextId!) !== -1)), n => n.dailyDate,  'desc');\n\n    function renderViewer(note: Note) {\n        if (!note.mode || note.mode === 'markdown') {\n            return <MarkedViewer markdown={note.content} contextId={note.contextId} />;\n        } \n          \n        return <TreeViewer json={note.content} contextId={note.contextId} />;\n    }\n\n    const contextCounts = _.countBy(data.notes.filter(n => n.dailyDate), x  => x.contextId);\n    const contexts = _.orderBy(Object.keys(contextCounts).map(k => ({ contextId: k, count: contextCounts[k], context: data.contexts.find(x => x.id === k) })), x => x.count, 'desc');\n\n    return (\n        <div style={{display: 'flex', height: '100%'}}>\n            <ContextBar contextId={contextId} onChange={setContextId} />\n            <div style={{width: '100%'}}>\n                <ToolSection>\n                    {contexts.map(c => (\n                        <NavLink key={c.contextId} to={`/notes/new?context=${c.contextId}&daily`} className=\"button\">New Note{c.context ? ` - ${c.context.title}` : ''}</NavLink>\n                    ))}\n                </ToolSection>\n                <div className=\"panel\">\n                    {dailyNotes.map(n => (\n                        <div key={n.id} className=\"content\" style={{padding: '1rem'}}>\n                            <h1>{getNoteTitle(n)}</h1>\n                            <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                                <TagList tags={n.tags} />\n                                <ContextTag contextId={n.contextId} />\n                            </div>\n                            {renderViewer(n)}\n                        </div>))}\n                </div>\n            </div>\n        </div>\n    )\n};\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Layout } from './components/Layout';\nimport { TaskPage } from './pages/TaskPage';\nimport { EditNotePage } from './pages/notes/EditNotePage';\nimport { ShowNotePage, ShowVirtualNotePage } from './pages/notes/ShowNotePage';\nimport { NotePage } from './pages/notes/NotePage';\nimport { PlaygroundPage } from './pages/PlaygroundPage';\nimport { ContextPage } from './pages/ContextPage';\nimport { ProjectPage } from './pages/ProjectPage';\nimport { ShowTaskPage } from './pages/ShowTaskPage';\nimport { ShowProjectPage } from './pages/ShowProjectPage';\nimport { ShowContextPage } from './pages/ShowContextPage';\nimport { DataPage } from './pages/DataPage';\nimport { SyncPage } from './pages/SyncPage';\nimport { SettingsPage } from './pages/SettingsPage';\nimport { PeoplePage } from './pages/people/PeoplePage';\nimport { EditPersonPage } from './pages/people/EditPersonPage';\nimport { ShowPersonPage } from './pages/people/ShowPersonPage';\nimport { StatsPage } from './pages/StatsPage';\nimport {DataProvider} from './model';\nimport { DailyNotePage } from './pages/notes/DailyNotes';\nimport './theme.scss';\n\nexport const routes = <Layout>\n    <DataProvider>\n        <Switch>\n            <Route exact path='/' render={routeProps => <NotePage />} />\n            <Route exact path='/notes/new' render={routeProps => <EditNotePage />} />\n            <Route exact path='/notes/daily' render={routeProps => <DailyNotePage />} />\n            <Route exact path='/notes/virtual' render={routeProps => <ShowVirtualNotePage />} />\n            <Route exact path='/notes/:id' render={routeProps => <ShowNotePage id={routeProps.match.params.id} />} />\n            <Route exact path='/notes/:id/edit' render={routeProps => <EditNotePage id={routeProps.match.params.id} />} />\n            <Route exact path='/tasks' render={routeProps => <TaskPage />} />\n            <Route exact path='/tasks/:id' render={routeProps => <DataPage render={(props) => <ShowTaskPage {...props} id={routeProps.match.params.id} />} />} />\n            <Route exact path='/contexts' render={routeProps => <ContextPage />} />\n            <Route exact path='/contexts/:id' render={routeProps => <DataPage render={(props) => <ShowContextPage {...props} id={routeProps.match.params.id} />} />} />\n            <Route exact path='/projects' render={routeProps => <DataPage render={(props) => <ProjectPage {...props} />} />} />\n            <Route exact path='/projects/:id' render={routeProps => <DataPage render={(props) => <ShowProjectPage {...props} id={routeProps.match.params.id} />} />} />\n            <Route exact path='/people' render={routeProps => <PeoplePage />} />} />\n            <Route exact path='/people/new' render={routeProps => <EditPersonPage />} />\n            <Route exact path='/people/:id' render={routeProps => <ShowPersonPage id={routeProps.match.params.id} />} />\n            <Route exact path='/people/:id/edit' render={routeProps => <EditPersonPage id={routeProps.match.params.id} />} />\n            <Route path='/playground' component={PlaygroundPage} />\n            <Route path='/sync' component={SyncPage} />\n            <Route path='/stats' render={routeProps => <StatsPage />} />\n            <Route path='/settings' component={SettingsPage} />\n        </Switch>\n    </DataProvider>\n</Layout>;\n","import * as React from 'react';\nimport { ToolSection } from '../framework/ToolSection';\nimport { extractAllReferences } from '../db/note';\nimport { useData } from '../model';\n\nexport const PlaygroundPage: React.FC<{}> = () => {\n    \n    const {data} = useData();\n\n    console.log(extractAllReferences(data.notes));\n    \n    return (\n        <div style={{height: '100%'}}>\n            <ToolSection>\n            </ToolSection>\n        </div>\n    );\n}","import React from 'react';\nimport { ToolSection } from '../framework/ToolSection';\nimport { syncer, SyncStatus } from '../db/syncer';\nimport moment from 'moment';\n\nexport const SyncPage: React.FC<{}> = props => {\n    const [count, setCount] = React.useState(0);\n\n    React.useEffect(() => {\n        syncer.registerSyncListener(() => {\n            setCount(c => c + 1);\n        });\n    }, []);\n   \n    return (\n        <>\n            <React.Fragment key={count}></React.Fragment>\n            <ToolSection>\n                <div>Status: {SyncStatus[syncer.status]}</div>\n                <div className=\"button\" onClick={() => syncer.startServerSync()}>Sync Now</div>\n            </ToolSection>\n            <div className=\"list\">\n                {syncer.getResults().slice(0).reverse().map((result, i) =>\n                    <React.Fragment key={i}>\n                        <div className=\"item\">{result.endAt.getTime() - result.startAt.getTime()} ms - start: {moment(result.startAt).format('HH:mm:ss')}, end: {moment(result.endAt).format('HH:mm:ss')}, fetch: {result.fetch}, send: {result.send}{result.error ? `, error: ${result.error}` : null}</div>\n                    </React.Fragment>)}\n            </div>\n        </>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { Router } from 'react-router-dom';\nimport { routes } from './routes';\nimport {createBrowserHistory} from 'history';\n\nexport const history = createBrowserHistory()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router children={routes} history={history} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}