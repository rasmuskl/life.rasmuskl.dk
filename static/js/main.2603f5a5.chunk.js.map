{"version":3,"sources":["components/Layout.scss","serviceWorker.ts","components/ServiceWorkerInstall.tsx","layout/styles.ts","db/crypt.ts","db/EventListener.ts","db/db.ts","Api.ts","components/Loader.tsx","model.tsx","lib/dropboxApi.ts","db/syncer.ts","components/Layout.tsx","db/context.ts","db/project.ts","framework/ToolSection.tsx","framework/List.tsx","lib/UseQueryState.ts","components/SettingsCompactor.tsx","components/ContextTag.tsx","pages/TaskPage.tsx","lib/contextActions.ts","draftStorage.ts","components/TagInput.tsx","db/note.ts","components/MarkedViewer.tsx","components/SimpleSplitEditor.tsx","components/TreeEditor.tsx","components/ContextSelector.tsx","components/NoteEditor.tsx","pages/notes/EditNotePage.tsx","components/ReferenceViewer.tsx","pages/notes/ShowNotePage.tsx","pages/notes/NotePage.tsx","pages/ContextPage.tsx","pages/ProjectPage.tsx","components/EmbeddedNote.tsx","pages/ShowTaskPage.tsx","pages/ShowProjectPage.tsx","pages/ShowContextPage.tsx","pages/DataPage.tsx","pages/people/PeoplePage.tsx","pages/people/EditPersonPage.tsx","pages/people/ShowPersonPage.tsx","pages/StatsPage.tsx","routes.tsx","pages/PlaygroundPage.tsx","pages/SyncPage.tsx","pages/SettingsPage.tsx","service-worker-lifecycle.ts","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","ServiceWorkerInstall","props","state","installEvent","addEventListener","e","preventDefault","setState","this","prompt","userChoice","then","choiceResult","outcome","console","log","className","onClick","onInstallClick","React","hoverGlow","style","$nest","background","cursorPointer","cursor","display","alignItems","horizontalSpace","width","around","paddingLeft","undefined","paddingRight","marginLeft","marginRight","verticalSpace","height","paddingTop","paddingBottom","marginBottom","lifeKeyStore","createInstance","name","privateKeyStore","rsaSettings","modulusLength","publicExponent","Uint8Array","hash","aesSettings","length","generateRsaKey","a","crypto","subtle","generateKey","keyPair","exportKey","privateKey","rawPrivateKey","privateKeyBase64","arrayBufferToBase64","publicKey","rawPublicKey","publicKeyBase64","publicKeyFingerprint","md5","fingerprint","error","message","derivePublicRsaKey","jwk","d","dp","dq","q","qi","key_ops","importKey","importLifeKey","importedPrivateKey","base64ToArrayBuffer","extractablePrivateKey","setItem","lifeKey","createdAt","Date","toISOString","encryptAndWrap","data","getItem","Error","importedPublicKeyBuffer","generateAesKey","aesKey","iv","getRandomValues","encrypt","strToArrayBuffer","encryptedData","encryptedDataBase64","wrapKey","wrappedAesKey","wrappedAesKeyBase64","ivBase64","result","payload","key","unwrapAndDecrypt","wrappedKeyBase64","dataBase64","unwrapKey","decrypt","unencryptedDataBuffer","arrayBufferToString","getCurrentKey","keys","buffer","binary","bytes","len","byteLength","i","String","fromCharCode","btoa","base64","binary_string","atob","charCodeAt","str","buf","ArrayBuffer","bufView","Uint16Array","strLen","apply","EventListener","listeners","listener","push","filter","x","arg","LocalForageStore","Object","id","versionId","parentVersionId1","parentVersionId2","type","updatedAt","deferredUntil","store","changeListener","entityProps","now","entity","uuid","parentVersionIds","getKey","trigger","getLeafNodes","leafNodes","warn","map","node","_","getKeysPrefixed","prefix","k","startsWith","split","objs","parts","groups","o","leafNodeArrays","group","parents","leafObjs","register","dropInstance","join","replace","c","r","Math","random","toString","contexts","tasks","notes","projects","people","getSyncKeys","getBySyncKey","syncKey","get","entities","import","serverEntities","serverEntity","encryption","JSON","parse","unencryptedData","syncKeys","entityData","stringify","encryptionResult","encryptionJson","db","importEntites","importServerEntites","exportServerEntities","Api","entites","fetch","method","headers","getHeaders","body","response","contentType","indexOf","json","TypeError","ids","subscription","Headers","set","Loader","justifyContent","border","padding","Data","DataContext","createContext","refreshData","DataProvider","useState","setData","useEffect","syncer","registerDataListener","getData","startServerSync","ensureServerSyncEnqueued","init","value","useCallback","Provider","children","useData","useContext","isLocalMode","host","clientId","signIn","dropbox","Dropbox","assign","getAuthenticationUrl","isSignedIn","getStateSnapshot","snapshot","files","Set","setStateSnapshot","removeItem","listFiles","useSnapshot","getAccessToken","accessToken","hasMore","filesListFolderContinue","fileListResult","results","entries","path_lower","substring","p","file","add","has_more","filesListFolder","path","recursive","getAccessTokenFromUrl","ret","trim","forEach","param","shift","val","decodeURIComponent","retVal","Array","isArray","parseAuthFromHash","access_token","uploadFile","contents","filesUpload","getFile","filesDownload","Promise","resolve","blob","fileBlob","reader","FileReader","readAsText","tryStoreAccessKey","SyncStatus","status","Idle","intervalHandle","syncListener","dataListener","note","concat","task","context","project","person","loadData","setInterval","Syncing","startAt","startDropboxServerSync","getSyncStatus","syncStatus","serverSyncFetch","toSend","send","splice","sendCount","sendEntities","serverSyncSend","endAt","Failed","difference","setA","setB","_difference","delete","dropboxApi","toFetch","limit","pLimit","promises","all","size","getAll","orderBy","isMobile","matchMedia","matches","ContextState","ProjectState","Layout","sidebar","setSidebar","setCount","onNavClick","registerSyncListener","overflow","classes","styles","to","exact","activeClassName","overflowY","overflowX","ToolSection","verticalAround","List","items","renderItem","useQueryState","initialValue","queryParam","URLSearchParams","search","rawValue","setRawValue","urlParams","queryString","history","replaceState","pathname","dispatchEvent","CustomEvent","useQueryStateT","convertTo","convertFrom","strValue","SettingsCompactor","expanded","setExpanded","alwaysVisible","wideStyle","mobileOnly","flexDirection","ContextTag","contextId","find","title","perspectives","groupedProject","groupedContext","defaultPerspective","TaskPage","text","setText","showCompleted","showDeferred","showIncubated","showContextBar","includeNested","options","setOptions","setContextId","projectId","setProjectId","perspectiveId","setPerspectiveId","onKeyPress","create","content","stateChangedAt","noteId","onCompleteChange","save","renderProject","renderDeferred","moment","format","fromNow","renderNote","renderTitle","pattern","href","stopPropagation","target","getFilteredContextIds","contextIds","queue","next","pop","nestedContexts","nested","filterTasks","complete","t","incubatedProjectIds","Incubated","sort","b","renderTask","skipProjectContext","source","encodeURIComponent","checked","onChange","color","textDecoration","perspective","grouped","taskCounts","topContexts","ContextActions","taskBlock","filteredContextIds","stateOrder","Active","Completed","Dropped","emptyActiveProjects","filteredProjects","projectTasks","noProjectTasks","borderRight","renderListContext","depth","Inactive","htmlFor","placeholder","draftStore","getDraftKey","getDraft","clearDraft","TagInput","focus","setFocus","timeoutId","tagInput","onFocus","clearTimeout","current","onBlur","setTimeout","tagState","selectedTags","ref","withText","onTextChange","onKeyDown","decrementIndex","incrementIndex","addSelectedTag","addText","reopenLastTag","getFilteredAvailableTags","slice","index","tag","addTag","TagState","availableTags","max","min","lastTag","toLowerCase","Tag","TagList","tags","getNoteTitle","dailyDate","parsedTitle","exec","escapeRegExp","getNoteReferenceMatchRegExp","reference","RegExp","SplitMode","regex","MarkedViewer","useHistory","lifeNavigate","url","markdown","group1","matchContextId","matchTitle","prefixContext","contextTitle","test","referenceRegExp","html","marked","dangerouslySetInnerHTML","__html","NoteModeSelector","mode","onModeChange","SplitModeSelector","Split","Editor","Preview","SimpleSplitEditor","expand","zIndex","maxHeight","components","textAreaStyle","flexGrow","minWidth","borderTop","markedStyle","fontSize","onTextChanged","theme","showGutter","showPrintMargin","wrapEnabled","enableBasicAutocompletion","snippetCompleter","textCompleter","keyWordCompleter","enableLiveAutocompletion","enableSnippets","TreeViewer","nodes","setNodes","invalid","setInvalid","referenceTitle","n","renderNode","level","extra","repeat","letterSpacing","lineHeight","borderLeft","TreeEditor","inputRef","useRef","active","setActive","noteTitles","onInputChanged","getParentNode","targetNode","searchNodes","parentNode","childResult","preorderTraversal","stack","reverse","childNode","removeNodeIfEmpty","nodeIndex","findIndex","removeNode","indentNode","unindentNode","parentParentNode","targetNodes","parentNodeIndex","commands","bindKey","win","mac","above","editor","getCursorPosition","row","column","newNode","afterNode","insertNode","activeIndex","completions","getCompletions","session","pos","callback","token","getTokenAt","caption","snippet","meta","position","bottom","left","right","insert","isActive","highlightActiveLine","maxLines","Infinity","ContextSelector","activeContexts","inactiveContexts","disabled","NoteEditor","loaded","splitMode","noteMode","bind","onSave","draftStorage","draft","withAvailableTags","withSelectedTags","getTags","noteFor","onNoteAdded","flex","onTitleChanged","s","EditNotePage","goBack","setGoBack","ReferenceViewer","contextNotes","fontWeight","marginTop","ShowNotePage","viewer","NotePage","filterTags","setFilterTags","showTagsBar","setShowTagsBar","searchResult","setSearchResult","searchIndex","setSearchIndex","showNotesFor","setShowNotesFor","draftIds","setDraftIds","showNoContext","setShowNoContext","debouncedSearch","debounce","score","idx","lunr","field","tagCounts","count","toggleTag","ContextPage","renderTarget","ProjectPage","EmbeddedNoteEdit","targetEntity","addNode","EmbeddedNoteShow","ShowTaskPage","has","event","isDirty","setTaskState","setContext","setProject","setDefer","ShowProjectPage","projectState","setProjectState","ShowContextPage","contextState","setContextState","DataPage","reload","render","PeoplePage","EditPersonPage","initialState","values","setValues","handleChange","persist","useForm","birthday","ShowPersonPage","StatsPage","noteTotalCount","setNoteTotalCount","taskTotalCount","setTaskTotalCount","peopleTotalCount","setPeopleTotalCount","projectTotalCount","setProjectTotalCount","contextTotalCount","setContextTotalCount","routes","routeProps","params","component","dropboxFiles","setDropboxFiles","f","getResults","Fragment","getTime","pushSubscribed","setPushSubscribed","currentKey","setCurrentKey","swState","setSwState","generatedKey","setGeneratedKey","setPrivateKey","clearEntities","confirm","dropboxConnected","setDropboxConnected","refreshKeys","newCurrentKey","navigator","serviceWorker","ready","registration","pushManager","getSubscription","installingWorker","installing","controller","componentDidMount","update","unregister","unsubscribe","applicationServerKey","userVisibleOnly","subscribe","testPush","readOnly","ReactDOM","StrictMode","document","getElementById","catch"],"mappings":"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","file":"static/js/main.2603f5a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"#078263\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as React from 'react';\r\n\r\nexport class ServiceWorkerInstall extends React.Component<{ }, { installEvent: any }> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            installEvent: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('beforeinstallprompt', (e: any) => {\r\n            // Prevent Chrome 67 and earlier from automatically showing the prompt\r\n            e.preventDefault();\r\n            this.setState({ installEvent: e });\r\n        });\r\n    }\r\n\r\n    onInstallClick() {\r\n        if (this.state.installEvent === null) {\r\n            return;\r\n        }\r\n        \r\n        this.state.installEvent.prompt();\r\n    \r\n        // Wait for the user to respond to the prompt\r\n        this.state.installEvent.userChoice.then((choiceResult: any) => {\r\n            if (choiceResult.outcome === 'accepted') {\r\n                console.log('User accepted the A2HS prompt');\r\n            } else {\r\n                console.log('User dismissed the A2HS prompt');\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.installEvent) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div className=\"button\" onClick={() => this.onInstallClick()}>Install app</div>\r\n        );\r\n    }\r\n}","import {style} from 'typestyle/lib';\r\n\r\nexport const hoverGlow = style({\r\n    $nest: {\r\n        '&:hover': {\r\n            background: '#3f3f3f'\r\n        }\r\n    }\r\n});\r\n\r\nexport const cursorPointer = style({\r\n    cursor: 'pointer'\r\n});\r\n\r\nexport const verticalCenter = style({\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n});\r\n\r\nexport function horizontalSpace(width = '.3rem', around = false) {\r\n    return style({\r\n        paddingLeft: around ? width : undefined,\r\n        paddingRight: around ? width : undefined,\r\n        $nest: {\r\n            '& > *:first-child': {\r\n                marginLeft: 0\r\n            },\r\n            '& > *': {\r\n                marginRight: width\r\n            },\r\n            '& > *:last-child': {\r\n                marginRight: 0\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function verticalSpace(height = '.3rem', around = false) {\r\n    return style({\r\n        paddingTop: around ? height : undefined,\r\n        paddingBottom: around ? height : undefined,\r\n        $nest: {\r\n            '& > *': {\r\n                marginBottom: height\r\n            },\r\n            '& > *:last-child': {\r\n                marginBottom: 0\r\n            }\r\n        }\r\n    });\r\n}","import {createInstance} from 'localforage';\r\nimport * as md5 from 'js-md5';\r\n\r\nconst lifeKeyStore = createInstance({ name: 'lifekeystore' });\r\nconst privateKeyStore = createInstance({ name: 'privatekeystore' });\r\n\r\nexport interface LifeKey {\r\n    fingerprint: string;\r\n    publicKey: string;\r\n    createdAt: string;\r\n}\r\n\r\nconst rsaSettings = {\r\n    name: \"RSA-OAEP\",\r\n    modulusLength: 2048,\r\n    publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\r\n    hash: {name: \"SHA-256\"},\r\n};\r\n\r\nconst aesSettings = { name: 'AES-GCM', length: 256 };\r\n\r\nexport async function generateRsaKey() {\r\n    try {\r\n        const keyPair = await crypto.subtle.generateKey(\r\n            rsaSettings,\r\n            true,\r\n            ['encrypt', 'decrypt']\r\n        );\r\n\r\n        const rawPrivateKey = await crypto.subtle.exportKey('pkcs8', keyPair.privateKey);\r\n        const privateKeyBase64 = arrayBufferToBase64(rawPrivateKey);\r\n\r\n        const rawPublicKey = await crypto.subtle.exportKey('spki', keyPair.publicKey);\r\n        const publicKeyBase64 = arrayBufferToBase64(rawPublicKey);\r\n        const publicKeyFingerprint = md5.hex(rawPublicKey);\r\n\r\n        return { fingerprint: publicKeyFingerprint, privateKey: privateKeyBase64, publicKey: publicKeyBase64 };\r\n    } catch (error) {\r\n        console.error('generateKey', error, error.message)\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function derivePublicRsaKey(privateKey: CryptoKey) {\r\n    const jwk = await crypto.subtle.exportKey(\"jwk\", privateKey);\r\n\r\n    delete jwk.d;\r\n    delete jwk.dp;\r\n    delete jwk.dq;\r\n    delete jwk.q;\r\n    delete jwk.qi;\r\n    jwk.key_ops = [\"encrypt\", \"wrapKey\"];\r\n    \r\n    const publicKey = await crypto.subtle.importKey(\"jwk\", jwk, rsaSettings, true, [\"encrypt\", \"wrapKey\"]);\r\n    return publicKey;\r\n}\r\n\r\nexport async function importLifeKey(privateKeyBase64: string) {\r\n    const importedPrivateKey = base64ToArrayBuffer(privateKeyBase64);\r\n    const extractablePrivateKey = await crypto.subtle.importKey('pkcs8', importedPrivateKey, rsaSettings, true, ['decrypt', 'unwrapKey']);\r\n    \r\n    const publicKey = await derivePublicRsaKey(extractablePrivateKey);\r\n    const rawPublicKey = await crypto.subtle.exportKey('spki', publicKey);\r\n    const publicKeyBase64 = arrayBufferToBase64(rawPublicKey);\r\n    const publicKeyFingerprint = md5.hex(rawPublicKey);\r\n\r\n    const privateKey = await crypto.subtle.importKey('pkcs8', importedPrivateKey, rsaSettings, false, ['decrypt', 'unwrapKey']);\r\n    privateKeyStore.setItem(publicKeyFingerprint, privateKey);\r\n\r\n    const lifeKey: LifeKey = {\r\n        fingerprint: publicKeyFingerprint,\r\n        publicKey: publicKeyBase64,\r\n        createdAt: new Date().toISOString(),\r\n    };\r\n\r\n    lifeKeyStore.setItem(lifeKey.fingerprint, lifeKey);\r\n}\r\n\r\nexport async function encryptAndWrap(fingerprint: string, data: string) {\r\n    try {\r\n        const lifeKey = await lifeKeyStore.getItem(fingerprint) as LifeKey;\r\n        if (!lifeKey) {\r\n            throw new Error(`Key with fingerprint ${fingerprint} not found`);\r\n        }        \r\n        const importedPublicKeyBuffer = base64ToArrayBuffer(lifeKey.publicKey);\r\n        const publicKey = await crypto.subtle.importKey('spki', importedPublicKeyBuffer, rsaSettings, true, ['encrypt', 'wrapKey']);\r\n    \r\n        const aesKey = await generateAesKey();\r\n        const iv = crypto.getRandomValues(new Uint8Array(12));\r\n    \r\n        const encryptedData = await crypto.subtle.encrypt({ \r\n            name: 'AES-GCM', \r\n            length: 256,\r\n            iv\r\n        }, aesKey, strToArrayBuffer(data));\r\n    \r\n        const encryptedDataBase64 = arrayBufferToBase64(encryptedData);\r\n    \r\n        const wrappedAesKey = await crypto.subtle.wrapKey('raw', aesKey, publicKey, rsaSettings);\r\n        const wrappedAesKeyBase64 = arrayBufferToBase64(wrappedAesKey);\r\n    \r\n        const ivBase64 = arrayBufferToBase64(iv);\r\n    \r\n        const result = {\r\n            payload: encryptedDataBase64,\r\n            key: wrappedAesKeyBase64,\r\n            fingerprint: fingerprint,\r\n            iv: ivBase64\r\n        };\r\n    \r\n        return result;\r\n    } catch (error) {\r\n        console.error('encryptAndWrap', error, error.message)\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function unwrapAndDecrypt(fingerprint: string, wrappedKeyBase64: string, dataBase64: string, ivBase64: string) {\r\n    try {\r\n        const privateKey = await privateKeyStore.getItem(fingerprint) as CryptoKey;\r\n        if (!privateKey) {\r\n            throw new Error(`Key with fingerprint ${fingerprint} not found`);\r\n        }\r\n\r\n        const aesKey = await crypto.subtle.unwrapKey('raw', base64ToArrayBuffer(wrappedKeyBase64), privateKey, rsaSettings, aesSettings, false, ['decrypt'])\r\n        const unencryptedDataBuffer = await crypto.subtle.decrypt({ \r\n            name: 'AES-GCM', \r\n            length: 256,\r\n            iv: base64ToArrayBuffer(ivBase64)\r\n        }, aesKey, base64ToArrayBuffer(dataBase64));\r\n        return arrayBufferToString(unencryptedDataBuffer);\r\n    } catch (error) {\r\n        console.error('unwrapAndDecrypt', error, error.message)\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function generateAesKey(): Promise<any> {\r\n    try {\r\n        const key = await crypto.subtle.generateKey(aesSettings, true, ['encrypt', 'decrypt']);\r\n        return key;\r\n    } catch (error) {\r\n        console.error('generateKey', error, error.message)\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function getCurrentKey() {\r\n    const keys = await lifeKeyStore.keys();\r\n\r\n    if (keys.length === 0) {\r\n        throw new Error('No key found');\r\n    }\r\n\r\n    if (keys.length > 1) {\r\n        throw new Error('More than 1 key found!');\r\n    }\r\n\r\n    return (await lifeKeyStore.getItem(keys[0])) as LifeKey;\r\n}\r\n\r\n\r\nfunction arrayBufferToBase64( buffer: ArrayBuffer ) {\r\n    var binary = '';\r\n    var bytes = new Uint8Array(buffer);\r\n    var len = bytes.byteLength;\r\n    for (var i = 0; i < len; i++) {\r\n        binary += String.fromCharCode(bytes[i]);\r\n    }\r\n    return window.btoa( binary );\r\n}\r\n\r\nfunction base64ToArrayBuffer(base64: string) {\r\n    var binary_string =  window.atob(base64);\r\n    var len = binary_string.length;\r\n    var bytes = new Uint8Array(len);\r\n    for (var i = 0; i < len; i++)        {\r\n        bytes[i] = binary_string.charCodeAt(i);\r\n    }\r\n    return bytes.buffer;\r\n}\r\n\r\nfunction webSafe64(base64: string) {\r\n    return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\r\n}\r\n\r\n// Convert from web-safe to normal, add trailing \"=\"s\r\nfunction normal64(base64: string) {\r\n    return base64.replace(/\\-/g, '+').replace(/_/g, '/') + '=='.substring(0, (3*base64.length)%4);\r\n}\r\n\r\nfunction strToArrayBuffer(str: string) {\r\n    var buf = new ArrayBuffer(str.length * 2);\r\n    var bufView = new Uint16Array(buf);\r\n    for (var i = 0, strLen = str.length; i < strLen; i++) {\r\n      bufView[i] = str.charCodeAt(i);\r\n    }\r\n    return buf;\r\n}\r\n\r\nfunction arrayBufferToString(buf: ArrayBuffer) {\r\n    return String.fromCharCode.apply(null, new Uint16Array(buf) as any);\r\n}","export class EventListener<T> {\r\n    listeners: ((arg: T) => void)[] = [];\r\n\r\n    constructor() {\r\n    }\r\n    \r\n    register(listener: (arg: T) => void) {\r\n        this.listeners.push(listener);\r\n        return () =>  {\r\n            this.listeners = this.listeners.filter(x => x !== listener);\r\n        };\r\n    }\r\n\r\n    trigger(arg: T) {\r\n        for(const listener of this.listeners) {\r\n            listener(arg);\r\n        }\r\n    }\r\n}","import {createInstance} from 'localforage';\r\nimport {Context} from './context';\r\nimport { Project } from './project';\r\nimport { Task } from './task';\r\nimport { Note } from './note';\r\nimport * as _ from 'lodash';\r\nimport { Person } from './person';\r\nimport { unwrapAndDecrypt, encryptAndWrap, getCurrentKey } from './crypt';\r\nimport { EventListener } from './EventListener';\r\n\r\ninterface Store<T extends Entity> {\r\n    getAll(): Promise<T[]>;\r\n    get(id: string, revision?: string): Promise<T|null>;\r\n    save(entity: T): void;\r\n}\r\n\r\nexport type EntityType = 'note' | 'task' | 'project' | 'context' | 'person';\r\n\r\nexport interface Entity {\r\n    id: string;\r\n    versionId: string;\r\n    parentVersionId1: string|null;\r\n    parentVersionId2: string|null;\r\n    type: EntityType;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n    deferredUntil: string|null;\r\n}\r\n\r\ntype EntityProperty = keyof Entity;\r\n\r\nconst sampleEntity: Entity = {\r\n    id: 'test',\r\n    versionId: 'test',\r\n    parentVersionId1: null,\r\n    parentVersionId2: null,\r\n    type: 'task',\r\n    createdAt: 'now',\r\n    updatedAt: 'now',\r\n    deferredUntil: null\r\n};\r\n\r\nconst entityProperties: EntityProperty[] = Object.keys(sampleEntity) as EntityProperty[];\r\n\r\nexport interface ServerEntity {\r\n    id: string;\r\n    versionId: string;\r\n    data: string;\r\n    encryption: string;\r\n    parentVersionId1: string|null;\r\n    parentVersionId2: string|null;\r\n    type: EntityType;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n}\r\n\r\nexport interface ServerEntityEncryption {\r\n    key: string;\r\n    fingerprint: string;\r\n    iv: string;\r\n}\r\n\r\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>\r\n\r\nclass LocalForageStore<T extends Entity> implements Store<T> {\r\n    store: LocalForage;\r\n    type: EntityType;\r\n    changeListener: EventListener<T>;\r\n\r\n    constructor(type: EntityType) {\r\n        this.type = type;\r\n        this.store = createInstance({\r\n            name: `store-${type}`\r\n        });\r\n        this.changeListener = new EventListener<T>();\r\n    }\r\n\r\n    async create(entityProps: Omit<T, keyof Entity>): Promise<T> {\r\n        const now = new Date().toISOString();\r\n        let entity = {\r\n            id: this.uuid(),\r\n            versionId: this.uuid(),\r\n            type: this.type,\r\n            parentVersionIds: [] as string[],\r\n            createdAt: now,\r\n            updatedAt: now,\r\n            ...entityProps as any,\r\n        } as T;\r\n        await this.store.setItem(this.getKey(entity), entity);\r\n        this.changeListener && this.changeListener.trigger(entity);\r\n        return entity;\r\n    }\r\n\r\n    save(entity: T): void {\r\n        if (!entity.id) {\r\n            entity.id = this.uuid();\r\n        }\r\n\r\n        if (entity.type !== this.type) {\r\n            throw `Invalid type: ${entity.type} - expected ${this.type}`;\r\n        }\r\n\r\n        const now = new Date().toISOString();\r\n\r\n        if (!entity.createdAt) {\r\n            entity.createdAt = now;\r\n        }\r\n\r\n        entity.updatedAt = now;\r\n\r\n        if(entity.versionId) {\r\n            entity.parentVersionId1 = entity.versionId;\r\n        }\r\n\r\n        entity.versionId = this.uuid();\r\n        this.store.setItem(this.getKey(entity), entity);\r\n        this.changeListener && this.changeListener.trigger(entity);\r\n    }\r\n\r\n    import(entity: T) {\r\n        if (entity.type !== this.type) {\r\n            throw `Invalid type ${entity.type} - expected ${this.type}`;\r\n        }\r\n\r\n        this.store.setItem(this.getKey(entity), entity);\r\n        this.changeListener && this.changeListener.trigger(entity);\r\n    }\r\n\r\n    async get(id: string, versionId?: string): Promise<T|null> {\r\n        if (versionId === undefined) {\r\n            const leafNodes = await this.getLeafNodes(`${id}/`);\r\n\r\n            if (leafNodes.length > 1) {\r\n                console.warn(`Found ${leafNodes.length} leaf nodes for entity ${this.type}/${id} - expected 1: ${leafNodes.map(x => x.versionId)}`);\r\n\r\n                for(const node of leafNodes) {\r\n                    console.log('leaf node', node);\r\n                }\r\n                \r\n                // throw `Found ${leafNodes.length} leaf nodes for entity ${this.type}/${id} - expected 1: ${leafNodes.map(x => x.versionId)}`;\r\n                return _.orderBy(leafNodes, x => x.updatedAt, 'desc')[0];\r\n            }\r\n\r\n            if (leafNodes.length === 0) {\r\n                return null;\r\n            }\r\n\r\n            return leafNodes[0];\r\n        } else {\r\n            const keys = await this.getKeysPrefixed(`${id}/${versionId}`);\r\n            return await this.store.getItem(keys[0]) as T;\r\n        }\r\n    }\r\n\r\n    async getAll(): Promise<T[]> {\r\n        return await this.getLeafNodes();\r\n    }\r\n\r\n    async getKeysPrefixed(prefix: string) {\r\n        const keys = await this.store.keys();\r\n        return keys.filter(k => k.startsWith(prefix));\r\n    }\r\n\r\n    async getSyncKeys(): Promise<string[]> {\r\n        const keys = await this.store.keys();\r\n        return keys.map(x => `${this.type}/${x.split('/')[0]}/${x.split('/')[1]}`)\r\n    }\r\n\r\n    private async getLeafNodes(prefix = '') {\r\n        const keys = await this.getKeysPrefixed(prefix);\r\n\r\n        const objs = keys.map(k => {\r\n            const parts = k.split('/');\r\n\r\n            let parentVersionId1 = null;\r\n            let parentVersionId2 = null;\r\n\r\n            if (parts[2].length > 0) {\r\n                const parentVersionIds = parts[2].split('+');\r\n\r\n                if (parentVersionIds.length > 2) {\r\n                    throw \"ParentVersionIds length > 2\";\r\n                }\r\n\r\n                parentVersionId1 = parentVersionIds[0];\r\n                parentVersionId2 = parentVersionIds.length > 1 ? parentVersionIds[1] : null;\r\n            }\r\n\r\n            return {\r\n                id: parts[0],\r\n                versionId: parts[1],\r\n                parentVersionId1: parentVersionId1,\r\n                parentVersionId2: parentVersionId2,\r\n            }\r\n        });\r\n\r\n        const groups = _.groupBy(objs, o => o.id);\r\n\r\n        const leafNodeArrays = Object.keys(groups).map(k => {\r\n            const group = groups[k];\r\n            const parents: { [key: string]: boolean } = {};\r\n\r\n            for(const o of group) {\r\n                if (o.parentVersionId1) {\r\n                    parents[o.parentVersionId1] = true;\r\n                }\r\n                if (o.parentVersionId2) {\r\n                    parents[o.parentVersionId2] = true;\r\n                }\r\n            }\r\n\r\n            const leafNodes = group.filter(o => {\r\n                const isLeaf = !parents[o.versionId];\r\n                return isLeaf;\r\n            });\r\n\r\n            return leafNodes;\r\n        });\r\n\r\n        const result: T[] = [];\r\n\r\n        for(let leafNodes of leafNodeArrays) {\r\n            const leafObjs: T[] = [];\r\n            for(let node of leafNodes) {\r\n                leafObjs.push(await (this.store.getItem(this.getKey(node))) as T);\r\n            }\r\n\r\n            if(leafObjs.length !== 1) {\r\n                console.warn(`Found ${leafObjs.length} leaf nodes for entity ${this.type}/${leafNodes[0].id} - expected 1: ${leafObjs.map(x => x.versionId)}`);\r\n    \r\n                for(const node of leafObjs) {\r\n                    console.log('leaf node', node);\r\n                }\r\n    \r\n                result.push(_.orderBy(leafObjs, x => x.updatedAt, 'desc')[0])\r\n            } else {\r\n                result.push(leafObjs[0]);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    registerChangeListener(listener: (status: T) => void) {\r\n        this.changeListener.register(listener)\r\n    }\r\n\r\n    dropInstance() {\r\n        this.store.dropInstance();\r\n    }\r\n\r\n    private getKey(entity: { id: string, versionId: string, parentVersionId1: string|null, parentVersionId2: string|null }) {\r\n        let parentVersionIds = [];\r\n\r\n        if (entity.parentVersionId1) {\r\n            parentVersionIds.push(entity.parentVersionId1);\r\n        }\r\n\r\n        if (entity.parentVersionId2) {\r\n            parentVersionIds.push(entity.parentVersionId2);\r\n        }\r\n\r\n\r\n        return `${entity.id}/${entity.versionId}/${parentVersionIds.join('+')}`;\r\n    }\r\n\r\n    private uuid() {\r\n        return 'xxxxxxxx-xxxx-xxxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n}\r\n\r\nconst contexts = new LocalForageStore<Context>(\"context\");\r\nconst tasks = new LocalForageStore<Task>(\"task\");\r\nconst notes = new LocalForageStore<Note>(\"note\");\r\nconst projects = new LocalForageStore<Project>(\"project\");\r\nconst people = new LocalForageStore<Person>(\"person\");\r\n\r\nasync function getSyncKeys() {\r\n    const keys: string[] = [\r\n        ...(await contexts.getSyncKeys()),\r\n        ...(await tasks.getSyncKeys()),\r\n        ...(await notes.getSyncKeys()),\r\n        ...(await projects.getSyncKeys()),\r\n        ...(await people.getSyncKeys()),\r\n    ];\r\n\r\n    return keys;\r\n}\r\n\r\nasync function getBySyncKey(syncKey: string): Promise<Entity|null> {\r\n    const [type, id, versionId] = syncKey.split('/');\r\n\r\n    switch(type) {\r\n        case 'context':\r\n            return contexts.get(id, versionId);\r\n        case 'task':\r\n            return tasks.get(id, versionId);\r\n        case 'note':\r\n            return notes.get(id, versionId);\r\n        case 'project':\r\n            return projects.get(id, versionId);\r\n        case 'person':\r\n            return people.get(id, versionId);\r\n        default:\r\n            throw 'Unknown type: ' + type;\r\n    }\r\n}\r\n\r\nasync function importEntites(entities: Entity[]) {\r\n    for(const entity of entities) {\r\n        switch(entity.type) {\r\n            case 'context':\r\n                contexts.import(entity as Context);\r\n                break;\r\n            case 'task':\r\n                tasks.import(entity as Task);\r\n                break;\r\n            case 'note':\r\n                notes.import(entity as Note);\r\n                break;\r\n            case 'project':\r\n                projects.import(entity as Project);\r\n                break;\r\n            case 'person':\r\n                people.import(entity as Person);\r\n                break;\r\n            default:\r\n                throw 'Unknown type: ' + entity.type;\r\n        }\r\n    }\r\n}\r\n\r\nasync function importServerEntites(serverEntities: ServerEntity[]) {\r\n    for(const serverEntity of serverEntities) {\r\n        const encryption = JSON.parse(serverEntity.encryption) as ServerEntityEncryption;\r\n        const unencryptedData = await unwrapAndDecrypt(encryption.fingerprint, encryption.key, serverEntity.data, encryption.iv);\r\n        let entity = JSON.parse(unencryptedData) as Entity;\r\n\r\n        entity.id = serverEntity.id;\r\n        entity.versionId = serverEntity.versionId;\r\n        entity.type = serverEntity.type;\r\n        entity.parentVersionId1 = serverEntity.parentVersionId1;\r\n        entity.parentVersionId2 = serverEntity.parentVersionId2;\r\n        entity.createdAt = serverEntity.createdAt;\r\n        entity.updatedAt = serverEntity.updatedAt;\r\n\r\n        switch(serverEntity.type) {\r\n            case 'context':\r\n                contexts.import(entity as Context);\r\n                break;\r\n            case 'task':\r\n                tasks.import(entity as Task);\r\n                break;\r\n            case 'note':\r\n                notes.import(entity as Note);\r\n                break;\r\n            case 'project':\r\n                projects.import(entity as Project);\r\n                break;\r\n            case 'person':\r\n                people.import(entity as Person);\r\n                break;\r\n            default:\r\n                throw 'Unknown type: ' + entity.type;\r\n        }\r\n    }\r\n}\r\n\r\nasync function exportServerEntities(syncKeys: string[]): Promise<ServerEntity[]> {\r\n    const result: ServerEntity[] = [];\r\n\r\n    for (const syncKey of syncKeys) {\r\n        const entity = await getBySyncKey(syncKey);\r\n\r\n        if (entity === null) {\r\n            console.warn(\"Entity with key not found: \" + syncKey)\r\n            continue;\r\n        }\r\n\r\n        const entityData = {...entity};\r\n\r\n        delete entityData.createdAt;\r\n        delete entityData.updatedAt;\r\n        delete entityData.id;\r\n        delete entityData.versionId;\r\n        delete entityData.type;\r\n        delete entityData.parentVersionId1;\r\n        delete entityData.parentVersionId2;\r\n\r\n        const unencryptedData = JSON.stringify(entityData);\r\n        const encryptionResult = await encryptAndWrap((await getCurrentKey()).fingerprint, unencryptedData);\r\n        const encryption: ServerEntityEncryption = { \r\n            fingerprint: encryptionResult.fingerprint, \r\n            key: encryptionResult.key,\r\n            iv: encryptionResult.iv\r\n        };\r\n        const encryptionJson = JSON.stringify(encryption);\r\n\r\n        const serverEntity: ServerEntity = {\r\n            id: entity.id,\r\n            versionId: entity.versionId,\r\n            type: entity.type,\r\n            parentVersionId1: entity.parentVersionId1,\r\n            parentVersionId2: entity.parentVersionId2,\r\n            createdAt: entity.createdAt,\r\n            updatedAt: entity.updatedAt,\r\n            data: encryptionResult.payload,\r\n            encryption: encryptionJson\r\n        };\r\n\r\n        result.push(serverEntity);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport const db = {\r\n    contexts,\r\n    tasks,\r\n    notes,\r\n    projects,\r\n    people,\r\n    getSyncKeys,\r\n    importEntites,\r\n    importServerEntites,\r\n    exportServerEntities\r\n};","import 'isomorphic-fetch';\r\nimport { ServerEntity } from './db/db';\r\n\r\nexport default class Api {\r\n    static getSyncStatus(entites: string[]) {\r\n        return fetch(\"/api/entity/getsyncstatus\", {\r\n            method: 'POST',\r\n            headers: this.getHeaders(),\r\n            body: JSON.stringify({ entites: entites || [] })\r\n        }).then(response => {\r\n            const contentType = response.headers.get(\"content-type\");\r\n            if(contentType && contentType.indexOf(\"application/json\") !== -1) {\r\n                return response.json() as Promise<{ fetch: string[], send: string[] }>;\r\n            }\r\n            throw new TypeError(\"Oops, we haven't got JSON!\");\r\n        });\r\n    }\r\n\r\n    static serverSyncFetch(ids: string[]) {\r\n        return fetch(\"/api/entity/serversyncfetch\", {\r\n            method: 'POST',\r\n            headers: this.getHeaders(),\r\n            body: JSON.stringify({ ids: ids || [] })\r\n        }).then(response => {\r\n            const contentType = response.headers.get(\"content-type\");\r\n            if(contentType && contentType.indexOf(\"application/json\") !== -1) {\r\n                return response.json() as Promise<ServerEntity[]>;\r\n            }\r\n            throw new TypeError(\"Oops, we haven't got JSON!\");\r\n        });\r\n    }\r\n\r\n    static serverSyncSend(entities: ServerEntity[]) {\r\n        return fetch(\"/api/entity/serversyncsend\", {\r\n            method: 'POST',\r\n            headers: this.getHeaders(),\r\n            body: JSON.stringify({ entities: entities || [] })\r\n        }).then(response => {\r\n        });\r\n    }\r\n\r\n    static testPush(subscription: any) {\r\n        return fetch(\"/api/push/test\", {\r\n            method: 'POST',\r\n            headers: this.getHeaders(),\r\n            body: JSON.stringify(subscription)\r\n        }).then(response => {\r\n            console.log(response);\r\n        });\r\n    }\r\n\r\n    private static getHeaders() {\r\n        let headers = new Headers();\r\n        headers.set('Content-Type', 'application/json');\r\n        headers.set('Accept', 'application/json');\r\n        return headers;\r\n    }\r\n}","import * as React from 'react';\r\n\r\nexport const Loader: React.FC = (props) => {\r\n    return (\r\n        <div style={{display: 'flex', height: '100%', justifyContent: 'center', alignItems: 'center'}}>\r\n            <div style={{border: '1px solid #555', padding: '1rem 2rem', background: '#2e2e2e'}}>Loading...</div>\r\n        </div>\r\n    );\r\n}","import { Note } from \"./db/note\";\r\nimport { Task } from \"./db/task\";\r\nimport { Context } from \"./db/context\";\r\nimport { Project } from \"./db/project\";\r\nimport { Person } from \"./db/person\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { syncer } from \"./db/syncer\";\r\nimport { Loader } from \"./components/Loader\";\r\n\r\nexport class Data {\r\n    constructor(notes: Note[], tasks: Task[], contexts: Context[], projects: Project[], people: Person[]) {\r\n        this.notes = notes;\r\n        this.tasks = tasks;\r\n        this.contexts = contexts;\r\n        this.projects = projects;\r\n        this.people = people;\r\n    }\r\n\r\n    readonly notes: Note[];\r\n    readonly tasks: Task[];\r\n    readonly contexts: Context[];\r\n    readonly projects: Project[];\r\n    readonly people: Person[];\r\n};\r\n\r\ninterface DataContextState {\r\n    data: Data;\r\n    refreshData: () => void;\r\n}\r\n\r\nconst DataContext = React.createContext<DataContextState>({\r\n    data: null as any,\r\n    refreshData: () => {}\r\n});\r\n\r\nexport const DataProvider: React.FC = props => {\r\n    const [data, setData] = React.useState<Data>(null as any);\r\n\r\n    useEffect(() => {\r\n        async function init() {\r\n            syncer.registerDataListener(data => setData(data));\r\n            setData(await syncer.getData());\r\n            await syncer.startServerSync();\r\n            await syncer.ensureServerSyncEnqueued();\r\n        };\r\n        init();\r\n    }, []);\r\n\r\n    const refreshData = React.useCallback(async () => {\r\n        // setData(await syncer.getData());\r\n        syncer.startServerSync();\r\n    }, []);\r\n\r\n    const value: DataContextState = {\r\n        data,\r\n        refreshData\r\n    };\r\n\r\n    if (!data) {\r\n        return <Loader />;\r\n    }\r\n\r\n    return (\r\n      <DataContext.Provider value={value}>\r\n        {props.children}\r\n      </DataContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useData = () => {\r\n    const value = useContext(DataContext);\r\n    return value;\r\n};","import { Dropbox } from 'dropbox';\r\nimport {createInstance} from 'localforage';\r\n\r\nconst store = createInstance({name: 'store-dropbox'})\r\n\r\nconst localClientId = 'jh9cnt92wi5e5my';\r\nconst prodClientId = 'li12ai4q2cs3dkc';\r\n\r\nexport const isLocalMode = window.location.host !== 'life.rasmuskl.dk';\r\n\r\nconst clientId = isLocalMode ? localClientId : prodClientId;\r\n\r\ntryStoreAccessKey();\r\n\r\nexport function signIn() {\r\n    const dropbox = new Dropbox({ clientId, fetch });\r\n    window.location.assign(dropbox.getAuthenticationUrl(window.location.toString()));\r\n}\r\n\r\nexport async function isSignedIn() {\r\n    return !!(await store.getItem('token'));\r\n}\r\n\r\ninterface DropboxSnapshot {\r\n    cursor: string|null;\r\n    files: Set<string>;\r\n}\r\n\r\nasync function getStateSnapshot() {\r\n    const snapshot = await store.getItem('snapshot') as DropboxSnapshot|null;\r\n    return snapshot || { cursor: null, files: new Set<string>() };\r\n}\r\n\r\nasync function setStateSnapshot(snapshot: DropboxSnapshot|null) {\r\n    if (!snapshot) {\r\n        await store.removeItem('snapshot');\r\n    } else {\r\n        await store.setItem('snapshot', snapshot);\r\n    }\r\n}\r\n\r\nexport async function listFiles(useSnapshot = true) {\r\n    if(!await isSignedIn()) {\r\n        throw 'Not authenticated';\r\n    }\r\n\r\n    const dropbox = new Dropbox({ accessToken: await getAccessToken(), fetch });\r\n    let snapshot: DropboxSnapshot = { cursor: null, files: new Set<string>() };\r\n\r\n    if (useSnapshot) {\r\n        snapshot = await getStateSnapshot();\r\n    }\r\n\r\n    let hasMore = true;\r\n\r\n    while(hasMore) {\r\n        if (snapshot.cursor) {\r\n            const fileListResult = await dropbox.filesListFolderContinue({ cursor: snapshot.cursor });\r\n            const results = fileListResult.entries.filter(e => e['.tag'] === 'file').map(e => e.path_lower?.substring(1)).filter(p => p) as string[];\r\n            snapshot.cursor = fileListResult.cursor;\r\n            for(const file of results) {\r\n                snapshot.files.add(file);\r\n            }\r\n            hasMore = fileListResult.has_more;\r\n        } else {\r\n            const fileListResult = await dropbox.filesListFolder({path: '', recursive: true});\r\n            const results = fileListResult.entries.filter(e => e['.tag'] === 'file').map(e => e.path_lower?.substring(1)).filter(p => p) as string[];\r\n            snapshot.cursor = fileListResult.cursor;    \r\n            for(const file of results) {\r\n                snapshot.files.add(file);\r\n            }\r\n            hasMore = fileListResult.has_more;\r\n        }\r\n\r\n        await setStateSnapshot(snapshot);\r\n    }\r\n\r\n    return snapshot.files;\r\n}\r\n\r\nexport function getAccessTokenFromUrl() {\r\n    const results = parseAuthFromHash(window.location.hash);\r\n    return results.access_token;\r\n}\r\n\r\nexport async function tryStoreAccessKey() {\r\n    const accessToken = getAccessTokenFromUrl();\r\n\r\n    if (accessToken) {\r\n        await store.setItem('token', accessToken);\r\n    }\r\n}\r\n\r\nexport async function uploadFile(path: string, contents: string) {\r\n    if(!await isSignedIn()) {\r\n        throw new Error('Not authenticated');\r\n    }\r\n\r\n    const dropbox = new Dropbox({ accessToken: await getAccessToken(), fetch });\r\n    await dropbox.filesUpload({\r\n        path: `/${path}`,\r\n        contents\r\n    });\r\n}\r\n\r\nexport async function getFile<T>(path: string) {\r\n    if(!await isSignedIn()) {\r\n        throw new Error('Not authenticated');\r\n    }\r\n\r\n    const dropbox = new Dropbox({ accessToken: await getAccessToken(), fetch });\r\n    const response = await dropbox.filesDownload({path: `/${path}` })\r\n    return new Promise<T>((resolve) => {\r\n        const blob: Blob = (response as any).fileBlob;\r\n        const reader = new FileReader();\r\n        reader.addEventListener(\"loadend\", function() {\r\n            const json = reader.result as string;\r\n            resolve(JSON.parse(json) as T);\r\n        });\r\n        reader.readAsText(blob);\r\n    });\r\n}\r\n\r\n\r\nasync function getAccessToken() {\r\n    return await store.getItem('token') as string;\r\n}\r\n\r\nfunction parseAuthFromHash(str: string) {\r\n    const ret: { [k: string]: string[] | string } = {};\r\n\r\n    if (typeof str !== 'string') {\r\n        return ret;\r\n    }\r\n\r\n    str = str.trim().replace(/^(\\?|#|&)/, '');\r\n\r\n    if (!str) {\r\n        return ret;\r\n    }\r\n\r\n    str.split('&').forEach(function (param) {\r\n        const parts = param.replace(/\\+/g, ' ').split('=');\r\n        let key = parts.shift();\r\n        let val = parts.length > 0 ? parts.join('=') : null;\r\n\r\n        key = decodeURIComponent(key!);\r\n        val = val ? decodeURIComponent(val) : null;\r\n\r\n        var retVal = ret[key];\r\n        if (ret[key] === undefined) {\r\n            ret[key] = val!;\r\n        } else if (Array.isArray(retVal)) {\r\n            retVal.push(val!);\r\n        } else {\r\n            ret[key] = [<string>ret[key], val!];\r\n        }\r\n    });\r\n\r\n    return ret;\r\n}","import { db, ServerEntity } from \"./db\";\r\nimport Api from \"../Api\";\r\nimport * as _ from \"lodash\";\r\nimport { Data } from \"../model\";\r\nimport {EventListener} from './EventListener';\r\nimport * as dropboxApi from '../lib/dropboxApi';\r\nimport pLimit from 'p-limit';\r\n\r\nexport enum SyncStatus {\r\n    Idle,\r\n    Syncing,\r\n    Failed,\r\n};\r\n\r\nexport interface SyncResult {\r\n    startAt: Date;\r\n    endAt: Date;\r\n    fetch: number;\r\n    send: number;\r\n    error: Error|null;\r\n}\r\n\r\nclass Syncer {\r\n    status = SyncStatus.Idle;\r\n    results: SyncResult[] = [];\r\n    data: Data|null = null;\r\n    intervalHandle: number|null = null;\r\n\r\n    syncListener = new EventListener<SyncStatus>();\r\n    dataListener = new EventListener<Data>();\r\n\r\n    constructor() {\r\n        db.notes.changeListener.register(note => {\r\n            if(!this.data) {\r\n                return;\r\n            }\r\n\r\n            const notes = _.orderBy(this.data.notes.filter(x => x.id !== note.id).concat(note), x => x.updatedAt);\r\n            this.data = new Data(notes, this.data.tasks, this.data.contexts, this.data.projects, this.data.people);\r\n            this.dataListener.trigger(this.data);\r\n        });\r\n\r\n        db.tasks.changeListener.register(task => {\r\n            if(!this.data) {\r\n                return;\r\n            }\r\n\r\n            const tasks = this.data.tasks.filter(x => x.id !== task.id).concat(task);\r\n            this.data = new Data(this.data.notes, tasks, this.data.contexts, this.data.projects, this.data.people);\r\n            this.dataListener.trigger(this.data);\r\n        });\r\n\r\n        db.contexts.changeListener.register(context => {\r\n            if(!this.data) {\r\n                return;\r\n            }\r\n\r\n            const contexts = this.data.contexts.filter(x => x.id !== context.id).concat(context);\r\n            this.data = new Data(this.data.notes, this.data.tasks, contexts, this.data.projects, this.data.people);\r\n            this.dataListener.trigger(this.data);\r\n        });\r\n\r\n        db.projects.changeListener.register(project => {\r\n            if(!this.data) {\r\n                return;\r\n            }\r\n\r\n            const projects = this.data.projects.filter(x => x.id !== project.id).concat(project);\r\n            this.data = new Data(this.data.notes, this.data.tasks, this.data.contexts, projects, this.data.people);\r\n            this.dataListener.trigger(this.data);\r\n        });\r\n\r\n        db.people.changeListener.register(person => {\r\n            if(!this.data) {\r\n                return;\r\n            }\r\n\r\n            const people = this.data.people.filter(x => x.id !== person.id).concat(person);\r\n            this.data = new Data(this.data.notes, this.data.tasks, this.data.contexts, this.data.projects, people);\r\n            this.dataListener.trigger(this.data);\r\n        });\r\n    }\r\n\r\n    registerSyncListener(listener: (status: SyncStatus) => void) {\r\n        this.syncListener.register(listener)\r\n    }\r\n\r\n    registerDataListener(listener: (status: Data) => void) {\r\n        this.dataListener.register(listener)\r\n    }\r\n\r\n    getResults() {\r\n        return this.results;\r\n    }\r\n\r\n    async getData() {\r\n        if (!this.data) {\r\n            this.data = await this.loadData();\r\n        }\r\n\r\n        return this.data;\r\n    }\r\n\r\n    async ensureServerSyncEnqueued() {\r\n        if (this.intervalHandle !== null) {\r\n            return;\r\n        }\r\n\r\n        this.intervalHandle = setInterval(async () => {\r\n            await this.startServerSync();\r\n        }, 60000) as any;\r\n    }\r\n\r\n    async startServerSync() {\r\n        if (this.status === SyncStatus.Syncing) {\r\n            return;\r\n        }\r\n\r\n        const startAt = new Date();\r\n        this.status = SyncStatus.Syncing;\r\n        this.syncListener.trigger(this.status);\r\n\r\n        await this.startDropboxServerSync();\r\n        return;\r\n\r\n        try {\r\n            const syncKeys = await db.getSyncKeys();\r\n            const syncStatus = await Api.getSyncStatus(syncKeys);\r\n            const entities = await Api.serverSyncFetch(syncStatus.fetch);\r\n    \r\n            await db.importServerEntites(entities);\r\n\r\n            let toSend = syncStatus.send.splice(0, 100);\r\n            let sendCount = 0;\r\n\r\n            while(toSend.length) {\r\n                const sendEntities = await db.exportServerEntities(toSend);\r\n                await Api.serverSyncSend(sendEntities);\r\n                sendCount += sendEntities.length;\r\n                toSend = syncStatus.send.splice(0, 100);\r\n            }\r\n\r\n            this.results.push({ startAt, endAt: new Date(), error: null, fetch: syncStatus.fetch.length, send: sendCount })\r\n            this.status = SyncStatus.Idle;\r\n            this.syncListener.trigger(this.status);\r\n        } catch(e) {\r\n            this.status = SyncStatus.Failed;\r\n            this.results.push({ startAt, endAt: new Date(), error: e && e.message ? e.message : e, fetch: 0, send: 0 });\r\n            this.syncListener.trigger(this.status);\r\n        }\r\n    }\r\n\r\n    async startDropboxServerSync() {\r\n        if(!dropboxApi.isSignedIn()) {\r\n            return;\r\n        }\r\n\r\n        const startAt = new Date();\r\n\r\n        function difference<T>(setA: Set<T>, setB: Set<T>): Set<T> {\r\n            let _difference = new Set(setA);\r\n            for (const key of setB) {\r\n                _difference.delete(key);\r\n            }\r\n            return _difference;\r\n        }\r\n\r\n        try {\r\n            const files = await dropboxApi.listFiles();\r\n            const syncKeys = new Set(await db.getSyncKeys());\r\n    \r\n            const toSend = difference(syncKeys, files);\r\n            const toFetch = difference(files, syncKeys);\r\n    \r\n            for(const key of toSend) {\r\n                const entities = await db.exportServerEntities([key]);\r\n                await dropboxApi.uploadFile(key, JSON.stringify(entities[0]));\r\n            }\r\n    \r\n            const limit = pLimit(10);\r\n            const promises = [];\r\n    \r\n            for(const key of toFetch) {\r\n                promises.push(limit(async () => {\r\n                    const entity = await dropboxApi.getFile<ServerEntity>(key);\r\n                    await db.importServerEntites([entity]);\r\n                }));\r\n            }\r\n    \r\n            await Promise.all(promises);\r\n\r\n            this.results.push({ startAt, endAt: new Date(), error: null, fetch: toFetch.size, send: toSend.size })\r\n            this.status = SyncStatus.Idle;\r\n            this.syncListener.trigger(this.status);\r\n        } catch (e) {\r\n            this.status = SyncStatus.Failed;\r\n            this.results.push({ startAt, endAt: new Date(), error: e && e.message ? e.message : e, fetch: 0, send: 0 });\r\n            this.syncListener.trigger(this.status);\r\n        }\r\n    }\r\n\r\n    private async loadData(): Promise<Data> {\r\n        const contexts = db.contexts.getAll();\r\n        const tasks = await db.tasks.getAll();\r\n        const projects = db.projects.getAll();\r\n        const people = db.people.getAll();\r\n        const notes = _.orderBy(await db.notes.getAll(), x => x.updatedAt);\r\n        \r\n        return new Data(notes, await tasks, await contexts, await projects, await people);\r\n    }\r\n}\r\n\r\nexport const syncer = new Syncer();\r\n\r\n","import * as React from 'react';\r\nimport './Layout.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { classes } from 'typestyle';\r\nimport { ServiceWorkerInstall } from './ServiceWorkerInstall';\r\nimport * as styles from '../layout/styles';\r\nimport { syncer, SyncStatus } from '../db/syncer';\r\n\r\nexport function isMobile() {\r\n    return window.matchMedia(\"(max-width: 768px)\").matches;\r\n}\r\n\r\nexport const Layout: React.FC<{}> = (props) => {\r\n    const [sidebar, setSidebar] = React.useState(() => !isMobile())\r\n    const [_, setCount] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n        syncer.registerSyncListener(() => setCount(c => c +  1));\r\n    }, []);\r\n\r\n    function onNavClick() {\r\n        if(isMobile()) {\r\n            setSidebar(false);\r\n        }\r\n    }\r\n\r\n    return <>\r\n        <section style={{display: 'flex', overflow: 'hidden', height: '100%'}}>\r\n            <div className={classes('navbar')}>\r\n                <div className={classes(styles.horizontalSpace('1rem'))}>\r\n                    {!sidebar && (\r\n                        <>\r\n                            <NavLink className={classes('button', styles.hoverGlow)} to={ '/' } onClick={onNavClick} exact activeClassName='is-active'>Notes</NavLink>\r\n                            <NavLink className={classes('button', styles.hoverGlow)} to={ '/tasks' } onClick={onNavClick} exact activeClassName='is-active'>Tasks</NavLink>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <div className={classes(styles.horizontalSpace('1rem'))}>\r\n                    <NavLink className=\"button\" to=\"/sync\">Sync: {SyncStatus[syncer.status]}</NavLink>\r\n                    <ServiceWorkerInstall />\r\n                    <a className=\"button\" onClick={() => setSidebar(!sidebar)}>\r\n                        Menu\r\n                    </a>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes('sidebar', 'list')} style={{overflowY: 'auto', paddingTop: 52, height: '100%', width: sidebar ? undefined : 0, overflowX: 'hidden'}}>\r\n                <NavLink className={classes('item', styles.hoverGlow)} to={ '/' } onClick={onNavClick} exact activeClassName='is-active'>Notes</NavLink>\r\n                <NavLink className={classes('item', styles.hoverGlow)} to={ '/tasks' } onClick={onNavClick} exact activeClassName='is-active'>Tasks</NavLink>\r\n                <NavLink className={classes('item', styles.hoverGlow)} to={ '/projects' } onClick={onNavClick} exact activeClassName='is-active'>Projects</NavLink>\r\n                <NavLink className={classes('item', styles.hoverGlow)} to={ '/contexts' } onClick={onNavClick} exact activeClassName='is-active'>Contexts</NavLink>\r\n                <NavLink className={classes('item', styles.hoverGlow)} to={ '/people' } onClick={onNavClick} exact activeClassName='is-active'>People</NavLink>\r\n                <NavLink className={classes('item', styles.hoverGlow)} to={ '/playground' } onClick={onNavClick} exact activeClassName='is-active'>Playground</NavLink>\r\n                <NavLink className={classes('item', styles.hoverGlow)} to={ '/stats' } onClick={onNavClick} exact activeClassName='is-active'>Stats</NavLink>\r\n                <NavLink className={classes('item', styles.hoverGlow)} to={ '/settings' } onClick={onNavClick} exact activeClassName='is-active'>Settings</NavLink>\r\n            </div>\r\n\r\n            <div className=\"main\" style={{paddingTop: 52}}>\r\n                { props.children }\r\n            </div>\r\n        </section>\r\n    </>;\r\n}\r\n","import { Entity } from \"./db\";\r\n\r\nexport enum ContextState {\r\n    Active = 'Active',\r\n    Inactive = 'Inactive',\r\n}\r\n\r\nexport interface Context extends Entity {\r\n    type: 'context';\r\n    title: string;\r\n    contextId: string|null;\r\n    state: ContextState;\r\n}","import { Entity } from \"./db\";\r\n\r\nexport enum ProjectState {\r\n    Active = 'Active',\r\n    Incubated = 'Incubated',\r\n    Completed = 'Completed',\r\n    Dropped = 'Dropped',\r\n}\r\n\r\nexport interface Project extends Entity {\r\n    type: 'project',\r\n    title: string;\r\n    contextId: string|null;\r\n    state: ProjectState;\r\n}","import * as React from 'react';\r\nimport * as styles from '../layout/styles';\r\nimport { classes } from 'typestyle';\r\n\r\nexport const ToolSection: React.SFC<{ verticalAround?: boolean }> = (props) => {\r\n    let verticalAround = props.verticalAround;\r\n\r\n    if (verticalAround === undefined) {\r\n        verticalAround = true;\r\n    }\r\n\r\n    return (\r\n        <div className={classes(styles.horizontalSpace('.5rem', true), styles.verticalSpace('.5rem', verticalAround))}>{props.children}</div>\r\n    );\r\n}","import * as React from 'react';\r\n\r\ninterface ListProps<T> {\r\n    renderItem: (item: T) => JSX.Element;\r\n    items: T[];\r\n}\r\n\r\nexport function List<T>(props: ListProps<T>) {\r\n    return (\r\n        <div className=\"list\">\r\n            {props.items.map(props.renderItem)}\r\n        </div>\r\n    );\r\n}","import * as React from \"react\";\r\n\r\nexport const useQueryState = (initialValue: string|null, queryParam: string): [string|null, (value: string|null) => void] => {\r\n    const [rawValue, setRawValue] = React.useState(() => {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        return urlParams.get(queryParam) || initialValue;\r\n    });\r\n\r\n    const setValue = (value: string|null) => {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        setRawValue(value);\r\n        if (!value || value === initialValue) {\r\n            urlParams.delete(queryParam);\r\n        } else {\r\n            urlParams.set(queryParam, value);\r\n        }\r\n\r\n        const queryString = urlParams.toString();\r\n\r\n        if (queryString.length) {\r\n            window.history.replaceState(null, '', `?${queryString}`);\r\n        } else {\r\n            window.history.replaceState(null, '', window.location.pathname);\r\n        }\r\n\r\n        window.dispatchEvent(new (window as any).CustomEvent('popstate'));\r\n    };\r\n\r\n    return [rawValue, setValue];\r\n};\r\n\r\nexport const useQueryStateT = <T extends {}>(initialValue: T, queryParam: string, convertTo: (value: string|null) => T, convertFrom: (value: T) => string|null): [T, (value: T) => void] => {\r\n    const [rawValue, setRawValue] = React.useState<T>(() => {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        return convertTo(urlParams.get(queryParam)) || initialValue;\r\n    });\r\n\r\n    const setValue = (value: T) => {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        setRawValue(value);\r\n        if (!value || value === initialValue) {\r\n            urlParams.delete(queryParam);\r\n        } else {\r\n            const strValue = convertFrom(value);\r\n            if (strValue) {\r\n                urlParams.set(queryParam, strValue);\r\n            } else {\r\n                urlParams.delete(queryParam);\r\n            }\r\n        }\r\n\r\n        const queryString = urlParams.toString();\r\n\r\n        if (queryString.length) {\r\n            window.history.replaceState(null, '', `?${queryString}`);\r\n        } else {\r\n            window.history.replaceState(null, '', window.location.pathname);\r\n        }\r\n\r\n        window.dispatchEvent(new (window as any).CustomEvent('popstate'));\r\n    };\r\n\r\n    return [rawValue, setValue];\r\n};\r\n\r\nexport const useQueryStateBoolean = (initialValue: boolean, queryParam: string) => {\r\n    return useQueryStateT<boolean>(initialValue, queryParam, x => x === 'true', x => x === initialValue ? null : x.toString());\r\n};","import * as React from 'react';\r\nimport { isMobile } from './Layout';\r\nimport * as styles from '../layout/styles';\r\nimport { classes } from 'typestyle';\r\n\r\nexport const SettingsCompactor : React.FC<{className?: string, alwaysVisible?: () => JSX.Element, mobileOnly?: () => JSX.Element, wideStyle?:React.CSSProperties}> = props => {\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const alwaysVisible = props.alwaysVisible ? props.alwaysVisible() : null;\r\n\r\n    if(!isMobile()) {\r\n        return (\r\n            <div style={{display: 'flex', alignItems: 'center', ...props.wideStyle}} className={styles.horizontalSpace('.3rem')}>\r\n                {alwaysVisible}\r\n                {props.children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const mobileOnly = props.mobileOnly ? props.mobileOnly() : null;\r\n\r\n    if(!expanded) {\r\n        return (\r\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\r\n                {alwaysVisible}\r\n                {mobileOnly}\r\n                <div className=\"button\" onClick={() => setExpanded(true)}>S</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div style={{display: 'flex', flexDirection: 'column'}} className={styles.verticalSpace('.3rem')}>\r\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\r\n                {alwaysVisible}\r\n                <div className=\"button\" onClick={() => setExpanded(false)}>S</div>\r\n            </div>\r\n            <div className={classes(styles.verticalSpace('.3rem'), props.className)}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n};","import * as React from 'react';\r\nimport { useData } from '../model';\r\n\r\nexport const ContextTag: React.FC<{contextId: string|null}> = (props) => {\r\n    const {data} = useData();\r\n\r\n    if (!props.contextId) {\r\n        return null;\r\n    }\r\n\r\n    const context = data.contexts.find(p => p.id === props.contextId);\r\n\r\n    if (!context) {\r\n        return null;\r\n    }\r\n\r\n    return <div className=\"tag is-context\">{context.title}</div>;\r\n}","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as styles from '../layout/styles';\r\nimport { classes } from 'typestyle/lib';\r\nimport { Data, useData } from '../model';\r\nimport { ToolSection } from '../framework/ToolSection';\r\nimport { List } from '../framework/List';\r\nimport * as ContextActions from '../lib/contextActions';\r\nimport { isMobile } from '../components/Layout';\r\nimport { Task } from '../db/task';\r\nimport { Context, ContextState } from '../db/context';\r\nimport { ProjectState, Project } from '../db/project';\r\nimport { db } from '../db/db';\r\nimport moment from 'moment';\r\nimport { useQueryState } from '../lib/UseQueryState';\r\nimport { SettingsCompactor } from '../components/SettingsCompactor';\r\nimport { ContextTag } from '../components/ContextTag';\r\n\r\ninterface Perspective {\r\n    id: string;\r\n    title: string;\r\n    groupedProject: boolean;\r\n    groupedContext: boolean;\r\n}\r\n\r\nlet perspectives: Perspective[] = [\r\n    { id: '1', title: 'All', groupedProject: false, groupedContext: false },\r\n    { id: '2', title: 'Grouped', groupedProject: false, groupedContext: true },\r\n    { id: '3', title: 'Grouped Project', groupedProject: true, groupedContext: false }\r\n]\r\n\r\nlet defaultPerspective = perspectives[1];\r\n\r\ninterface TaskFilters {\r\n    showCompleted: boolean;\r\n    showContextBar: boolean;\r\n    includeNested: boolean;\r\n    showDeferred: boolean;\r\n    showIncubated: boolean;\r\n}\r\n\r\nexport const TaskPage: React.FC<{}> = (props) => {\r\n    const {data, refreshData} = useData();\r\n    const [text, setText] = React.useState('');\r\n    const [options, setOptions] = React.useState<TaskFilters>({\r\n        showCompleted: false,\r\n        showDeferred: false,\r\n        showIncubated: false,\r\n        showContextBar: isMobile() ? false : true,\r\n        includeNested: true,\r\n    });\r\n\r\n    const [contextId, setContextId] = useQueryState(null, 'context');\r\n    const [projectId, setProjectId] = useQueryState(null, 'project');\r\n    const [perspectiveId, setPerspectiveId] = useQueryState('2', 'perspective');\r\n\r\n    const onKeyPress = async (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            await db.tasks.create({\r\n                title: text,\r\n                contextId: contextId,\r\n                projectId: projectId,\r\n                content: null,\r\n                state: 'active',\r\n                stateChangedAt: new Date().toISOString(),\r\n                noteId: null,\r\n            });\r\n\r\n            setText('');\r\n            refreshData();\r\n        }\r\n    }\r\n\r\n    const onCompleteChange = async (task: Task, e: React.ChangeEvent<HTMLInputElement>) => {\r\n        task.state = task.state === 'completed' ? 'active' : 'completed';\r\n        task.stateChangedAt = new Date().toISOString();\r\n        await db.tasks.save(task);\r\n        refreshData();\r\n    }\r\n\r\n    const renderProject = (task: Task) => {\r\n        const project = data.projects.find(p => p.id === task.projectId);\r\n\r\n        if (project) {\r\n            return <div className=\"tag is-info\">{project.title}</div>;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    const renderDeferred = (task: Task) => {\r\n        if (task.deferredUntil && new Date(task.deferredUntil) > new Date()) {\r\n            return <div className=\"tag is-primary\" title={`${moment(task.deferredUntil).format('YYYY-MM-DD')}`}>deferred {moment(task.deferredUntil).fromNow(true)}</div>;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const renderNote = (task: Task) => {\r\n        if (task.noteId) {\r\n            return <div className=\"tag is-primary\" >N</div>;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const renderTitle = (title: string) => {\r\n        const pattern = /(https?:\\/\\/[^\\s]+)/;\r\n        return title.split(pattern).map((c, i) => {\r\n            if (c.match(pattern)) {\r\n                let title = c.replace(/https?:\\/\\//, '');\r\n                title = title.replace(/\\/.*/, '/...');\r\n                return <a key={i} href={c} onClick={e => { e.stopPropagation(); }} target=\"_blank\" className=\"button is-small is-link\" style={{display: 'inline-block', marginLeft: '5px', marginRight: '5px'}}>{title}</a>;\r\n            }\r\n\r\n            return <span key={i}>{c}</span>;\r\n        });\r\n    };\r\n\r\n    const getFilteredContextIds = (contexts: ContextActions.NestedContexts) => {\r\n        if (contextId) {\r\n            const contextIds = [contextId];\r\n            const queue = [contextId];\r\n\r\n            while (queue.length && options.includeNested) {\r\n                const next = queue.pop();\r\n\r\n                if (!next) {\r\n                    break;\r\n                }\r\n\r\n                for(const nested of contexts.nestedContexts[next] || []) {\r\n                    contextIds.push(nested.id);\r\n                    queue.push(nested.id);\r\n                }\r\n            }\r\n\r\n            return contextIds;\r\n        } else {\r\n            return data.contexts.map(c => c.id);\r\n        }\r\n    };\r\n\r\n    const filterTasks = (complete: boolean, contexts: ContextActions.NestedContexts) => {\r\n        let tasks = data.tasks;\r\n\r\n        if (complete) {\r\n            tasks = tasks.filter(t => t.state === 'completed')\r\n        } else {\r\n            tasks = tasks.filter(t => t.state !== 'completed')\r\n        }\r\n\r\n        if (projectId) {\r\n            tasks = tasks.filter(t => t.projectId === projectId);\r\n        }\r\n\r\n        if (!options.showDeferred) {\r\n            tasks = tasks.filter(t => t.deferredUntil == null || new Date(t.deferredUntil) < new Date());\r\n        }\r\n\r\n        if (!options.showIncubated) {\r\n            tasks = tasks.filter(t => t.state !== 'incubated');\r\n\r\n            const incubatedProjectIds = data.projects.filter(p => p.state === ProjectState.Incubated).map(p => p.id);\r\n            tasks = tasks.filter(t => !t.projectId || incubatedProjectIds.indexOf(t.projectId) === -1);\r\n        }\r\n\r\n        if (contextId) {\r\n            const contextIds = getFilteredContextIds(contexts);\r\n            tasks = tasks.filter(t => t.contextId && contextIds.indexOf(t.contextId) !== -1);\r\n        }\r\n\r\n        return tasks.sort((a, b) =>  b.createdAt! < a.createdAt! ?  -1 : b.createdAt! > a.createdAt! ? 1 : 0);\r\n    }\r\n\r\n    const renderListContext = (context: Context, contexts: ContextActions.NestedContexts, depth = 0) => {\r\n        if (context.state && context.state === ContextState.Inactive) {\r\n            return <React.Fragment key={context.id}></React.Fragment>;\r\n        }\r\n\r\n        return (\r\n            <React.Fragment key={context.id}>\r\n                <div onClick={() => setContextId(context.id)} style={{paddingLeft: 10 + depth * 10}} className={classes('item', styles.hoverGlow, styles.cursorPointer)}>\r\n                    {context.title} <span style={{color: '#999'}}>{contexts.taskCounts[context.id]}</span>\r\n                </div>\r\n                {contexts.nestedContexts[context.id] && contexts.nestedContexts[context.id].map(c => (\r\n                    renderListContext(c, contexts, depth + 1)\r\n                ))}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const renderTask = (task: Task, skipProjectContext = false) => {\r\n        let source: string|null = null;\r\n        if (window.location.search.length) {\r\n            const urlParams = new URLSearchParams(window.location.search);\r\n            source = `?source=${encodeURIComponent(`${window.location.pathname}?${urlParams.toString()}`)}`\r\n        }\r\n\r\n        return (\r\n            <NavLink key={task.id} to={`/tasks/${task.id}${source ? source : ''}`} className={classes('item', 'task', styles.hoverGlow)}>\r\n                <div className=\"task-checkbox\">\r\n                    <input type=\"checkbox\" style={{display: 'block', padding: 10}} checked={task.state === 'completed'} onClick={e => e.preventDefault()} onChange={e => onCompleteChange(task, e)}/>\r\n                </div>\r\n                <div className=\"task-title\" style={{color: task.state === 'incubated' ? '#999' : undefined}}>\r\n                    {task.state === 'completed' ? <span style={{textDecoration: 'line-through'}}>{renderTitle(task.title)}</span> : renderTitle(task.title)}\r\n                    {task.state === 'incubated' ? <span> [Incubated]</span> : null}\r\n                </div>\r\n                <div className=\"task-details\">\r\n                    <div className=\"tags\">\r\n                        {renderNote(task)}\r\n                        {renderDeferred(task)}\r\n                        {!skipProjectContext && <ContextTag contextId={task.contextId} /> }\r\n                        {!skipProjectContext && renderProject(task)}\r\n                    </div>\r\n                </div>\r\n            </NavLink>\r\n        );\r\n    };\r\n\r\n    const perspective = perspectives.find(x => x.id == perspectiveId) || defaultPerspective;\r\n    const nestedContexts = ContextActions.getNestedContexts(data);\r\n\r\n    let taskBlock: JSX.Element[] = [];\r\n\r\n    if (perspective.groupedContext) {\r\n        const filteredContextIds: (string|null)[] = getFilteredContextIds(nestedContexts);\r\n\r\n        if (!contextId) {\r\n            filteredContextIds.push(null);\r\n        }\r\n\r\n        for (const contextId of filteredContextIds) {\r\n            const context = data.contexts.find(p => p.id === contextId);\r\n\r\n            let tasks = filterTasks(false, nestedContexts);\r\n\r\n            if (contextId) {\r\n                if (!context) {\r\n                    continue;\r\n                }\r\n\r\n                tasks = tasks.filter(t => t.contextId === contextId);\r\n\r\n                if (!tasks.length) {\r\n                    continue;\r\n                }\r\n\r\n                taskBlock.push(<div style={{padding: '.6rem', background: '#00503C'}}>{context.title}</div>)\r\n            } else {\r\n                tasks = tasks.filter(t => t.contextId === contextId);\r\n\r\n                if (!tasks.length) {\r\n                    continue;\r\n                }\r\n\r\n                taskBlock.push(<div style={{padding: '.6rem', background: '#00503C'}}>No Context</div>)\r\n            }\r\n\r\n            let stateOrder = [ProjectState.Active, ProjectState.Incubated, ProjectState.Completed, ProjectState.Dropped];\r\n    \r\n            const emptyActiveProjects: Project[] = [];\r\n    \r\n            let filteredProjects = data.projects;\r\n    \r\n            if (projectId !== null) {\r\n                filteredProjects = filteredProjects.filter(p => p.id === projectId);\r\n            }\r\n    \r\n            filteredProjects.sort((a, b) => stateOrder.indexOf(a.state) - stateOrder.indexOf(b.state)).map(p => {\r\n                let projectTasks = tasks.filter(t => t.projectId === p.id);\r\n    \r\n                if (!projectTasks.length) {\r\n                    if (p.state === ProjectState.Active) {\r\n                        if (contextId) {\r\n                            if (p.contextId && filteredContextIds.indexOf(p.contextId) !== -1) {\r\n                                emptyActiveProjects.push(p);\r\n                            }\r\n                        } else {\r\n                            emptyActiveProjects.push(p);\r\n                        }\r\n                    }\r\n                    return null;\r\n                }\r\n    \r\n                taskBlock.push(\r\n                    <React.Fragment key={`p-${p.id}`}>\r\n                        <div className=\"header link\" onClick={() => { setProjectId(p.id); setContextId(p.contextId); }}>\r\n                            {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''}\r\n                            <div style={{display: 'flex'}}>\r\n                                <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\r\n                            </div>\r\n                        </div>\r\n                        {projectTasks.map(t => renderTask(t, true))}\r\n                    </React.Fragment>\r\n                );\r\n            });\r\n    \r\n            const noProjectTasks = tasks.filter(t => t.projectId === null);\r\n    \r\n            if (noProjectTasks.length) {\r\n                taskBlock.push(\r\n                    <React.Fragment key={`no-p-${contextId}`}>\r\n                        <div className=\"header\">No Project</div>\r\n                        {noProjectTasks.map(t => renderTask(t, true))}\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n    \r\n            for(const p of emptyActiveProjects) {\r\n                if (p.contextId !== contextId) {\r\n                    continue;\r\n                }\r\n\r\n                taskBlock.push(\r\n                    <React.Fragment key={`p-${p.id}`}>\r\n                        <div className=\"header link\" onClick={() => { setProjectId(p.id); setContextId(p.contextId); }}>\r\n                            {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''} [Empty]\r\n                            <div style={{display: 'flex'}}>\r\n                                <div className=\"tags\">\r\n                                    <ContextTag contextId={p.contextId} />\r\n                                </div>\r\n                                <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\r\n                            </div>\r\n                        </div>\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n    \r\n            if (options.showCompleted) {\r\n                taskBlock.push(\r\n                    <React.Fragment key=\"completed\">\r\n                        <div className=\"header\">Completed</div>\r\n                        {filterTasks(true, nestedContexts).map(t => renderTask(t))}\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n        }\r\n    } else if (perspective.groupedProject) {\r\n        let tasks = filterTasks(false, nestedContexts);\r\n\r\n        let stateOrder = [ProjectState.Active, ProjectState.Incubated, ProjectState.Completed, ProjectState.Dropped];\r\n\r\n        const emptyActiveProjects: Project[] = [];\r\n\r\n        let filteredProjects = data.projects;\r\n\r\n        if (projectId !== null) {\r\n            filteredProjects = filteredProjects.filter(p => p.id === projectId);\r\n        }\r\n\r\n        const filteredContextIds = getFilteredContextIds(nestedContexts);\r\n\r\n        filteredProjects.sort((a, b) => stateOrder.indexOf(a.state) - stateOrder.indexOf(b.state)).map(p => {\r\n            let projectTasks = tasks.filter(t => t.projectId === p.id);\r\n\r\n            if (!projectTasks.length) {\r\n                if (p.state === ProjectState.Active) {\r\n                    if (contextId) {\r\n                        if (p.contextId && filteredContextIds.indexOf(p.contextId) !== -1) {\r\n                            emptyActiveProjects.push(p);\r\n                        }\r\n                    } else {\r\n                        emptyActiveProjects.push(p);\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n\r\n            taskBlock.push(\r\n                <React.Fragment key={`p-${p.id}`}>\r\n                    <div className=\"header link\" onClick={() => { setProjectId(p.id); setContextId(p.contextId); }}>\r\n                        {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''}\r\n                        <div style={{display: 'flex'}}>\r\n                            <div className=\"tags\">\r\n                                <ContextTag contextId={p.contextId} />\r\n                            </div>\r\n                            <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\r\n                        </div>\r\n                    </div>\r\n                    {projectTasks.map(t => renderTask(t))}\r\n                </React.Fragment>\r\n            );\r\n        });\r\n\r\n        const noProjectTasks = tasks.filter(t => t.projectId === null);\r\n\r\n        if (noProjectTasks.length) {\r\n            taskBlock.push(\r\n                <React.Fragment key=\"no-p\">\r\n                    <div className=\"header\">No Project</div>\r\n                    {noProjectTasks.map(t => renderTask(t))}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n        for(const p of emptyActiveProjects) {\r\n            taskBlock.push(\r\n                <React.Fragment key={`p-${p.id}`}>\r\n                    <div className=\"header link\" onClick={() => { setProjectId(p.id); setContextId(p.contextId); }}>\r\n                        {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''} [Empty]\r\n                        <div style={{display: 'flex'}}>\r\n                            <div className=\"tags\">\r\n                                <ContextTag contextId={p.contextId} />\r\n                            </div>\r\n                            <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n        if (options.showCompleted) {\r\n            taskBlock.push(\r\n                <React.Fragment key=\"completed\">\r\n                    <div className=\"header\">Completed</div>\r\n                    {filterTasks(true, nestedContexts).map(t => renderTask(t))}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    } else {\r\n        taskBlock.push(\r\n            <React.Fragment key=\"tasks\">\r\n                {filterTasks(false, nestedContexts).map(t => renderTask(t))}\r\n                {options.showCompleted && <>\r\n                    <div className=\"header\">Completed</div>\r\n                    {filterTasks(true, nestedContexts).map(t => renderTask(t))}\r\n                </>}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div style={{display: 'flex', height: '100%'}}>\r\n            {options.showContextBar && <div style={{borderRight: '1px solid #666', width: 200}}>\r\n                <List<Context> items={nestedContexts.topContexts} renderItem={i => renderListContext(i, nestedContexts)} />\r\n            </div>}\r\n            <div style={{width: '100%'}}>\r\n                <ToolSection>\r\n                    <SettingsCompactor alwaysVisible={() => (\r\n                        <div className=\"button\" onClick={() => { setContextId(null); setProjectId(null); }}>R</div>\r\n                    )} mobileOnly={() => (\r\n                        <div className=\"button\" style={{marginLeft: 'auto', marginRight: 8}} onClick={() => setOptions({ ...options, showContextBar: !options.showContextBar })}>C</div>\r\n                    )}>\r\n                        <select style={{padding: '0.3rem', display: 'block'}} value={contextId || ''} onChange={e => setContextId(e.target.value === '' ? null : e.target.value) }>\r\n                            <option value=\"\">All contexts</option>\r\n                            {data.contexts.map(c => (\r\n                                <option key={c.id} value={c.id}>{c.title}</option>\r\n                            ))}\r\n                        </select>\r\n                        <select style={{padding: '0.3rem', display: 'block'}} value={projectId || ''} onChange={e => setProjectId(e.target.value === '' ? null : e.target.value)}>\r\n                            <option value=\"\">All projects</option>\r\n                            {data.projects.filter(c => c.state === ProjectState.Active).map(c => (\r\n                                <option key={c.id} value={c.id}>{c.title}</option>\r\n                            ))}\r\n                        </select>\r\n                        <select style={{padding: '0.3rem', display: 'block'}} value={perspectiveId || ''} onChange={e => setPerspectiveId(e.target.value === '' ? null : e.target.value)}>\r\n                            <option value=\"\">Select Perspective</option>\r\n                            {perspectives.map(c => (\r\n                                <option key={c.id} value={c.id}>{c.title}</option>\r\n                            ))}\r\n                        </select>\r\n                        <div>\r\n                            <input id=\"completed-box\" type=\"checkbox\" checked={options.showCompleted} onChange={() => setOptions({ ...options, showCompleted: !options.showCompleted })} />\r\n                            <label htmlFor=\"completed-box\">Show completed</label>\r\n                        </div>\r\n                        <div>\r\n                            <input id=\"deferred-box\" type=\"checkbox\" checked={options.showDeferred} onChange={() => setOptions({ ...options, showDeferred: !options.showDeferred })} />\r\n                            <label htmlFor=\"deferred-box\">Show deferred</label>\r\n                        </div>\r\n                        <div>\r\n                            <input id=\"incubated-box\" type=\"checkbox\" checked={options.showIncubated} onChange={() => setOptions({ ...options, showIncubated: !options.showIncubated })} />\r\n                            <label htmlFor=\"incubated-box\">Show incubated</label>\r\n                        </div>\r\n                        <div>\r\n                            <input id=\"context-box\" type=\"checkbox\" checked={options.showContextBar} onChange={() => setOptions({ ...options, showContextBar: !options.showContextBar })} />\r\n                            <label htmlFor=\"context-box\">Show context bar</label>\r\n                        </div>\r\n                        <div>\r\n                            <input id=\"include-nested-box\" type=\"checkbox\" checked={options.includeNested} onChange={() => setOptions({ ...options, includeNested: !options.includeNested })} />\r\n                            <label htmlFor=\"include-nested-box\">Include nested contexts</label>\r\n                        </div>\r\n                    </SettingsCompactor>\r\n                    <input type=\"text\" className=\"input is-large is-wide\" placeholder=\"Add task...\" value={text} onChange={e => setText(e.target.value)} onKeyPress={onKeyPress} />\r\n                </ToolSection>\r\n                <div className=\"list\">\r\n                    {taskBlock}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { Data } from \"../model\";\r\nimport * as _ from 'lodash';\r\nimport { Context } from \"../db/context\";\r\n\r\nexport interface NestedContexts {\r\n    topContexts: Context[];\r\n    nestedContexts: {[id: string]: Context[]};\r\n    taskCounts: {[id: string]: number};\r\n}\r\n\r\nexport function getNestedContexts(data: Data): NestedContexts {\r\n    const grouped = _.groupBy(data.contexts, x => x.contextId);\r\n    const taskCounts = _.countBy(data.tasks.filter(x => x.state === 'active'), x => x.contextId);\r\n\r\n    return {\r\n        topContexts: data.contexts.filter(x => !x.contextId),\r\n        nestedContexts: grouped,\r\n        taskCounts\r\n    };\r\n}","import {createInstance} from 'localforage';\r\n\r\nconst draftStore = createInstance({ name: 'drafts' });\r\n\r\nfunction getDraftKey(id: string|undefined) {\r\n    if(!id) {\r\n        return 'draft-new';\r\n    }\r\n\r\n    return `draft-${id}`;\r\n}\r\n\r\nexport async function hasDraft(id: string|undefined) {\r\n    const draft = await draftStore.getItem<string>(getDraftKey(id));\r\n    return !!draft;\r\n}\r\n\r\nexport async function getDraftIds() {\r\n    const keys = await draftStore.keys();\r\n    return keys.map(k => k.replace('draft-', ''));\r\n}\r\n\r\nexport async function getDraft(id: string|undefined) {\r\n    return await draftStore.getItem<string>(getDraftKey(id));\r\n}\r\n\r\nexport async function setDraft(id: string|undefined, text: string) {\r\n    return await draftStore.setItem(getDraftKey(id), text);\r\n}\r\n\r\nexport async function clearDraft(id: string|undefined) {\r\n    return await draftStore.removeItem(getDraftKey(id));\r\n}","import * as React from 'react';\r\n\r\nexport function TagInput(props: { tagState: TagState, onChange: (tagState: TagState) => void }) {\r\n    const [focus, setFocus] = React.useState(false)\r\n\r\n    const timeoutId = React.useRef<number|undefined>(undefined);\r\n    const tagInput = React.useRef<any>();\r\n\r\n    function onTextChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n        props.onChange(props.tagState.withText(e.target.value))\r\n    }\r\n\r\n    function onKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\r\n        if (e.key === 'ArrowUp') {\r\n            props.onChange(props.tagState.decrementIndex());\r\n        } else if (e.key === 'ArrowDown') {\r\n            props.onChange(props.tagState.incrementIndex());\r\n        } else if (e.key === 'Enter') {\r\n            if (props.tagState.text === '') {\r\n                props.onChange(props.tagState.addSelectedTag());\r\n            } else {\r\n                props.onChange(props.tagState.addText());\r\n            }\r\n        } else if (e.key === 'Tab') {\r\n            props.onChange(props.tagState.addSelectedTag());\r\n            e.preventDefault();\r\n        } else if (e.key === 'Backspace') {\r\n            if (props.tagState.text === '') {\r\n                props.onChange(props.tagState.reopenLastTag());\r\n            }\r\n        }\r\n    }\r\n\r\n    function onClickTag(tag: string) {\r\n        props.onChange(props.tagState.addTag(tag));\r\n        tagInput.current.focus();\r\n    }\r\n\r\n    function onFocus() {\r\n        clearTimeout(timeoutId.current);\r\n\r\n        if(focus) {\r\n            return;\r\n        }\r\n\r\n        setFocus(true);\r\n    }\r\n\r\n    function onBlur() {\r\n        if(!focus) {\r\n            return;\r\n        }\r\n\r\n        timeoutId.current = setTimeout(() => {\r\n            setFocus(false);\r\n        }, 100) as any;\r\n    }\r\n\r\n    return (\r\n        <div className=\"tag-input\" onFocus={() => onFocus()} onBlur={() => onBlur()}>\r\n            <div className=\"tags\">\r\n                {props.tagState.selectedTags.map((t, i) => <Tag key={`tag-${t}-${i}`} name={t} />)}\r\n                <input ref={tagInput} placeholder=\"Tag\" type=\"text\" className=\"\" onChange={e => onTextChange(e)} onKeyDown={e => onKeyPress(e)} value={props.tagState.text} />\r\n            </div>\r\n            {focus && props.tagState.getFilteredAvailableTags().length > 0 &&\r\n                <div className=\"panel\">\r\n                    {props.tagState.getFilteredAvailableTags().slice(0, 10).map((t, i) => <div key={`available-tag-${t}`} style={props.tagState.index === i ? { background: '#078263'} : {}} onClick={() => onClickTag(t)}>{t}</div>)}\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport class TagState {\r\n    availableTags: string[];\r\n    selectedTags: string[];\r\n    text: string;\r\n    index: number;\r\n\r\n    constructor(availableTags: string[], selectedTags: string[], text = \"\", index = 0) {\r\n        this.availableTags = availableTags;\r\n        this.selectedTags = selectedTags;\r\n        this.text = text;\r\n        this.index = index;\r\n    }\r\n\r\n    withText(text: string) {\r\n        return new TagState(this.availableTags, this.selectedTags, text, this.index);\r\n    }\r\n\r\n    withAvailableTags(availableTags: string[]) {\r\n        return new TagState(availableTags, this.selectedTags, this.text, this.index);\r\n    }\r\n\r\n    withSelectedTags(selectedTags: string[]) {\r\n        return new TagState(this.availableTags, selectedTags, this.text, this.index);\r\n    }\r\n\r\n    decrementIndex() {\r\n        return new TagState(this.availableTags, this.selectedTags, this.text, Math.max(0, this.index - 1));\r\n    }\r\n\r\n    incrementIndex() {\r\n        return new TagState(this.availableTags, this.selectedTags, this.text, Math.max(0, Math.min(this.availableTags.length - 1, this.index + 1)));\r\n    }\r\n\r\n    addSelectedTag() {\r\n        return new TagState(this.availableTags, this.selectedTags.concat([this.getFilteredAvailableTags()[this.index]]), '', 0);\r\n    }\r\n\r\n    addTag(tag: string) {\r\n        return new TagState(this.availableTags, this.selectedTags.concat([tag]), '', 0);\r\n    }\r\n\r\n    addText() {\r\n        return new TagState(this.availableTags, this.selectedTags.concat([this.text]), '', 0);\r\n    }\r\n\r\n    reopenLastTag() {\r\n        const lastTag = this.selectedTags[this.selectedTags.length - 1];\r\n        return new TagState(this.availableTags, this.selectedTags.slice(0, this.selectedTags.length - 1), lastTag, 0);\r\n    }\r\n\r\n    getFilteredAvailableTags() {\r\n        return this.availableTags.filter(t => this.selectedTags.indexOf(t) === -1).filter(t => t.toLowerCase().indexOf(this.text) !== -1);\r\n    }\r\n\r\n    getTags() {\r\n        return this.selectedTags.join(' ');\r\n    }\r\n}\r\n\r\nexport const Tag: React.FC<{ name: string }> = props => {\r\n    return (\r\n        <div className=\"tag is-dark\">{props.name}</div>\r\n    );\r\n}\r\n\r\nexport const TagList: React.FC<{tags: string}> = props => {\r\n    return (\r\n        <div className=\"tags\" style={{marginBottom: 0}}>{props.tags && props.tags.split(' ').map((t, i) => <Tag key={i} name={t} />)}</div>\r\n    );\r\n}","import { Entity } from \"./db\";\r\nimport moment from \"moment\";\r\n\r\nexport type NoteMode = 'markdown'|'tree';\r\n\r\nexport interface Note extends Entity {\r\n    type: 'note',\r\n    mode: NoteMode|null;\r\n    title: string;\r\n    tags: string;\r\n    content: string;\r\n    contextId: string|null;\r\n    noteFor: Reference|null;\r\n    dailyDate: string|null;\r\n};\r\n\r\nexport interface Reference {\r\n    type: string;\r\n    id: string;\r\n};\r\n\r\nexport interface HasNote extends Entity {\r\n    noteId: string|null;\r\n}\r\n\r\nexport function getNoteTitle(note: Pick<Note, 'dailyDate'|'title'|'content'>) {\r\n    if (note.dailyDate) {\r\n        return `Daily - ${moment(note.dailyDate).format('MMMM Do, YYYY')}`;\r\n    }\r\n\r\n    if (note.title && note.title.length) {\r\n        return note.title;\r\n    }\r\n\r\n    const parsedTitle = /# (.+)/.exec(note.content);\r\n\r\n    if (parsedTitle && parsedTitle.length > 1) {\r\n        return parsedTitle[1];\r\n    }\r\n\r\n    return '';\r\n}\r\n\r\nfunction escapeRegExp(str: string) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\r\n}\r\n\r\nexport function getNoteContextTitlePrefixRegExp(contextTitle: string) {\r\n    return new RegExp(`^${escapeRegExp(contextTitle)}/`, 'i')\r\n}\r\n\r\nexport function getNoteTitleMatchRegExp(reference: string) {\r\n    return new RegExp(`^${escapeRegExp(reference)}$`, 'i')\r\n}\r\n\r\nexport function getNoteReferenceMatchRegExp(reference: string) {\r\n    return new RegExp(`\\\\[\\\\[${escapeRegExp(reference)}\\\\]\\\\]`, 'i')\r\n}","import * as React from 'react';\r\nimport marked from 'marked';\r\nimport '../github-markdown.css';\r\nimport { useData } from '../model';\r\nimport { getNoteTitleMatchRegExp, getNoteContextTitlePrefixRegExp } from '../db/note';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst regex = /\\[\\[([^\\]]+)\\]\\]/ig;\r\n\r\nexport const MarkedViewer: React.FC<{ markdown: string; contextId: string|null }> = props => {\r\n    const history = useHistory();\r\n    const {data} = useData();\r\n\r\n    (window as any).lifeNavigate = function(url: string) {\r\n        history.push(url);\r\n        return false;\r\n    };\r\n\r\n    const markdown = props.markdown.replace(regex, (_, group1) => {\r\n        let matchContextId = props.contextId;\r\n        let matchTitle = group1;\r\n\r\n        const prefixContext = data.contexts.find(x => getNoteContextTitlePrefixRegExp(x.title).test(group1));\r\n        if (prefixContext) {\r\n            matchTitle = matchTitle.substring(prefixContext.title.length + 1);\r\n            matchContextId = prefixContext.id;\r\n        }\r\n\r\n        const referenceRegExp = getNoteTitleMatchRegExp(matchTitle);\r\n        const note = data.notes.find(x => x.contextId === matchContextId && referenceRegExp.test(x.title));\r\n\r\n        if (note) {\r\n            const url = `/notes/${note.id}`;\r\n            return `<span style=\"color: #444\">[[ </span><a onclick=\"return lifeNavigate('${url}')\" href=\"${url}\">${group1}</a><span style=\"color: #444\"> ]]</span>`;\r\n        }\r\n\r\n        const url = `/notes/new?title=${encodeURIComponent(group1)}${props.contextId ? `&context=${props.contextId}` : ''}`;\r\n        return `<span style=\"color: #444\">[[ </span><a onclick=\"return lifeNavigate('${url}')\" href=\"${url}\">${group1}</a><span style=\"color: #444\"> ? ]]</span>`;\r\n    });\r\n\r\n    const html = marked(markdown);\r\n    return (\r\n        <div className=\"marked-viewer note markdown-body\" dangerouslySetInnerHTML={{ __html: html }}></div>\r\n    );\r\n};","import * as React from 'react';\r\nimport { MarkedViewer } from './MarkedViewer';\r\nimport * as styles from '../layout/styles';\r\nimport { classes } from 'typestyle';\r\nimport { NoteMode } from '../db/note';\r\n\r\nimport AceEditor from \"react-ace\";\r\nimport {textCompleter, snippetCompleter, keyWordCompleter} from \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport \"ace-builds/src-noconflict/mode-markdown\";\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\nimport { Data } from '../model';\r\n\r\nexport enum SplitMode {\r\n    Split,\r\n    Editor,\r\n    Preview\r\n}\r\n\r\nexport const NoteModeSelector: React.SFC<{mode: NoteMode, onModeChange: (mode: NoteMode) => void}> = props => (\r\n    <div className={classes(styles.horizontalSpace('.5rem'))}>\r\n        <button className=\"button\" style={{background: !props.mode || props.mode !== 'markdown' ? '#444' : undefined}} onClick={() => props.onModeChange('markdown')}>Markdown</button>\r\n        <button className=\"button\" style={{background: props.mode !== 'tree' ? '#444' : undefined}} onClick={() => props.onModeChange('tree')}>Tree</button>\r\n    </div>\r\n);\r\n\r\n\r\nexport const SplitModeSelector: React.SFC<{mode: SplitMode, onModeChange: (mode: SplitMode) => void}> = props => (\r\n    <div className={classes(styles.horizontalSpace('.5rem'))}>\r\n        <button className=\"button\" style={{background: props.mode !== SplitMode.Split ? '#444' : undefined}} onClick={() => props.onModeChange(SplitMode.Split)}>Split</button>\r\n        <button className=\"button\" style={{background: props.mode !== SplitMode.Editor ? '#444' : undefined}} onClick={() => props.onModeChange(SplitMode.Editor)}>Editor</button>\r\n        <button className=\"button\" style={{background: props.mode !== SplitMode.Preview ? '#444' : undefined}} onClick={() => props.onModeChange(SplitMode.Preview)}>Preview</button>\r\n    </div>\r\n);\r\n\r\nexport class SimpleSplitEditor extends React.Component<{ text: string, onTextChanged: (text: string) => void, expand?: boolean, mode: SplitMode, data: Data, contextId: string|null }, {}> {\r\n\r\n    render() {\r\n        const style: React.CSSProperties = {};\r\n\r\n        if(this.props.expand) {\r\n            style.width = '100%';\r\n            style.height = '100%';\r\n            style.zIndex = 100;\r\n            style.display = 'flex';\r\n            style.maxHeight = '100%';\r\n        }\r\n\r\n        const border = '1px solid #666';\r\n        const components = [];\r\n\r\n        let textAreaStyle: React.CSSProperties = {\r\n            flexGrow: 1, \r\n            minWidth: '50%', \r\n            borderTop: border, \r\n            height: '100%'\r\n        };\r\n\r\n        let markedStyle: React.CSSProperties = {\r\n            flexGrow: 1, \r\n            minWidth: '50%', \r\n            background: 'transparent', \r\n            padding: '1rem', \r\n            borderTop: border\r\n        };\r\n\r\n        if (this.props.mode === SplitMode.Split) {\r\n            textAreaStyle.borderRight = border;\r\n            markedStyle.overflowY = 'scroll';\r\n        }\r\n\r\n        if (this.props.mode === SplitMode.Editor || this.props.mode === SplitMode.Split) {\r\n            components.push(\r\n                    <AceEditor \r\n                        key=\"editor\"\r\n                        value={this.props.text} \r\n                        fontSize={18}\r\n                        style={textAreaStyle}\r\n                        onChange={e => this.props.onTextChanged(e)} \r\n                        mode=\"markdown\"\r\n                        theme=\"monokai\"\r\n                        showGutter={false} \r\n                        showPrintMargin={false}\r\n                        wrapEnabled={true}\r\n                        enableBasicAutocompletion={[snippetCompleter, textCompleter, keyWordCompleter] as any}\r\n                        enableLiveAutocompletion={true}\r\n                        enableSnippets={true}\r\n                    />\r\n            );\r\n        }\r\n\r\n        if (this.props.mode === SplitMode.Preview || this.props.mode === SplitMode.Split) {\r\n            components.push(\r\n                <div key=\"2\" style={markedStyle}>\r\n                    <MarkedViewer markdown={this.props.text} contextId={this.props.contextId} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div style={style}>\r\n                {components}\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { useState, useRef } from 'react';\r\nimport { classes } from 'typestyle';\r\nimport { horizontalSpace } from '../layout/styles';\r\nimport { MarkedViewer } from './MarkedViewer';\r\nimport AceEditor, { ICommand } from \"react-ace\";\r\n\r\nimport {textCompleter, snippetCompleter, keyWordCompleter} from \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport \"ace-builds/src-noconflict/mode-markdown\";\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\nimport ReactAce from 'react-ace/lib/ace';\r\nimport { Loader } from './Loader';\r\nimport { getNoteReferenceMatchRegExp } from '../db/note';\r\nimport { useData } from '../model';\r\n\r\ninterface Node {\r\n    text: string;\r\n    nodes: Node[];\r\n}\r\n\r\nexport const TreeViewer: React.FC<{ json: string, contextId: string|null, referenceTitle?: string }> = (props) => {\r\n    const [nodes, setNodes] = useState<Node[]|null>(null);\r\n    const [invalid, setInvalid] = useState(false);\r\n\r\n    React.useEffect(() => {\r\n        try {\r\n            let nodes = [];\r\n            if (props.json) {\r\n                nodes = JSON.parse(props.json)\r\n            }\r\n            setNodes(nodes);\r\n        } catch {\r\n            setInvalid(true);\r\n        }\r\n    }, [props.json]);\r\n\r\n    if (invalid) {\r\n        return <div>Invalid json</div>;\r\n    }\r\n\r\n    if (!nodes) {\r\n        return <Loader />;\r\n    }\r\n\r\n    const renderNode = (node: Node, index: number, level: number, filter: RegExp|null) => {\r\n        const extra: JSX.Element[] = [];\r\n        if (filter) {\r\n            if (filter.test(node.text)) {\r\n                filter = null;\r\n                if (level > 0) {\r\n                    extra.push(<div key={`extra-${index}-${level}`} style={{paddingTop: 8, color: '#aaa'}}>{'... > '.repeat(level)}</div>)\r\n                }\r\n            } else {\r\n                return (\r\n                    <React.Fragment key={`${level}-${index}`}>\r\n                        {node.nodes.map((n, i) => renderNode(n, i, level + 1, filter))}\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <React.Fragment key={`${level}-${index}`}>\r\n                {extra}\r\n                <div style={{display: 'flex', padding: '.6rem .8rem'}}>\r\n                    <div style={{letterSpacing: '.5rem', color: '#777', lineHeight: 1.5}}>•</div>\r\n                    <MarkedViewer markdown={node.text} contextId={props.contextId} />\r\n                </div>\r\n                <div style={{borderLeft: '1px solid #555', paddingLeft: 16, marginLeft: 16}}>\r\n                    {node.nodes.map((n, i) => renderNode(n, i, level + 1, filter))}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const referenceRegExp = props.referenceTitle ? getNoteReferenceMatchRegExp(props.referenceTitle) : null;\r\n    return (\r\n        <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'space-between', height: '100%'}}>\r\n            <div style={{width: '100%'}}>\r\n                {nodes.map((n, i) => renderNode(n, i, 0, referenceRegExp))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const TreeEditor: React.FC<{text: string, onTextChanged: (text: string) => void, contextId: string|null}> = (props) => {\r\n    const {data} = useData();\r\n    const [invalid] = useState(() => {\r\n        if (!props.text || props.text === '') {\r\n            return false;\r\n        }\r\n        try {\r\n            JSON.parse(props.text);\r\n            return false;\r\n        } catch {\r\n            return true;\r\n        }\r\n    })\r\n\r\n    const [nodes, setNodes] = useState<Node[]>(() => {\r\n        if (invalid) {\r\n            return [];\r\n        }\r\n\r\n        if (!props.text || props.text === '') {\r\n            return [\r\n                { text: '', nodes: [] }\r\n            ];\r\n        }\r\n\r\n        return JSON.parse(props.text);\r\n    });\r\n\r\n    const inputRef = useRef<ReactAce>(null);\r\n    const [active, setActive] = useState(nodes[0]);\r\n\r\n    const [noteTitles] = React.useState(() => data.notes.map(n => {\r\n        if (!n.title || !n.title.length) {\r\n            return null;\r\n        }\r\n\r\n        if (n.contextId === props.contextId) {\r\n            return n.title;\r\n        }\r\n\r\n        const context = data.contexts.find(c => c.id === n.contextId);\r\n\r\n        if(!context) {\r\n            return null;\r\n        }\r\n\r\n        return `${context.title}/${n.title}`;\r\n    }).filter(t => t !== null) as string[])\r\n\r\n    if (invalid) {\r\n        return (\r\n            <div>Invalid tree content (not valid JSON).</div>\r\n        )\r\n    }\r\n\r\n    const updateText = () => {\r\n        props.onTextChanged(JSON.stringify(nodes));\r\n    }\r\n\r\n    const onInputChanged = (node: Node, value: string) => {\r\n        node.text = value; \r\n        setNodes([...nodes]);\r\n        updateText();\r\n    };\r\n\r\n    const getParentNode = (targetNode: Node, searchNodes: Node[] = nodes, parentNode: Node|null = null): Node|null => {\r\n      for(const node of searchNodes) {\r\n          if (node === targetNode) {\r\n              return parentNode;\r\n          }\r\n\r\n          const childResult = getParentNode(targetNode, node.nodes, node);\r\n          if (childResult) {\r\n              return childResult;\r\n          }\r\n      }\r\n\r\n      return null;\r\n    };\r\n\r\n    const preorderTraversal = () => {\r\n        const result: Node[] = [];\r\n        const stack = [...nodes].reverse();\r\n            \r\n        while(stack.length) {\r\n            let node = stack.pop();\r\n\r\n            if (!node) {\r\n                return result;\r\n            }\r\n\r\n            result.push(node);\r\n\r\n            for(let childNode of [...node.nodes].reverse()) {\r\n                stack.push(childNode);\r\n            }\r\n\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    const insertNode = (afterNode: Node, above = false) => {\r\n        const parentNode = getParentNode(afterNode);\r\n        const searchNodes = parentNode ? parentNode.nodes : nodes;\r\n        const nodeIndex = searchNodes.findIndex(x => x === afterNode);\r\n        const node: Node = { text: '', nodes: [] };\r\n        searchNodes.splice(nodeIndex + (above ? 0 : 1), 0, node);\r\n        setNodes([...nodes]);\r\n        return node;\r\n    };\r\n\r\n    const removeNode = (node: Node) => {\r\n        const parentNode = getParentNode(node);\r\n        const searchNodes = parentNode ? parentNode.nodes : nodes;\r\n        const nodeIndex = searchNodes.findIndex(x => x === node);\r\n        searchNodes.splice(nodeIndex, 1);\r\n        setNodes([...nodes]);\r\n        return node;\r\n    };\r\n\r\n    const removeNodeIfEmpty = (node: Node) => {\r\n        if (node.text.length || node.nodes.length) {\r\n            return;\r\n        }\r\n        removeNode(node);\r\n    };\r\n\r\n    const indentNode = (node: Node) => {\r\n        const parentNode = getParentNode(node);\r\n        const searchNodes = parentNode ? parentNode.nodes : nodes;\r\n        const nodeIndex = searchNodes.findIndex(x => x === node);\r\n\r\n        if (nodeIndex === 0) {\r\n            return;\r\n        } else {\r\n            searchNodes.splice(nodeIndex, 1);\r\n            searchNodes[nodeIndex - 1].nodes.push(node);\r\n            setNodes([...nodes]);\r\n        }\r\n    };\r\n\r\n    const unindentNode = (node: Node) => {\r\n        const parentNode = getParentNode(node);\r\n        \r\n        if(parentNode === null) {\r\n            return;\r\n        }\r\n\r\n        const parentParentNode = getParentNode(parentNode);\r\n        const targetNodes = parentParentNode ? parentParentNode.nodes : nodes;\r\n        const parentNodeIndex = targetNodes.findIndex(x => x === parentNode);\r\n        targetNodes.splice(parentNodeIndex + 1, 0, node);\r\n        const nodeIndex = parentNode.nodes.findIndex(x => x === node);\r\n        parentNode.nodes.splice(nodeIndex, 1);\r\n\r\n        setNodes([...nodes]);\r\n    };\r\n    \r\n    const commands: ICommand[] = [\r\n        { name: 'indent', bindKey: { win: 'tab', mac: 'tab' }, exec: () => {\r\n            setTimeout(() => {\r\n                indentNode(active);\r\n            }, 0);\r\n            return true;\r\n        }},\r\n        { name: 'unindent', bindKey: { win: 'shift+tab', mac: 'shift+tab' }, exec: () => {\r\n            setTimeout(() => {\r\n                unindentNode(active);\r\n            }, 0);\r\n            return true;\r\n        }},\r\n        { name: 'enter', bindKey: { win: 'enter', mac: 'enter' }, exec: () => {\r\n            if (active.text === '') {\r\n                return;\r\n            }\r\n            const above = inputRef.current && inputRef.current.editor.getCursorPosition().row === 0 && inputRef.current.editor.getCursorPosition().column === 0;\r\n            setTimeout(() => {\r\n                const newNode = insertNode(active, !!above);\r\n                setActive(newNode);\r\n            }, 0);\r\n            return true;\r\n        }},\r\n        { name: 'up', bindKey: { win: 'up', mac: 'up' }, exec: () => {\r\n            const searchNodes = preorderTraversal();\r\n            let activeIndex = searchNodes.findIndex(x => x === active);\r\n            activeIndex = Math.max(0, activeIndex - 1);\r\n            setTimeout(() => {\r\n                setActive(searchNodes[activeIndex]);\r\n                removeNodeIfEmpty(active);\r\n            }, 0);\r\n            return true;\r\n        }},\r\n        { name: 'down', bindKey: { win: 'down', mac: 'down' }, exec: () => {\r\n            const searchNodes = preorderTraversal();\r\n            let activeIndex = searchNodes.findIndex(x => x === active);\r\n            activeIndex = Math.min(searchNodes.length - 1, activeIndex + 1);\r\n            setTimeout(() => {\r\n                setActive(searchNodes[activeIndex]);\r\n                removeNodeIfEmpty(active);\r\n            }, 0);\r\n            return true;\r\n        }},\r\n        { name: 'space', bindKey: { win: 'space', mac: 'space' }, exec: () => {\r\n            const atStart = inputRef.current && inputRef.current.editor.getCursorPosition().row === 0 && inputRef.current.editor.getCursorPosition().column === 0;\r\n            if (atStart) {\r\n                setTimeout(() => {\r\n                    indentNode(active);\r\n                }, 0);\r\n                return true;\r\n            }\r\n            return false;\r\n        }},\r\n        { name: 'backspace', bindKey: { win: 'backspace', mac: 'backspace' }, exec: () => {\r\n            const atStart = inputRef.current && inputRef.current.editor.getCursorPosition().row === 0 && inputRef.current.editor.getCursorPosition().column === 0;\r\n            if (atStart) {\r\n                setTimeout(() => {\r\n                    unindentNode(active);\r\n                }, 0);\r\n                return true;\r\n            }\r\n            return false;\r\n        }}\r\n    ];\r\n\r\n    // Look at https://github.com/ajaxorg/ace/blob/41ac47ec9e26f65fe0ffedeedf14b525a22f5462/lib/ace/ext/language_tools.js#L42-L48\r\n    const completions = {\r\n        getCompletions: (editor: any, session: any, pos: any, prefix: any, callback: CompletionCallback) => {\r\n            // console.log('editor', editor, 'session', session, 'pos', pos, 'prefix', prefix, 'callback', callback);\r\n            const token = session.getTokenAt(pos.row, pos.column);\r\n\r\n            if (!token) {\r\n                return;\r\n            }\r\n\r\n            const requiredPrefix = '[[';\r\n            const strWithPrefix = token.value.substring(pos.column - prefix.length - requiredPrefix.length);\r\n\r\n            if (!strWithPrefix.startsWith(requiredPrefix)) {\r\n                return;\r\n            }\r\n\r\n            const completions = noteTitles.map(n => ({\r\n                caption: n,\r\n                snippet: n,\r\n                meta: 'note',\r\n            }))\r\n\r\n            callback(null, completions);\r\n        }\r\n    }\r\n\r\n    const renderNode = (node: Node, index: number, level: number) => {\r\n        const isActive = node === active;\r\n        return (\r\n            <React.Fragment key={`${level}-${index}`}>\r\n                <div style={{display: 'flex', background: isActive ? '#292929' : undefined, padding: '.6rem .8rem'}} onClick={() => { if(!isActive) { setActive(node); }; }}>\r\n                    <div style={{letterSpacing: '.5rem', color: isActive ? '#078263' : '#777', lineHeight: 1.5}}>•</div>\r\n                    {isActive \r\n                        ? <AceEditor\r\n                            key=\"editor\"\r\n                            ref={inputRef}\r\n                            value={node.text} \r\n                            fontSize={16}\r\n                            style={{background: 'transparent', width: '100%'}}\r\n                            onChange={e => onInputChanged(node, e)} \r\n                            mode=\"markdown\"\r\n                            theme=\"monokai\"\r\n                            focus\r\n                            highlightActiveLine={false}\r\n                            showGutter={false} \r\n                            showPrintMargin={false}\r\n                            wrapEnabled={true}\r\n                            maxLines={Infinity}\r\n                            commands={commands}\r\n                            // enableBasicAutocompletion={[snippetCompleter, textCompleter, keyWordCompleter] as any}\r\n                            enableBasicAutocompletion={[completions, snippetCompleter, textCompleter, keyWordCompleter] as any}\r\n                            enableLiveAutocompletion={true}\r\n                            enableSnippets={true}\r\n                            />\r\n                        : <MarkedViewer markdown={node.text} contextId={props.contextId} />}\r\n                </div>\r\n                <div style={{borderLeft: '1px solid #555', marginLeft: 16, paddingLeft: 16}}>\r\n                    {node.nodes.map((n, i) => renderNode(n, i, level + 1))}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div style={{display: 'flex', background: '#444', position: 'fixed', height: 36, bottom: 0, left: 0, right: 0}} className={classes(horizontalSpace('.5rem'))}>\r\n                    <div className=\"button\" onClick={e => { unindentNode(active); inputRef.current && inputRef.current.editor.focus(); }}>&larr;</div>\r\n                    <div className=\"button\" onClick={e => { indentNode(active); inputRef.current && inputRef.current.editor.focus(); }}>&rarr;</div>\r\n                    <div className=\"button\" onClick={e => { \r\n                        if (!inputRef.current) {\r\n                            return;\r\n                        }\r\n                        inputRef.current.editor.session.insert(inputRef.current.editor.getCursorPosition(), '[['); \r\n                        inputRef.current.editor.focus();\r\n                    }}>[[</div>\r\n                    <div className=\"button\" onClick={e => { \r\n                        if (!inputRef.current) {\r\n                            return;\r\n                        }\r\n                        inputRef.current.editor.session.insert(inputRef.current.editor.getCursorPosition(), ']]'); \r\n                        inputRef.current.editor.focus();\r\n                    }}>]]</div>\r\n            </div>\r\n            <div style={{height: '100%', marginBottom: 36}}>\r\n                {nodes.map((n, i) => renderNode(n, i, 0))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\ninterface Completion {\r\n    value?: string;\r\n    meta: string;\r\n    type?: string;\r\n    caption?: string;\r\n    snippet?: any;\r\n    score?: number;\r\n    exactMatch?: number;\r\n    docHTML?: string;\r\n}\r\n  \r\ntype CompletionCallback = (error: Error|null, results: Completion[]) => void;","import * as React from 'react';\r\nimport { Data } from '../model';\r\nimport { ContextState } from '../db/context';\r\nimport _ from 'lodash';\r\n\r\nexport const ContextSelector: React.FC<{contextId: string|null, data: Data, onChange: (contextId: string|null) => void}> = (props) => {\r\n    const activeContexts = _.orderBy(props.data.contexts.filter(x => x.state === ContextState.Active), x => x.title);\r\n    const inactiveContexts = _.orderBy(props.data.contexts.filter(x => x.state !== ContextState.Active), x => x.title);\r\n\r\n    return (\r\n        <select className=\"input is-large\" value={props.contextId || ''} onChange={e => props.onChange(e.target.value)}>\r\n            <option value=\"\">Not set</option>\r\n            {activeContexts.map(c => (<option key={c.id} value={c.id}>{c.title}</option>))}\r\n            <option value=\"--inactive--\" disabled>-- Inactive</option>\r\n            {inactiveContexts.map(c => (<option key={c.id} value={c.id}>{c.title}</option>))}\r\n        </select>\r\n    );\r\n}","import * as React from 'react';\r\nimport * as draftStorage from '../draftStorage';\r\nimport { TagInput, TagState } from './TagInput';\r\nimport { ToolSection } from '../framework/ToolSection';\r\nimport { SimpleSplitEditor, SplitMode, SplitModeSelector, NoteModeSelector } from './SimpleSplitEditor';\r\nimport { isMobile } from './Layout';\r\nimport { db } from '../db/db';\r\nimport { Reference, NoteMode, getNoteTitle } from '../db/note';\r\nimport { TreeEditor } from './TreeEditor';\r\nimport { SettingsCompactor } from './SettingsCompactor';\r\nimport './NoteEditor.scss';\r\nimport { Loader } from '../components/Loader';\r\nimport { ContextSelector } from '../components/ContextSelector';\r\nimport { Data } from '../model';\r\nimport moment from 'moment';\r\n\r\nexport class NoteEditor extends React.Component<{onNoteAdded: () => void, id?: string, title?: string, text?: string, tags?: string, contextId: string|null, availableTags: string[], noteFor: Reference|null, noteMode?: NoteMode, data: Data, dailyDate: string|null}, {title: string, text: string, tags: string, tagState: TagState, splitMode: SplitMode, noteMode: NoteMode, contextId: string|null, loaded: boolean, dailyDate: string|null}> {\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loaded: false,\r\n            title: '', \r\n            text: '', \r\n            tags: '', \r\n            tagState: new TagState([], []), \r\n            splitMode: isMobile() ? SplitMode.Editor : SplitMode.Split, \r\n            noteMode: 'tree',\r\n            contextId: null,\r\n            dailyDate: null,\r\n        };\r\n\r\n        this.onTextChanged = this.onTextChanged.bind(this);\r\n        this.onSave = this.onSave.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const draft = await draftStorage.getDraft(this.props.id);\r\n\r\n        const title = this.props.title;\r\n        let text = this.props.text;\r\n        const tags = this.props.tags;\r\n        const noteMode = this.props.noteMode;\r\n        const contextId = this.props.contextId;\r\n        const dailyDate = this.props.dailyDate;\r\n\r\n        let state: any = {};\r\n\r\n        if (draft !== null && draft !== text && draft.length > 0) {\r\n            text = draft;\r\n        }\r\n\r\n        if (title !== undefined) {\r\n            state.title = title;\r\n        }\r\n        \r\n        if (text !== undefined) {\r\n            state.text = text;\r\n        }\r\n\r\n        if (noteMode !== undefined) {\r\n            state.noteMode = noteMode;\r\n        }\r\n\r\n        if (contextId !== undefined) {\r\n            state.contextId = contextId;\r\n        }\r\n\r\n        if (dailyDate !== undefined) {\r\n            state.dailyDate = dailyDate;\r\n        }\r\n\r\n        state.tagState = this.state.tagState\r\n            .withAvailableTags(this.props.availableTags);\r\n\r\n        if (tags && tags.length > 0) {\r\n            state.tagState = state.tagState.withSelectedTags(tags.split(' '));\r\n        }\r\n\r\n        state.loaded = true;\r\n        this.setState(state);\r\n    }\r\n\r\n    componentWillReceiveProps(props: any) {\r\n        this.setState({tagState: this.state.tagState.withAvailableTags(props.availableTags)});\r\n    }\r\n\r\n    onTitleChanged(e: React.ChangeEvent<HTMLInputElement>) {\r\n        this.setState({ title: e.target.value });\r\n    }\r\n\r\n    onTextChanged(text: string) {\r\n        if (text !== this.props.text) {\r\n            draftStorage.setDraft(this.props.id, text);\r\n        }\r\n\r\n        this.setState({text})\r\n    }\r\n\r\n    async onSave() {\r\n        const id = this.props.id || null;\r\n\r\n        if (id) {\r\n            let note = await db.notes.get(id);\r\n\r\n            if (note === null) {\r\n                throw new Error('Note is null?');\r\n            }\r\n\r\n            note.title = this.state.title;\r\n            note.content = this.state.text;\r\n            note.tags = this.state.tagState.getTags();\r\n            note.mode = this.state.noteMode;\r\n            note.contextId = this.state.contextId;\r\n            note.dailyDate = this.state.dailyDate;\r\n\r\n            await db.notes.save(note);\r\n        } else {\r\n            await db.notes.create({\r\n                title: this.state.title,\r\n                content: this.state.text,\r\n                tags: this.state.tagState.getTags(),\r\n                noteFor: null,\r\n                mode: this.state.noteMode,\r\n                contextId: this.state.contextId,\r\n                dailyDate: this.state.dailyDate\r\n            });\r\n        }\r\n\r\n        await draftStorage.clearDraft(this.props.id);\r\n        this.props.onNoteAdded();\r\n    }\r\n\r\n    render() {\r\n        const updateDailyDate = (value: string) => {\r\n            if (value === '') {\r\n                this.setState({dailyDate: null});\r\n            } else {\r\n                this.setState({dailyDate: new Date(value).toISOString()});\r\n            }\r\n        }\r\n\r\n        if (!this.state.loaded) {\r\n            return <Loader />;\r\n        }\r\n\r\n        return (\r\n            <div style={{width: '100%', flex: 1, display: 'flex', flexDirection: 'column'}}>\r\n                <ToolSection verticalAround={false}>\r\n                    <SettingsCompactor wideStyle={{justifyContent: 'space-between'}} alwaysVisible={() => (\r\n                        <>\r\n                            {this.props.id === undefined ?\r\n                                <button className=\"button is-primary\" onClick={this.onSave}>Add note</button> :\r\n                                <button className=\"button is-primary\" onClick={this.onSave}>Update note</button>}\r\n                            <ContextSelector contextId={this.state.contextId} data={this.props.data} onChange={contextId => this.setState({ contextId })} />\r\n                            <input type=\"date\" className=\"input\" value={(this.state.dailyDate && moment(this.state.dailyDate).format('YYYY-MM-DD')) || ''} onChange={e => updateDailyDate(e.target.value)} />\r\n                        </>\r\n                    )}>\r\n                        <NoteModeSelector mode={this.state.noteMode} onModeChange={noteMode => this.setState({ noteMode })} />\r\n                        <SplitModeSelector mode={this.state.splitMode} onModeChange={splitMode => this.setState({ splitMode })} />\r\n                    </SettingsCompactor>\r\n                </ToolSection>\r\n                <ToolSection>\r\n                    {!this.props.noteFor && !this.state.dailyDate && (\r\n                        <>\r\n                            <input type=\"text\" placeholder=\"Title\" className=\"input is-large is-wide\" value={this.state.title} onChange={this.onTitleChanged.bind(this)} />\r\n                            <TagInput tagState={this.state.tagState} onChange={s => this.setState({tagState: s})} />\r\n                        </>\r\n                    )}\r\n                    {this.state.dailyDate && (\r\n                        <h1>{getNoteTitle({ dailyDate: this.state.dailyDate, title: this.state.title, content: this.state.text })}</h1>\r\n                    )}\r\n                </ToolSection>\r\n                <div style={{flex: 1}}>\r\n                    {this.state.noteMode === 'markdown' ? (\r\n                        <SimpleSplitEditor text={this.state.text} expand={true} onTextChanged={this.onTextChanged} mode={this.state.splitMode} data={this.props.data} contextId={this.state.contextId} />\r\n                    ) : (\r\n                        <TreeEditor text={this.state.text} onTextChanged={this.onTextChanged} contextId={this.state.contextId} />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { NoteEditor } from '../../components/NoteEditor';\r\nimport { useData } from '../../model';\r\nimport { ToolSection } from '../../framework/ToolSection';\r\nimport { useQueryState } from '../../lib/UseQueryState';\r\nimport { classes } from 'typestyle';\r\nimport * as styles from '../../layout/styles';\r\n\r\nexport const EditNotePage: React.FC<{id?: string }> = props => {\r\n    const {data, refreshData} = useData();\r\n    let tags: {[key: string]: number} = {};\r\n    const [goBack, setGoBack] = React.useState(false);\r\n    const [source] = useQueryState(null, 'source');\r\n\r\n    if (goBack) {\r\n        return <Redirect to={source ? decodeURIComponent(source) : '/'} />;\r\n    }\r\n\r\n    for (const note of data.notes || []) {\r\n\r\n        if(!note.tags || !note.tags.length) {\r\n            continue;\r\n        }\r\n\r\n        for(const tag of note.tags.split(' ')) {\r\n            if(!tags[tag]) {\r\n                tags[tag] = 0;\r\n            }\r\n\r\n            tags[tag] += 1;\r\n        }\r\n    }\r\n\r\n    const availableTags = Object.keys(tags).sort((a, b) => tags[b] - tags[a]);\r\n\r\n    if (props.id) {\r\n        let note = data.notes.find(x => x.id == props.id);\r\n\r\n        if (!note) {\r\n            return <div>Note not found.</div>\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div style={{height: '100%', display: 'flex', flexDirection: 'column'}}>\r\n                    <ToolSection>\r\n                        <div className={classes(styles.horizontalSpace('.5rem'))}>\r\n                            <NavLink to={source ? decodeURIComponent(source) : '/'} className=\"button\">Back</NavLink>\r\n                            {!note.noteFor && <NavLink to={`/notes/${note.id}`} className=\"button\">Show</NavLink>}\r\n                        </div>\r\n                    </ToolSection>\r\n                    <NoteEditor {...note} data={data} text={note.content}  availableTags={availableTags} noteMode={note.mode||'tree'} dailyDate={note.dailyDate} onNoteAdded={() => { refreshData(); setGoBack(true); }} />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const title = urlParams.get('title');\r\n    const contextId = urlParams.get('context');\r\n\r\n    return (\r\n        <>\r\n            <div style={{height: '100%', display: 'flex', flexDirection: 'column'}} >\r\n                <ToolSection>\r\n                    <NavLink to={`/`} className=\"button\">Back</NavLink>\r\n                </ToolSection>\r\n                <NoteEditor title={title || undefined} contextId={contextId} availableTags={availableTags} data={data} noteFor={null} dailyDate={null} noteMode={'tree'} onNoteAdded={() => { refreshData(); setGoBack(true); }} />\r\n            </div>\r\n        </>\r\n    );\r\n}","import * as React from 'react';\r\nimport { useData } from '../model';\r\nimport { MarkedViewer } from './MarkedViewer';\r\nimport { TreeViewer } from './TreeEditor';\r\nimport { getNoteTitle, getNoteReferenceMatchRegExp } from '../db/note';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nexport const ReferenceViewer: React.FC<{ title: string, contextId: string|null }> = (props) => {\r\n    const {data} = useData();\r\n    const referenceRegExp = getNoteReferenceMatchRegExp(props.title);\r\n    const contextNotes = data.notes.filter(x => x.contextId === props.contextId && referenceRegExp.test(x.content));\r\n\r\n    if (contextNotes.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div style={{paddingTop: 32}}>\r\n            <div style={{fontWeight: 'bold'}}>{contextNotes.length} linked references for \"{props.title}\"</div>\r\n            {contextNotes.map(note => (\r\n                <div key={note.id} style={{marginTop: 16}}>\r\n                    <Link to={`/notes/${note.id}`} style={{color: '#078263'}}>{getNoteTitle(note)}</Link>\r\n                    <div style={{paddingLeft: 16, background: '#222', marginTop: 8}}>\r\n                        {note.mode === 'markdown' \r\n                        ? <MarkedViewer markdown={note.content} contextId={note.contextId} /> \r\n                        : <TreeViewer json={note.content} contextId={note.contextId} referenceTitle={props.title} />}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { MarkedViewer } from '../../components/MarkedViewer';\r\nimport { ReferenceViewer } from '../../components/ReferenceViewer';\r\nimport { useData } from '../../model';\r\nimport { ToolSection } from '../../framework/ToolSection';\r\nimport { useQueryState } from '../../lib/UseQueryState';\r\nimport { TreeViewer } from '../../components/TreeEditor';\r\nimport { TagList } from '../../components/TagInput';\r\nimport { ContextTag } from '../../components/ContextTag';\r\nimport { getNoteTitle } from '../../db/note';\r\n\r\nexport const ShowNotePage: React.SFC<{id: string}> = (props) => {\r\n    const {data} = useData();\r\n    const [source] = useQueryState(null, 'source');\r\n    const note = data.notes.find(x => x.id === props.id);\r\n\r\n    if (!note) {\r\n        return <div>Note not found.</div>\r\n    }\r\n\r\n    let viewer = null;\r\n\r\n    if (!note.mode || note.mode === 'markdown') {\r\n        viewer = <MarkedViewer markdown={note.content} contextId={note.contextId} />;\r\n    } else {\r\n        viewer = <TreeViewer json={note.content} contextId={note.contextId} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToolSection>\r\n                <NavLink to={source ? decodeURIComponent(source) : '/'} className=\"button\">Back</NavLink>\r\n                <NavLink to={`/notes/${note.id}/edit`} className=\"button\">Edit</NavLink>\r\n            </ToolSection>\r\n            <div className=\"panel\">\r\n                <div className=\"content\" style={{padding: '1rem'}}>\r\n                    <h1>{getNoteTitle(note)}</h1>\r\n                    <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                        <TagList tags={note.tags} />\r\n                        <ContextTag contextId={note.contextId} />\r\n                    </div>\r\n                    {viewer}\r\n                    <ReferenceViewer title={getNoteTitle(note)} contextId={note.contextId} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}","import * as React from 'react';\r\nimport moment from 'moment';\r\nimport * as draftStorage from '../../draftStorage';\r\nimport { TagList } from '../../components/TagInput';\r\nimport { NavLink } from 'react-router-dom';\r\nimport lunr from 'lunr';\r\nimport { debounce } from 'throttle-debounce';\r\nimport { useData } from '../../model';\r\nimport { classes } from 'typestyle';\r\nimport * as styles from '../../layout/styles';\r\nimport { ToolSection } from '../../framework/ToolSection';\r\nimport { getNoteTitle } from '../../db/note';\r\nimport { List } from '../../framework/List';\r\nimport { isMobile } from '../../components/Layout';\r\nimport { useQueryState, useQueryStateT, useQueryStateBoolean } from '../../lib/UseQueryState';\r\nimport { SettingsCompactor } from '../../components/SettingsCompactor';\r\nimport { ContextTag } from '../../components/ContextTag';\r\n\r\nexport const NotePage: React.SFC<{ }> = (props) => {\r\n    const {data, refreshData} = useData();\r\n\r\n    const [text, setText] = useQueryState(null, 'search');\r\n    const [filterTags, setFilterTags] = useQueryStateT<string[]>([], 'tags', s => s !== null ? s.split('|') : [], a => a.join('|'));\r\n    const [showTagsBar, setShowTagsBar] = React.useState(!isMobile());\r\n    const [searchResult, setSearchResult] = React.useState<{ id: string, score: number }[]|null>(null);\r\n    const [searchIndex, setSearchIndex] = React.useState<lunr.Index|null>(null);\r\n    const [showNotesFor, setShowNotesFor] = React.useState(false);\r\n    const [draftIds, setDraftIds] = React.useState<string[]>([]);\r\n    const [showNoContext, setShowNoContext] = useQueryStateBoolean(false, 'no-context');\r\n\r\n    React.useEffect(() => {\r\n        draftStorage.getDraftIds().then(setDraftIds);\r\n    }, []);\r\n\r\n    const onClearDraft = (id: string) => {\r\n        draftStorage.clearDraft(id);\r\n        refreshData();\r\n    }\r\n\r\n    const onSearch = (text: string) => {\r\n        if (!text || !text.length) {\r\n            setSearchResult(null);\r\n            return;\r\n        }\r\n\r\n        if (searchIndex === null) {\r\n            const idx = lunr(function() {\r\n                this.field('title');\r\n                this.field('text');\r\n    \r\n                for(let note of data.notes) {\r\n                    this.add({\r\n                        id: note.id,\r\n                        title: note.title,\r\n                        text: note.content\r\n                    });\r\n                }\r\n            });\r\n\r\n            setSearchIndex(idx);\r\n            const result = idx.search(text);\r\n            setSearchResult(result.map(r => { return { id: r.ref, score: r.score }; }));\r\n            return;\r\n        }\r\n\r\n        const result = searchIndex.search(text);\r\n        setSearchResult(result.map(r => { return { id: r.ref, score: r.score }; }));\r\n    };\r\n\r\n    const debouncedSearch = debounce(100, onSearch);\r\n\r\n    const toggleTag = (tag: string) => {\r\n        if (filterTags.indexOf(tag) === -1) {\r\n            setFilterTags(filterTags.concat([ tag ]));\r\n        } else {\r\n            setFilterTags(filterTags.filter(x => x !== tag));\r\n        }\r\n    }\r\n\r\n    let notes = data.notes || [];\r\n    let tags: {[key: string]: number} = {};\r\n\r\n    for(const tag of filterTags) {\r\n        notes = notes.filter(x => x.tags.split(' ').indexOf(tag) !== -1);\r\n    }\r\n\r\n    if (!showNotesFor) {\r\n        notes = notes.filter(x => !x.noteFor);\r\n    }\r\n\r\n    if (showNoContext) {\r\n        notes = notes.filter(x => !x.contextId);\r\n    }\r\n\r\n    if (searchResult) {\r\n        notes = searchResult.map(r => {\r\n            let idx =  notes.findIndex(n => n.id === r.id);\r\n            return notes[idx];\r\n        }).filter(n => n);\r\n    }\r\n\r\n    for (const note of notes) {\r\n\r\n        if(!note.tags) {\r\n            continue;\r\n        }\r\n\r\n        for(const tag of note.tags.split(' ')) {\r\n            if(!tags[tag]) {\r\n                tags[tag] = 0;\r\n            }\r\n\r\n            tags[tag] += 1;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const tagCounts = Object.keys(tags).map(k => { return { key: k, count: tags[k], active: filterTags.indexOf(k) !== -1 }; }).sort((a, b) => b.count - a.count);\r\n\r\n    let source: string|null = null;\r\n    if (window.location.search.length) {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        source = `?source=${encodeURIComponent(`${window.location.pathname}?${urlParams.toString()}`)}`\r\n    }\r\n\r\n    return (\r\n        <div style={{display: 'flex', height: '100%'}}>\r\n            {showTagsBar && <div style={{borderRight: '1px solid #666', width: 200}}>\r\n                <List<{key: string, count: Number, active: boolean}> items={tagCounts} renderItem={i => {\r\n                    return (\r\n                        <div key={i.key} style={{background: i.active ? '#444' : undefined}} onClick={() => toggleTag(i.key)} className={classes('item', styles.hoverGlow)}>{i.key} <span style={{color: '#999'}}>{i.count}</span></div>\r\n                    );\r\n                }} />\r\n            </div>}\r\n            <div style={{width: '100%'}}>\r\n                <ToolSection>\r\n                    <SettingsCompactor alwaysVisible={() => (\r\n                        <>\r\n                            <NavLink to={`/notes/new`} className=\"button\">New Note</NavLink>\r\n                        </>\r\n                    )}>\r\n                        <div>\r\n                            <input id=\"tags-box\" type=\"checkbox\" checked={showTagsBar} onChange={() =>setShowTagsBar(!showTagsBar)} />\r\n                            <label htmlFor=\"tags-box\">Show tags bar</label>\r\n                        </div>\r\n                        <div>\r\n                            <input id=\"show-notes-for-box\" type=\"checkbox\" checked={showNotesFor} onChange={() =>setShowNotesFor(!showNotesFor)} />\r\n                            <label htmlFor=\"show-notes-for-box\">Show notes for</label>\r\n                        </div>\r\n                        <div>\r\n                            <input id=\"show-no-context-box\" type=\"checkbox\" checked={showNoContext} onChange={() =>setShowNoContext(!showNoContext)} />\r\n                            <label htmlFor=\"show-no-context-box\">Show no context</label>\r\n                        </div>\r\n                    </SettingsCompactor>\r\n                    <input style={{fontSize: 16, padding: '.3rem', width: '100%'}} placeholder=\"Search...\" type=\"text\" value={text || ''} onChange={e => { setText(e.target.value); debouncedSearch(e.target.value); }}/>\r\n                </ToolSection>\r\n                <div className=\"list\">\r\n                    {notes.slice(0).reverse().map((n, i) => (\r\n                        <React.Fragment key={i}>\r\n                            <NavLink to={`/notes/${n.id}${source ? source : ''}`} className={classes('item', 'note', styles.hoverGlow)}>\r\n                                <div className=\"note-title\">\r\n                                    <div>{getNoteTitle(n)}</div>\r\n                                </div> \r\n                                <div className=\"note-details\">\r\n                                    <TagList tags={n.tags} />\r\n                                    <div className=\"tags\">\r\n                                        <ContextTag contextId={n.contextId} />\r\n                                    </div>\r\n                                    {draftIds.indexOf(n.id) !== -1 && <div className=\"button is-danger\" onClick={e => { e.preventDefault(); onClearDraft(n.id)}}>{'Clear draft'}</div>}\r\n                                    <div className=\"note-date\">{moment(n.updatedAt).format('ddd MMM Do HH:mm')}</div>\r\n                                </div>\r\n                            </NavLink>\r\n                        </React.Fragment>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {classes} from 'typestyle/lib';\r\nimport * as styles from '../layout/styles';\r\nimport { ToolSection } from '../framework/ToolSection';\r\nimport { Context, ContextState } from '../db/context';\r\nimport { db } from '../db/db';\r\nimport { useData } from '../model';\r\n\r\nexport const ContextPage: React.FC<{ }> = props => {\r\n    const {data, refreshData} = useData();\r\n\r\n    const [text, setText] = React.useState('');\r\n\r\n    async function onKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\r\n        if (e.key === 'Enter') {\r\n            await db.contexts.create({\r\n                title: text,\r\n                state: ContextState.Active,\r\n                contextId: null\r\n            });\r\n\r\n            setText('');\r\n            refreshData();\r\n        }\r\n    }\r\n\r\n    function renderTarget(target: Context) {\r\n        return (\r\n            <NavLink key={target.id} to={`/contexts/${target.id}`} className={classes('item', styles.hoverGlow)}>\r\n                <div>\r\n                    {target.title}\r\n                </div>\r\n            </NavLink>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToolSection>\r\n                <input type=\"text\" className=\"input is-large is-wide\" placeholder=\"Add context...\" value={text} onChange={e => setText(e.target.value)} onKeyPress={onKeyPress} />\r\n            </ToolSection>\r\n\r\n            <div className=\"list\">\r\n                <div className=\"header\">Active</div>\r\n                {data.contexts.filter(p => !p.state || p.state == ContextState.Active).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => renderTarget(t))}\r\n                <div className=\"header\">Not Active</div>\r\n                {data.contexts.filter(p => p.state === ContextState.Inactive).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => renderTarget(t))}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {classes} from 'typestyle/lib';\r\nimport * as styles from '../layout/styles';\r\nimport { Data } from '../model';\r\nimport { ToolSection } from '../framework/ToolSection';\r\nimport { ProjectState, Project } from '../db/project';\r\nimport { db } from '../db/db';\r\nimport { ContextTag } from '../components/ContextTag';\r\n\r\nexport class ProjectPage extends React.Component<{ data: Data, refreshData: () => void }, { text: string }> {\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            text: ''\r\n        };\r\n    } \r\n    \r\n    async onKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\r\n        if (e.key === 'Enter') {\r\n            await db.projects.create({\r\n                title: this.state.text,\r\n                state: ProjectState.Active,\r\n                contextId: null\r\n            });\r\n            this.setState({ text: '' }, this.props.refreshData);\r\n        }\r\n    }\r\n\r\n    renderProject(target: Project) {\r\n        return (\r\n            <NavLink to={`/projects/${target.id}`} className={classes('item', styles.hoverGlow)}>\r\n                <div>\r\n                    {target.title}\r\n                </div>\r\n                <div className=\"tags\">\r\n                    <div className=\"tag\">{target.state}</div>\r\n                    <ContextTag contextId={target.contextId} />\r\n                </div>\r\n            </NavLink>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <ToolSection>\r\n                    <input type=\"text\" className=\"input is-large is-wide\" placeholder=\"Add project...\" value={this.state.text} onChange={e => this.setState({ text: e.target.value })} onKeyPress={this.onKeyPress.bind(this)} />\r\n                </ToolSection>\r\n\r\n                <div className=\"list\">\r\n                    <div className=\"header\">Active</div>\r\n                    {this.props.data.projects.filter(p => !p.state || p.state == ProjectState.Active).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => this.renderProject(t))}\r\n                    <div className=\"header\">Incubated</div>\r\n                    {this.props.data.projects.filter(p => !p.state || p.state == ProjectState.Incubated).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => this.renderProject(t))}\r\n                    <div className=\"header\">Not Active</div>\r\n                    {this.props.data.projects.filter(p => p.state != ProjectState.Active && p.state != ProjectState.Incubated).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => this.renderProject(t))}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { useData } from '../model';\r\nimport { db } from '../db/db';\r\nimport { Person } from '../db/person';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { MarkedViewer } from './MarkedViewer';\r\nimport { Task } from '../db/task';\r\nimport { HasNote } from '../db/note';\r\nimport { TreeViewer } from './TreeEditor';\r\n\r\nexport const EmbeddedNoteEdit: React.FC<{ targetEntity: Person|Task|null }> = (props) => {\r\n    const {data, refreshData} = useData();\r\n\r\n    if (!props.targetEntity) {\r\n        return null;\r\n    }\r\n\r\n    const {noteId} = props.targetEntity;\r\n\r\n    const addNode = async () => {\r\n        if (!props.targetEntity) {\r\n            return;\r\n        }\r\n\r\n        const note = await db.notes.create({\r\n            title: '',\r\n            content: '',\r\n            tags: '',\r\n            contextId: null,\r\n            noteFor: {\r\n                type: props.targetEntity.type,\r\n                id: props.targetEntity.id,\r\n            },\r\n            mode: 'tree',\r\n            dailyDate: null\r\n        });\r\n\r\n        if (props.targetEntity.type === 'person') {\r\n            props.targetEntity.noteId = note.id;\r\n            await db.people.save(props.targetEntity);\r\n        }\r\n\r\n        if (props.targetEntity.type === 'task') {\r\n            props.targetEntity.noteId = note.id;\r\n            await db.tasks.save(props.targetEntity);\r\n        }\r\n\r\n        refreshData();\r\n    };\r\n\r\n    if (!noteId) {\r\n        return (\r\n            <div>\r\n                <div className=\"button\" onClick={addNode}>Add note</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const note = data.notes.find(x => x.id === noteId);\r\n\r\n    if (!note) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NavLink to={`/notes/${note.id}/edit?source=${encodeURIComponent(`${window.location.pathname}`)}`} className=\"button\">Edit note</NavLink>\r\n            {!note.mode || note.mode === 'markdown' ? (\r\n                <MarkedViewer markdown={note.content} contextId={note.contextId} />\r\n            ) : (\r\n                <TreeViewer json={note.content} contextId={note.contextId} />\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const EmbeddedNoteShow: React.FC<{ targetEntity: HasNote|null }> = (props) => {\r\n    const {data} = useData();\r\n\r\n    if (!props.targetEntity) {\r\n        return null;\r\n    }\r\n\r\n    const {noteId} = props.targetEntity;\r\n    if (!noteId) {\r\n        return null;\r\n    }\r\n\r\n    const note = data.notes.find(x => x.id === noteId);\r\n\r\n    if (!note) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!note.mode || note.mode === 'markdown' ? (\r\n                <MarkedViewer markdown={note.content} contextId={note.contextId} />\r\n            ) : (\r\n                <TreeViewer json={note.content} contextId={note.contextId} />\r\n            )}\r\n        </div>\r\n    )\r\n};","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Data } from '../model';\r\nimport { ToolSection } from '../framework/ToolSection';\r\nimport { Task, TaskState } from '../db/task';\r\nimport { db } from '../db/db';\r\nimport { ProjectState } from '../db/project';\r\nimport moment from 'moment';\r\nimport { classes } from 'typestyle';\r\nimport * as styles from '../layout/styles';\r\nimport { EmbeddedNoteEdit } from '../components/EmbeddedNote';\r\n\r\nexport class ShowTaskPage extends React.Component<{ data: Data, id: string, refreshData(): void }, { title: string, source: string }> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: '',\r\n            source: '/tasks'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n\r\n        let task = this.props.data.tasks.find(x => x.id === this.props.id);\r\n        this.setState({ title: task!.title }, () => {\r\n            if (urlParams.has('source')) {\r\n                this.setState({ source: decodeURIComponent(urlParams.get('source')!)});\r\n            }\r\n        });\r\n    }\r\n\r\n    async setContext(task: Task, event: React.ChangeEvent<HTMLSelectElement>) {\r\n        let contextId: string|null = event.target.value;\r\n\r\n        if (contextId === '') {\r\n            contextId = null;\r\n        }\r\n\r\n        task.contextId = contextId;\r\n        await db.tasks.save(task);\r\n        this.props.refreshData();\r\n    }\r\n\r\n    async setProject(task: Task, event: React.ChangeEvent<HTMLSelectElement>) {\r\n        let projectId: string|null = event.target.value;\r\n\r\n        if (projectId === '') {\r\n            projectId = null;\r\n        }\r\n\r\n        task.projectId = projectId;\r\n        await db.tasks.save(task);\r\n        this.props.refreshData();\r\n    }\r\n\r\n    async setDefer(task: Task, event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value: string|null = event.target.value;\r\n\r\n        if (value === '') {\r\n            task.deferredUntil = null;\r\n        } else {\r\n            task.deferredUntil = new Date(value).toISOString();\r\n        }\r\n\r\n        await db.tasks.save(task);\r\n        this.props.refreshData();\r\n    }\r\n\r\n    async onKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\r\n        if (e.key === 'Enter') {\r\n            let task = this.props.data.tasks.find(x => x.id === this.props.id);\r\n\r\n            if (!task) {\r\n                return;\r\n            }\r\n\r\n            if (task.title !== this.state.title) {\r\n                task.title = this.state.title;\r\n                await db.tasks.save(task);\r\n                this.props.refreshData();\r\n            }\r\n        }\r\n    }\r\n\r\n    async setTaskState(state: TaskState) {\r\n        const task = this.props.data.tasks.find(x => x.id === this.props.id);\r\n\r\n        if (!task) {\r\n            return;\r\n        }\r\n\r\n        if (task.state === state) {\r\n            return;\r\n        }\r\n\r\n        task.state = state;\r\n        task.stateChangedAt = new Date().toISOString();\r\n        await db.tasks.save(task);\r\n        this.props.refreshData();\r\n    }\r\n\r\n    render() {\r\n        let task = this.props.data.tasks.find(x => x.id === this.props.id);\r\n\r\n        if (!task) {\r\n            return <div>Task not found.</div>\r\n        }\r\n\r\n        let isDirty = false;\r\n\r\n        if (task.title !== this.state.title) {\r\n            isDirty = true;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <ToolSection>\r\n                    <NavLink to={this.state.source} className=\"button\">Back</NavLink>\r\n                    {/* <NavLink to={`/tasks/${task.id}/edit`} className=\"button\">Edit</NavLink> */}\r\n                </ToolSection>\r\n\r\n                <ToolSection>\r\n                    <div>Task</div>\r\n                    <input type=\"text\" className=\"input is-large is-wide\" style={{border: isDirty ? '2px solid orange' : undefined}} value={this.state.title} onKeyDown={e => this.onKeyDown(e)} onChange={e => this.setState({ title: e.target.value })} />\r\n\r\n                    <div>State</div>\r\n                    <div className={classes(styles.horizontalSpace('.5rem'))}>\r\n                        <div className={classes('button', task.state !== 'active' ? 'inactive' : null)} onClick={() => this.setTaskState('active')}>Active</div>\r\n                        <div className={classes('button', task.state !== 'incubated' ? 'inactive' : null)} onClick={() => this.setTaskState('incubated')}>Incubated</div>\r\n                        <div className={classes('button', task.state !== 'completed' ? 'inactive' : null)} onClick={() => this.setTaskState('completed')}>Completed</div>\r\n                    </div>\r\n\r\n                    <div>Context</div>\r\n                    <select className=\"input is-large\" value={task.contextId || ''} onChange={e => this.setContext(task!, e)}>\r\n                        <option value=\"\">Not set</option>\r\n                        {this.props.data.contexts.map(c => (\r\n                            <option key={c.id} value={c.id}>{c.title}</option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <div>Project</div>\r\n                    <select className=\"input is-large\" value={task.projectId || ''} onChange={e => this.setProject(task!, e)}>\r\n                        <option value=\"\">Not set</option>\r\n                        {this.props.data.projects.filter(p => p.state === ProjectState.Active || p.id === task!.projectId).map(c => (\r\n                            <option key={c.id} value={c.id}>{c.title}</option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <div>Defer</div>\r\n                    <input type=\"date\" className=\"input is-large\" value={(task.deferredUntil && moment(task.deferredUntil).format('YYYY-MM-DD')) || ''} onChange={e => this.setDefer(task!, e)} />\r\n                </ToolSection>\r\n\r\n                <ToolSection>\r\n                    <EmbeddedNoteEdit targetEntity={task} {...this.props} />\r\n                </ToolSection>\r\n            </>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Data } from '../model';\r\nimport { ToolSection } from '../framework/ToolSection';\r\nimport { Project, ProjectState } from '../db/project';\r\nimport { db } from '../db/db';\r\nimport { Loader } from '../components/Loader';\r\nimport { ContextSelector } from '../components/ContextSelector';\r\n\r\nexport class ShowProjectPage extends React.Component<{ data: Data, refreshData: () => void, id: string }, { title: string }> {\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let target = this.props.data.projects.find(x => x.id === this.props.id);\r\n        this.setState({title: target!.title});\r\n    }\r\n\r\n    async setContext(target: Project, contextId: string|null) {\r\n        if (contextId === '') {\r\n            contextId = null;\r\n        }\r\n\r\n        target.contextId = contextId;\r\n        await db.projects.save(target);\r\n        this.props.refreshData();\r\n    }\r\n\r\n    async setProjectState(target: Project, event: React.ChangeEvent<HTMLSelectElement>) {\r\n        let projectState: ProjectState = event.target.value as ProjectState;\r\n\r\n        target.state = projectState;\r\n        await db.projects.save(target);\r\n        this.props.refreshData();\r\n    }\r\n\r\n    async onKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\r\n        if (e.key === 'Enter') {\r\n            let target = this.props.data!.projects.find(x => x.id === this.props.id);\r\n\r\n            if (!target) {\r\n                return;\r\n            }\r\n\r\n            if (target.title !== this.state.title) {\r\n                target.title = this.state.title;\r\n                await db.projects.save(target);\r\n                this.props.refreshData();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.data === null) {\r\n            return <Loader />;\r\n        }\r\n\r\n        let target = this.props.data.projects.find(x => x.id === this.props.id);\r\n\r\n        if (!target) {\r\n            return <div>Project not found.</div>\r\n        }\r\n\r\n        let isDirty = false;\r\n\r\n        if (target.title !== this.state.title) {\r\n            isDirty = true;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <ToolSection>\r\n                    <NavLink to={`/projects`} className=\"button\">Back</NavLink>\r\n                </ToolSection>\r\n\r\n                <ToolSection>\r\n                    <div>Project</div>\r\n                    <input type=\"text\" className=\"input is-large is-wide\" style={{border: isDirty ? '2px solid orange' : undefined}} value={this.state.title} onKeyDown={e => this.onKeyDown(e)} onChange={e => this.setState({ title: e.target.value })} />\r\n                    \r\n                    <div>Context</div>\r\n                    <ContextSelector contextId={target.contextId} onChange={e => this.setContext(target!, e)} data={this.props.data} />\r\n                    <div>State</div>\r\n                    <select className=\"input is-large\" value={target.state || ProjectState.Active} onChange={e => this.setProjectState(target!, e)}>\r\n                        {Object.keys(ProjectState).map(c => (\r\n                            <option key={c} value={c}>{c}</option>\r\n                        ))}\r\n                    </select>\r\n\r\n                </ToolSection>\r\n\r\n            </>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Data } from '../model';\r\nimport { ToolSection } from '../framework/ToolSection';\r\nimport { Context, ContextState } from '../db/context';\r\nimport { db } from '../db/db';\r\n\r\nexport class ShowContextPage extends React.Component<{id: string, data: Data, refreshData(): void }, { title: string }> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let target = this.props.data.contexts.find(x => x.id === this.props.id);\r\n        this.setState({ title: target!.title })\r\n    }\r\n\r\n    async onKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\r\n        if (e.key === 'Enter') {\r\n            const target = this.props.data.contexts.find(x => x.id === this.props.id);\r\n\r\n            if (!target) {\r\n                return;\r\n            }\r\n\r\n            if (target.title !== this.state.title) {\r\n                target.title = this.state.title;\r\n                await db.contexts.save(target);\r\n                this.props.refreshData();\r\n            }\r\n        }\r\n    }\r\n\r\n    async setContext(target: Context, event: React.ChangeEvent<HTMLSelectElement>) {\r\n        let contextId: string|null = event.target.value;\r\n\r\n        if (contextId === '') {\r\n            contextId = null;\r\n        }\r\n\r\n        target.contextId = contextId;\r\n        await db.contexts.save(target);\r\n        this.props.refreshData();\r\n    }\r\n\r\n    async setContextState(target: Context, event: React.ChangeEvent<HTMLSelectElement>) {\r\n        let contextState: ContextState = event.target.value as ContextState;\r\n\r\n        target.state = contextState;\r\n        await db.contexts.save(target);\r\n        this.props.refreshData();\r\n    }\r\n\r\n    render() {\r\n        let target = this.props.data.contexts.find(x => x.id === this.props.id);\r\n\r\n        if (!target) {\r\n            return <div>Context not found.</div>\r\n        }\r\n\r\n        let isDirty = false;\r\n\r\n        if (target.title !== this.state.title) {\r\n            isDirty = true;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <ToolSection>\r\n                    <NavLink to={`/contexts`} className=\"button\">Back</NavLink>\r\n                </ToolSection>\r\n\r\n                <ToolSection>\r\n                    <div>Context</div>\r\n                    <input type=\"text\" className=\"input is-large is-wide\" style={{border: isDirty ? '2px solid orange' : undefined}} value={this.state.title} onKeyDown={e => this.onKeyDown(e)} onChange={e => this.setState({ title: e.target.value })} />\r\n\r\n                    <div>Parent Context</div>\r\n                    <select className=\"input is-large\" value={target.contextId || ''} onChange={e => this.setContext(target!, e)}>\r\n                        <option value=\"\">Not set</option>\r\n                        {this.props.data.contexts.filter(c => c.id !== target!.id).map(c => (\r\n                            <option key={c.id} value={c.id}>{c.title}</option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <div>State</div>\r\n                    <select className=\"input is-large\" value={target.state || ContextState.Active} onChange={e => this.setContextState(target!, e)}>\r\n                        {Object.keys(ContextState).map(c => (\r\n                            <option key={c} value={c}>{c}</option>\r\n                        ))}\r\n                    </select>\r\n                </ToolSection>\r\n            </>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { Data } from '../model';\r\nimport { ToolSection } from '../framework/ToolSection';\r\nimport * as _ from 'lodash';\r\nimport { syncer } from '../db/syncer';\r\nimport { Loader } from '../components/Loader';\r\n\r\ninterface DataPageProps {\r\n    data: Data;\r\n    refreshData(): void;\r\n}\r\n\r\nexport class DataPage extends React.Component<{ render: (props: DataPageProps)=>React.ReactNode }, { data: Data|null, error: string|null }> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            error: null,\r\n            data: null\r\n        };\r\n\r\n        this.refreshData = this.refreshData.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        syncer.registerDataListener(data => this.setState({ data }));\r\n        this.setState({ data: await syncer.getData() }, async () => {\r\n            await syncer.startServerSync();\r\n            await syncer.ensureServerSyncEnqueued();\r\n        });\r\n    }\r\n\r\n    async refreshData() {\r\n        this.setState({ data: await syncer.getData() }, async () => {\r\n            syncer.startServerSync();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return (\r\n                <>\r\n                    <div>{this.state.error}</div>\r\n                    <ToolSection>\r\n                        <div className=\"button\" onClick={() => this.refreshData()}>Retry</div>\r\n                        <div className=\"button\" onClick={() => window.location.reload()}>Reload</div>\r\n                        <div className=\"button\" onClick={() => window.location.reload(true)}>Force Reload</div>\r\n                        <a className=\"button\" href=\"/login\" >Login</a>\r\n                    </ToolSection>\r\n                </>\r\n            );\r\n        }      \r\n        \r\n        if (!this.state.data) {\r\n            return <Loader />;\r\n        }\r\n\r\n        return this.props.render({ data: this.state.data, refreshData: this.refreshData });\r\n    }\r\n}","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {classes} from 'typestyle/lib';\r\nimport * as styles from '../../layout/styles';\r\nimport { useData } from '../../model';\r\nimport { ToolSection } from '../../framework/ToolSection';\r\nimport { Person } from '../../db/person';\r\n\r\nexport const PeoplePage: React.FC<{}> = props => {\r\n    const {data} = useData();\r\n\r\n    const renderTarget = (target: Person) => {\r\n        return (\r\n            <NavLink key={target.id} to={`/people/${target.id}`} className={classes('item', styles.hoverGlow)}>\r\n                <div>\r\n                    {target.name}\r\n                </div>\r\n            </NavLink>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ToolSection>\r\n                <NavLink to={`/people/new`} className=\"button\">New Person</NavLink>\r\n            </ToolSection>\r\n\r\n            <div className=\"list\">\r\n                {data.people.sort((a, b) =>  b.name! < a.name! ?  -1 : b.name! > a.name! ? 1 : 0).map(t => renderTarget(t))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import * as React from 'react';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { ToolSection } from '../../framework/ToolSection';\r\nimport { db } from '../../db/db';\r\nimport { useState } from 'react';\r\nimport { EmbeddedNoteEdit } from '../../components/EmbeddedNote';\r\nimport { useData } from '../../model';\r\n\r\nconst useForm = <T extends {}>(initialState: ()=>T) => {\r\n    const [values, setValues] = useState<T>(initialState);\r\n    \r\n    const handleChange = (event: any) => {\r\n        event.persist();\r\n        setValues((values) => ({ ...values, [event.target.name]: event.target.value }));\r\n    };\r\n\r\n    return {\r\n        values,\r\n        handleChange\r\n    };\r\n};\r\n\r\nexport const EditPersonPage: React.FC<{id?: string }> = (props) => {\r\n    const {data, refreshData} = useData();\r\n    const [goBack, setGoBack] = useState<string|null>(null);\r\n\r\n    const {values, handleChange} = useForm(() => {\r\n        const person = props.id ? data.people.find(x => x.id === props.id) : null;\r\n        return {\r\n            name:  person ? person.name : '',\r\n            birthday: person ? person.birthday : null\r\n        }\r\n    });\r\n\r\n    const onSave = async () => {\r\n        const id = props.id || null;\r\n\r\n        if (id) {\r\n            let person = await db.people.get(id)!;\r\n\r\n            if (person === null) {\r\n                throw 'Person is null?';\r\n            }\r\n\r\n            person.name = values.name;\r\n            person.birthday = values.birthday;\r\n\r\n            await db.people.save(person);\r\n            refreshData();\r\n            setGoBack(person.id);\r\n        } else {\r\n            const person = await db.people.create({\r\n                name: values.name,\r\n                birthday: values.birthday,\r\n                noteId: null,\r\n            });\r\n\r\n            refreshData();\r\n            setGoBack(person.id);\r\n        }\r\n    };\r\n\r\n    const person = props.id ? data.people.find(x => x.id === props.id) || null : null;\r\n\r\n    return (\r\n        <>\r\n            {goBack && <Redirect to={`/people/${goBack}`} />}\r\n            <div style={{height: '100%', display: 'flex', flexDirection: 'column'}} >\r\n                <ToolSection>\r\n                    <NavLink to={`/people`} className=\"button\">Back</NavLink>\r\n                    {props.id && <NavLink to={`/people/${props.id}`} className=\"button\">Show</NavLink>}\r\n                </ToolSection>\r\n                <ToolSection>\r\n                    {props.id === undefined ?\r\n                            <a type=\"button\" className=\"button is-primary\" onClick={onSave}>Add person</a> :\r\n                            <a type=\"button\" className=\"button is-primary\" onClick={onSave}>Update person</a>}\r\n                </ToolSection>\r\n                <ToolSection>\r\n                    <div>Name</div>\r\n                    <input type=\"text\" name=\"name\" className=\"input is-large is-wide\" value={values.name} onChange={handleChange} />\r\n                    <div>Birthday</div>\r\n                    <input type=\"date\" name=\"birthday\" className=\"input is-large\" value={values.birthday || ''} onChange={handleChange} />\r\n                </ToolSection>\r\n                <ToolSection>\r\n                    <EmbeddedNoteEdit targetEntity={person} />\r\n                </ToolSection>\r\n            </div>\r\n        </>\r\n    );\r\n};","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useData } from '../../model';\r\nimport { ToolSection } from '../../framework/ToolSection';\r\nimport moment from 'moment';\r\nimport { EmbeddedNoteShow } from '../../components/EmbeddedNote';\r\n\r\nexport const ShowPersonPage: React.FC<{id: string}> = (props) => {\r\n    const {data} = useData();\r\n    const person = data.people.find(x => x.id === props.id);\r\n\r\n    if (!person) {\r\n        return <div>Person not found.</div>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToolSection>\r\n                <NavLink to={`/people`} className=\"button\">Back</NavLink>\r\n                <NavLink to={`/people/${person.id}/edit`} className=\"button\">Edit</NavLink>\r\n            </ToolSection>\r\n            <div className=\"panel\">\r\n                <div className=\"content\" style={{padding: '1rem'}}>\r\n                    <h1>{person.name}</h1>\r\n                    {person.birthday && <div>Birthday: {moment(person.birthday).format('YYYY-MM-DD')}</div>}\r\n                    <EmbeddedNoteShow targetEntity={person} {...props} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}; ","import * as React from 'react';\r\nimport { ToolSection } from '../framework/ToolSection';\r\nimport { db } from '../db/db';\r\nimport { useData } from '../model';\r\n\r\nexport const StatsPage: React.SFC<{}> = (props) => {\r\n    const {data} = useData();\r\n    const [noteTotalCount, setNoteTotalCount] = React.useState<number|null>(null);\r\n    const [taskTotalCount, setTaskTotalCount] = React.useState<number|null>(null);\r\n    const [peopleTotalCount, setPeopleTotalCount] = React.useState<number|null>(null);\r\n    const [projectTotalCount, setProjectTotalCount] = React.useState<number|null>(null);\r\n    const [contextTotalCount, setContextTotalCount] = React.useState<number|null>(null);\r\n    \r\n    React.useEffect(() => {\r\n        db.notes.getSyncKeys().then(c => setNoteTotalCount(c.length));\r\n        db.tasks.getSyncKeys().then(c => setTaskTotalCount(c.length));\r\n        db.people.getSyncKeys().then(c => setPeopleTotalCount(c.length));\r\n        db.projects.getSyncKeys().then(c => setProjectTotalCount(c.length));\r\n        db.contexts.getSyncKeys().then(c => setContextTotalCount(c.length));\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <ToolSection>\r\n            </ToolSection>\r\n            <div className=\"panel\">\r\n                <div className=\"content\" style={{padding: '1rem'}}>\r\n                    <h1>Stats</h1>\r\n                    <ul>\r\n                        <li>Notes: {data.notes.length}, versions: {noteTotalCount ? noteTotalCount : '...'}</li>\r\n                        <li>Tasks: {data.tasks.length}, versions: {taskTotalCount ? taskTotalCount : '...'}</li>\r\n                        <li>People: {data.people.length}, versions: {peopleTotalCount ? peopleTotalCount : '...'}</li>\r\n                        <li>Projects: {data.projects.length}, versions: {projectTotalCount ? projectTotalCount : '...'}</li>\r\n                        <li>Contexts: {data.contexts.length}, versions: {contextTotalCount ? contextTotalCount : '...'}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}","import * as React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Layout } from './components/Layout';\r\nimport { TaskPage } from './pages/TaskPage';\r\nimport { EditNotePage } from './pages/notes/EditNotePage';\r\nimport { ShowNotePage } from './pages/notes/ShowNotePage';\r\nimport { NotePage } from './pages/notes/NotePage';\r\nimport { PlaygroundPage } from './pages/PlaygroundPage';\r\nimport { ContextPage } from './pages/ContextPage';\r\nimport { ProjectPage } from './pages/ProjectPage';\r\nimport { ShowTaskPage } from './pages/ShowTaskPage';\r\nimport { ShowProjectPage } from './pages/ShowProjectPage';\r\nimport { ShowContextPage } from './pages/ShowContextPage';\r\nimport { DataPage } from './pages/DataPage';\r\nimport { SyncPage } from './pages/SyncPage';\r\nimport { SettingsPage } from './pages/SettingsPage';\r\nimport { PeoplePage } from './pages/people/PeoplePage';\r\nimport { EditPersonPage } from './pages/people/EditPersonPage';\r\nimport { ShowPersonPage } from './pages/people/ShowPersonPage';\r\nimport { StatsPage } from './pages/StatsPage';\r\nimport {DataProvider} from './model';\r\n\r\nexport const routes = <Layout>\r\n    <DataProvider>\r\n        <Switch>\r\n            <Route exact path='/' render={routeProps => <NotePage />} />\r\n            <Route exact path='/notes/new' render={routeProps => <EditNotePage />} />\r\n            <Route exact path='/notes/:id' render={routeProps => <ShowNotePage id={routeProps.match.params.id} />} />\r\n            <Route exact path='/notes/:id/edit' render={routeProps => <EditNotePage id={routeProps.match.params.id} />} />\r\n            <Route exact path='/tasks' render={routeProps => <TaskPage />} />\r\n            <Route exact path='/tasks/:id' render={routeProps => <DataPage render={(props) => <ShowTaskPage {...props} id={routeProps.match.params.id} />} />} />\r\n            <Route exact path='/contexts' render={routeProps => <ContextPage />} />\r\n            <Route exact path='/contexts/:id' render={routeProps => <DataPage render={(props) => <ShowContextPage {...props} id={routeProps.match.params.id} />} />} />\r\n            <Route exact path='/projects' render={routeProps => <DataPage render={(props) => <ProjectPage {...props} />} />} />\r\n            <Route exact path='/projects/:id' render={routeProps => <DataPage render={(props) => <ShowProjectPage {...props} id={routeProps.match.params.id} />} />} />\r\n            <Route exact path='/people' render={routeProps => <PeoplePage />} />} />\r\n            <Route exact path='/people/new' render={routeProps => <EditPersonPage />} />\r\n            <Route exact path='/people/:id' render={routeProps => <ShowPersonPage id={routeProps.match.params.id} />} />\r\n            <Route exact path='/people/:id/edit' render={routeProps => <EditPersonPage id={routeProps.match.params.id} />} />\r\n            <Route path='/playground' component={PlaygroundPage} />\r\n            <Route path='/sync' component={SyncPage} />\r\n            <Route path='/stats' render={routeProps => <StatsPage />} />\r\n            <Route path='/settings' component={SettingsPage} />\r\n        </Switch>\r\n    </DataProvider>\r\n</Layout>;\r\n","import * as React from 'react';\r\nimport { ToolSection } from '../framework/ToolSection';\r\nimport { syncer } from '../db/syncer';\r\nimport '../lib/dropboxApi';\r\nimport * as dropboxApi from '../lib/dropboxApi';\r\n\r\nexport const PlaygroundPage: React.FC<{}> = () => {\r\n    const [dropboxFiles, setDropboxFiles] = React.useState<string[]|null>(null)\r\n\r\n    async function listDropbox() {\r\n        setDropboxFiles([...await dropboxApi.listFiles()]);\r\n    }\r\n\r\n    return (\r\n        <div style={{height: '100%'}}>\r\n            <ToolSection>\r\n                <div className=\"button\" onClick={listDropbox}>List</div>\r\n                <div className=\"button\" onClick={() => dropboxApi.uploadFile('test1', '{ \"name\": \"test\" }')}>Create Test</div>\r\n                <div className=\"button\" onClick={async () => console.log('getFile', await dropboxApi.getFile('test1'))}>Get Test</div>\r\n                <div className=\"button\" onClick={syncer.startDropboxServerSync}>Sync</div>\r\n            </ToolSection>\r\n            {dropboxFiles && dropboxFiles.map(f => <div key={f}>{f}</div>)}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { ToolSection } from '../framework/ToolSection';\r\nimport { syncer, SyncStatus } from '../db/syncer';\r\nimport moment from 'moment';\r\n\r\nexport const SyncPage: React.FC<{}> = props => {\r\n    const [_, setCount] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n        syncer.registerSyncListener(() => {\r\n            setCount(c => c + 1);\r\n        });\r\n    }, []);\r\n   \r\n    return (\r\n        <>\r\n            <ToolSection>\r\n                <div>Status: {SyncStatus[syncer.status]}</div>\r\n                <div className=\"button\" onClick={() => syncer.startServerSync()}>Sync Now</div>\r\n            </ToolSection>\r\n            <div className=\"list\">\r\n                {syncer.getResults().slice(0).reverse().map((result, i) =>\r\n                    <React.Fragment key={i}>\r\n                        <div className=\"item\">{result.endAt.getTime() - result.startAt.getTime()} ms - start: {moment(result.startAt).format('HH:mm:ss')}, end: {moment(result.endAt).format('HH:mm:ss')}, fetch: {result.fetch}, send: {result.send}{result.error ? `, error: ${result.error}` : null}</div>\r\n                    </React.Fragment>)}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport { ToolSection } from '../framework/ToolSection';\r\nimport * as _ from 'lodash';\r\nimport { db } from '../db/db';\r\nimport Api from \"../Api\";\r\nimport { getCurrentKey, generateRsaKey, importLifeKey, encryptAndWrap, LifeKey } from '../db/crypt';\r\nimport * as dropboxApi from '../lib/dropboxApi';\r\n\r\nexport const SettingsPage: React.FC<{}> = () => {\r\n    const [pushSubscribed, setPushSubscribed] = React.useState<boolean|null>(null);\r\n    const [currentKey, setCurrentKey] = React.useState<LifeKey|null>(null);\r\n    const [swState, setSwState] = React.useState<string>('no-update');\r\n    const [generatedKey, setGeneratedKey] = React.useState<string|null>(null);\r\n    const [privateKey, setPrivateKey] = React.useState<string|null>(null);\r\n\r\n    async function clearEntities() {\r\n        if(!window.confirm('Clear all local data?')) {\r\n            return;\r\n        }\r\n\r\n        db.contexts.dropInstance();\r\n        db.tasks.dropInstance();\r\n        db.notes.dropInstance();\r\n        db.projects.dropInstance();\r\n        db.people.dropInstance();\r\n    }\r\n\r\n    const [dropboxConnected, setDropboxConnected] = React.useState<boolean|null>(null);\r\n    React.useEffect(() => {\r\n        dropboxApi.isSignedIn().then(status => {\r\n            setDropboxConnected(status);\r\n        });\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        async function componentDidMount() {\r\n            navigator.serviceWorker.ready.then(async (registration) => {\r\n                const subscription = await registration.pushManager.getSubscription();\r\n                setPushSubscribed(!!subscription);\r\n            });\r\n    \r\n            navigator.serviceWorker.ready.then(registration => {\r\n                registration.addEventListener('updatefound', () => {\r\n                    const installingWorker = registration.installing;\r\n                    if (!installingWorker) {\r\n                        setSwState('not-installing');\r\n                        return;\r\n                    }\r\n    \r\n                    installingWorker.addEventListener('statechange', () => {\r\n                        if (installingWorker.state === 'installed') {\r\n                            if (navigator.serviceWorker.controller) {\r\n                                console.log('New content is available; please refresh.');\r\n                                setSwState('content-ready');\r\n                            } else {\r\n                                console.log('Content is cached for offline use.');\r\n                                setSwState('cached');\r\n                            }\r\n                        } else {\r\n                            setSwState('state-not-installed');\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n    \r\n            await refreshKeys();\r\n        }\r\n        componentDidMount() \r\n    }, [])\r\n\r\n    async function refreshKeys() {\r\n        try {\r\n            const newCurrentKey = await getCurrentKey();\r\n            setCurrentKey(newCurrentKey)\r\n        } catch(err) {\r\n\r\n        }\r\n    }\r\n\r\n    function unsubscribePush() {\r\n        navigator.serviceWorker.ready.then(async (registration) => {\r\n            const subscription = await registration.pushManager.getSubscription();\r\n            if (subscription) {\r\n                await subscription.unsubscribe();\r\n                setPushSubscribed(!!(await registration.pushManager.getSubscription()));\r\n            }\r\n        });\r\n    }\r\n\r\n    function subscribePush() {\r\n        navigator.serviceWorker.ready.then(async (registration) => {\r\n            try {\r\n                const options = {\r\n                    applicationServerKey: 'BEl6vcKrENjrQk-LikFlZ5hy6VuVgSUUZ2uCYOQsuYjMP_WbigIOfDITEkF6JhEbd9MVw9RKiMODYxmpONuYsqY',\r\n                    userVisibleOnly: true\r\n                };\r\n                const subscription = await registration.pushManager.subscribe(options);\r\n                console.log(JSON.stringify(subscription))\r\n                setPushSubscribed(!!subscription);\r\n                Api.testPush(subscription);\r\n            } catch (err) {\r\n                console.log('Error', err)\r\n            }\r\n        });\r\n    }\r\n\r\n    function clearServiceWorker() {\r\n        navigator.serviceWorker.ready.then(async (registration) => {\r\n            await registration.update();\r\n        });\r\n    }\r\n\r\n    function unregisterServiceWorker() {\r\n        navigator.serviceWorker.ready.then(async (registration) => {\r\n            await registration.unregister();\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToolSection>\r\n                <div className=\"button\" onClick={() => window.location.reload()}>Reload</div>\r\n                <div className=\"button\" onClick={() => window.location.reload(true)}>Force Reload</div>\r\n                <a className=\"button\" href=\"/login\" >Login</a>\r\n            </ToolSection>\r\n            <ToolSection>\r\n                <div className=\"button\" onClick={async () => { await dropboxApi.signIn(); setDropboxConnected(await dropboxApi.isSignedIn()) }}>Connect Dropbox</div>\r\n                {/* <div className=\"button\" onClick={async () => { await signOut(); setDropboxConnected(await isLoggedIn()) }}>Disconnect Google Drive</div> */}\r\n                <div style={{display: 'inline-block', background: '#222', padding: '.5rem'}}>Status: {dropboxConnected === null ? 'unknown' : dropboxConnected ? 'connected' : 'not connected'}</div>\r\n                {dropboxApi.isLocalMode && <div style={{display: 'inline-block', background: '#222', padding: '.5rem'}}>Local [ {window.location.host} ]</div>}\r\n            </ToolSection>\r\n            <ToolSection>\r\n                <div className=\"button\" onClick={async () => await clearEntities()}>Clear Entities</div>\r\n                <div className=\"button\" onClick={() => clearServiceWorker()}>Update SW</div>\r\n                <div className=\"button\" onClick={() => unregisterServiceWorker()}>Unregister SW</div>\r\n                <div>ServiceWorker state: {swState}</div>\r\n            </ToolSection>\r\n            <ToolSection>\r\n                {pushSubscribed === true && <div className=\"button\" onClick={async () => await unsubscribePush()}>Unsubscribe Push</div>}\r\n                {pushSubscribed === false && <div className=\"button\" onClick={async () => await subscribePush()}>Subscribe Push</div>}\r\n            </ToolSection>\r\n            <ToolSection>\r\n                <h2>Encryption</h2>\r\n                {!currentKey && (\r\n                    <>\r\n                        <div>\r\n                            <textarea style={{width: '100%'}} onChange={e => setPrivateKey(e.target.value)} />\r\n                        </div>\r\n                        <a className=\"button\" onClick={async () => { await importLifeKey(privateKey!); await refreshKeys(); }}>Set private key</a>\r\n                        <h4>Generate key</h4>\r\n                        <div className=\"button\" onClick={async () => setGeneratedKey((await generateRsaKey()).privateKey)}>Generate</div>\r\n                        <textarea style={{width: '100%', background: '#555', color: '#ddd'}} readOnly value={generatedKey || ''} />\r\n                    </>\r\n                )}\r\n                <h4>Keys</h4>\r\n                <div className=\"list\">\r\n                    {!currentKey && <div>No keys</div>}\r\n                    {currentKey && (\r\n                        <div className=\"item\">\r\n                            {currentKey.fingerprint}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </ToolSection>\r\n            <ToolSection>\r\n            </ToolSection>\r\n        </>\r\n    );\r\n}","window.addEventListener('load', function() {\r\n    navigator.serviceWorker.register('/sw.js').then(async (registration) => {\r\n        if (typeof(registration.update) == 'function') {\r\n            registration.update();\r\n        }\r\n    });\r\n});\r\n\r\nexport {};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { routes } from './routes';\r\nimport './service-worker-lifecycle';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter children={ routes } />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}