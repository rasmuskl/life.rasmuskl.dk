{"version":3,"sources":["components/Layout.scss","serviceWorker.ts","components/ServiceWorkerInstall.tsx","layout/styles.ts","db/crypt.ts","db/EventListener.ts","db/db.ts","components/Loader.tsx","model.tsx","lib/dropboxApi.ts","db/syncer.ts","components/Layout.tsx","db/project.ts","framework/ToolSection.tsx","lib/contextActions.ts","db/context.ts","lib/UseQueryState.ts","components/SettingsCompactor.tsx","components/ContextTag.tsx","components/ContextBar.tsx","pages/TaskPage.tsx","draftStorage.ts","components/TagInput.tsx","db/note.ts","db/person.ts","components/MarkedViewer.tsx","components/SimpleSplitEditor.tsx","components/TreeEditor.tsx","components/ContextSelector.tsx","components/NoteEditor.tsx","pages/notes/EditNotePage.tsx","components/TreeViewer.tsx","components/ReferenceViewer.tsx","pages/notes/ShowNotePage.tsx","framework/List.tsx","pages/notes/NotePage.tsx","pages/ContextPage.tsx","pages/ProjectPage.tsx","components/EmbeddedNote.tsx","pages/ShowTaskPage.tsx","pages/ShowProjectPage.tsx","pages/ShowContextPage.tsx","pages/DataPage.tsx","pages/people/PeoplePage.tsx","pages/people/EditPersonPage.tsx","pages/people/ShowPersonPage.tsx","pages/StatsPage.tsx","pages/notes/DailyNotes.tsx","routes.tsx","pages/PlaygroundPage.tsx","pages/SyncPage.tsx","pages/SettingsPage.tsx","index.tsx"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","config","a","navigator","URL","process","href","origin","addEventListener","swUrl","checkValidServiceWorker","serviceWorker","ready","console","log","registerValidSW","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","fetch","headers","response","contentType","get","status","indexOf","unregister","reload","ServiceWorkerInstall","props","installEvent","e","preventDefault","setState","this","prompt","userChoice","then","choiceResult","outcome","className","onClick","onInstallClick","React","hoverGlow","css","background","cursorPointer","cursor","display","alignItems","horizontalSpace","width","around","paddingLeft","undefined","paddingRight","marginLeft","marginRight","verticalSpace","height","paddingTop","paddingBottom","marginBottom","lifeKeyStore","createInstance","name","privateKeyStore","rsaSettings","modulusLength","publicExponent","Uint8Array","hash","aesSettings","length","generateRsaKey","crypto","subtle","generateKey","keyPair","exportKey","privateKey","rawPrivateKey","privateKeyBase64","arrayBufferToBase64","publicKey","rawPublicKey","publicKeyBase64","publicKeyFingerprint","md5","fingerprint","error","message","derivePublicRsaKey","jwk","d","dp","dq","q","qi","key_ops","importKey","importLifeKey","importedPrivateKey","base64ToArrayBuffer","extractablePrivateKey","setItem","lifeKey","createdAt","Date","toISOString","encryptAndWrap","data","getItem","Error","importedPublicKeyBuffer","generateAesKey","aesKey","iv","getRandomValues","encrypt","strToArrayBuffer","encryptedData","encryptedDataBase64","wrapKey","wrappedAesKey","wrappedAesKeyBase64","ivBase64","result","payload","key","unwrapAndDecrypt","wrappedKeyBase64","dataBase64","unwrapKey","decrypt","unencryptedDataBuffer","arrayBufferToString","getCurrentKey","keys","buffer","binary","bytes","len","byteLength","i","String","fromCharCode","btoa","base64","binary_string","atob","charCodeAt","str","buf","ArrayBuffer","bufView","Uint16Array","strLen","apply","EventListener","listeners","listener","push","filter","x","arg","LocalForageStore","type","store","changeListener","entityProps","now","entity","id","uuid","versionId","parentVersionIds","updatedAt","getKey","trigger","parentVersionId1","getLeafNodes","leafNodes","warn","map","node","_","getKeysPrefixed","prefix","k","startsWith","split","objs","parts","parentVersionId2","groups","o","leafNodeArrays","Object","group","parents","leafObjs","dropInstance","join","replace","c","r","Math","random","toString","contexts","tasks","notes","projects","people","getSyncKeys","getBySyncKey","syncKey","entities","import","serverEntities","serverEntity","encryption","JSON","parse","unencryptedData","syncKeys","entityData","stringify","encryptionResult","encryptionJson","db","importEntites","importServerEntites","exportServerEntities","Loader","style","justifyContent","border","padding","Data","DataContext","createContext","refreshData","DataProvider","useState","setData","useEffect","syncer","registerDataListener","getData","startServerSync","ensureServerSyncEnqueued","init","value","useCallback","Provider","children","useData","useContext","isLocalMode","host","clientId","signIn","dropbox","Dropbox","assign","getAuthenticationUrl","isSignedIn","getStateSnapshot","snapshot","files","Set","setStateSnapshot","removeItem","listFiles","useSnapshot","getAccessToken","accessToken","hasMore","filesListFolderContinue","fileListResult","results","entries","path_lower","substring","p","file","add","has_more","filesListFolder","path","recursive","getAccessTokenFromUrl","ret","trim","forEach","param","shift","val","decodeURIComponent","retVal","Array","isArray","parseAuthFromHash","access_token","uploadFile","contents","filesUpload","getFile","filesDownload","Promise","resolve","blob","fileBlob","reader","FileReader","json","readAsText","tryStoreAccessKey","SyncStatus","Idle","intervalHandle","syncListener","dataListener","note","concat","task","context","project","person","loadData","setInterval","difference","setA","setB","_difference","delete","Syncing","dropboxApi","startAt","toSend","toFetch","limit","pLimit","promises","all","endAt","size","send","Failed","getAll","orderBy","isMobile","matchMedia","matches","ProjectState","Layout","sidebar","setSidebar","count","setCount","onNavClick","registerSyncListener","overflow","cx","styles","to","exact","activeClassName","overflowY","overflowX","ToolSection","verticalAround","getNestedContexts","grouped","contextId","taskCounts","topContexts","nestedContexts","getFilteredContextIds","contextIds","queue","next","pop","nested","ContextState","useQueryState","initialValue","queryParam","URLSearchParams","search","rawValue","setRawValue","urlParams","set","queryString","history","replaceState","pathname","dispatchEvent","CustomEvent","useQueryStateT","convertTo","convertFrom","strValue","SettingsCompactor","expanded","setExpanded","alwaysVisible","wideStyle","mobileOnly","flexDirection","ContextTag","find","title","ContextBar","ContextActions","borderRight","onChange","renderListContext","depth","Inactive","showTaskCount","color","perspectives","groupedProject","groupedContext","defaultPerspective","TaskPage","text","setText","showCompleted","showDeferred","showIncubated","showContextBar","includeNested","options","setOptions","setContextId","projectId","setProjectId","perspectiveId","setPerspectiveId","onKeyPress","create","content","stateChangedAt","noteId","onCompleteChange","save","renderProject","renderDeferred","deferredUntil","moment","format","fromNow","renderNote","renderTitle","pattern","stopPropagation","target","rel","filterTasks","complete","t","incubatedProjectIds","Incubated","sort","b","renderTask","skipProjectContext","source","encodeURIComponent","checked","textDecoration","perspective","taskBlock","filteredContextIds","stateOrder","Active","Completed","Dropped","emptyActiveProjects","filteredProjects","projectTasks","noProjectTasks","htmlFor","placeholder","draftStore","getDraftKey","getDraft","clearDraft","TagInput","focus","setFocus","timeoutId","tagInput","onFocus","clearTimeout","current","onBlur","setTimeout","tagState","selectedTags","ref","withText","onTextChange","onKeyDown","decrementIndex","incrementIndex","addSelectedTag","addText","reopenLastTag","getFilteredAvailableTags","slice","index","tag","addTag","TagState","availableTags","max","min","lastTag","toLowerCase","Tag","TagList","tags","getNoteTitle","dailyDate","parsedTitle","exec","noteReferenceRegex","escapeRegExp","getNoteReferenceMatchRegExp","reference","RegExp","getNoteAliasReferenceMatchRegExp","alias","extractReferences","matchAll","extractAllReferences","existing","n","references","has","existingResult","values","mentionRegex","getAlias","SplitMode","MarkedViewer","useHistory","lifeNavigate","url","markdown","group1","matchContextId","matchTitle","prefixContext","contextTitle","test","referenceRegExp","html","marked","dangerouslySetInnerHTML","__html","NoteModeSelector","mode","onModeChange","SplitModeSelector","Split","Editor","Preview","SimpleSplitEditor","expand","zIndex","maxHeight","components","textAreaStyle","flexGrow","minWidth","borderTop","markedStyle","fontSize","onTextChanged","theme","showGutter","showPrintMargin","wrapEnabled","enableBasicAutocompletion","snippetCompleter","textCompleter","keyWordCompleter","enableLiveAutocompletion","enableSnippets","TreeEditor","invalid","nodes","setNodes","inputRef","useRef","active","setActive","noteTitles","setNoteTitles","noteCompletions","flat","peopleAliases","setPeopleAliases","aliases","onInputChanged","getParentNode","targetNode","searchNodes","parentNode","childResult","preorderTraversal","stack","reverse","childNode","removeNodeIfEmpty","nodeIndex","findIndex","splice","removeNode","indentNode","unindentNode","parentParentNode","targetNodes","parentNodeIndex","commands","bindKey","win","mac","above","editor","getCursorPosition","row","column","newNode","afterNode","insertNode","activeIndex","completions","getCompletions","session","pos","callback","token","getTokenAt","hasPrefix","caption","snippet","meta","requiredPrefix","position","bottom","left","right","insert","renderNode","level","isActive","letterSpacing","lineHeight","highlightActiveLine","maxLines","Infinity","borderLeft","ContextSelector","activeContexts","inactiveContexts","disabled","NoteEditor","loaded","splitMode","noteMode","bind","onSave","draftStorage","draft","withAvailableTags","withSelectedTags","getTags","noteFor","onNoteAdded","flex","onTitleChanged","s","EditNotePage","goBack","setGoBack","TreeViewer","setInvalid","referenceTitle","personAlias","extra","repeat","ReferenceViewer","contextNotes","fontWeight","marginTop","PersonReferenceViewer","matchingNotes","ShowNotePage","viewer","ShowVirtualNotePage","List","items","renderItem","NotePage","filterTags","setFilterTags","showTagsBar","setShowTagsBar","searchResult","setSearchResult","searchIndex","setSearchIndex","showNotesFor","setShowNotesFor","draftIds","setDraftIds","showNoContext","setShowNoContext","virtualReferences","setVirtualReferences","refs","debouncedSearch","debounce","score","idx","lunr","field","tagCounts","notesOutput","isRef","virtualReferencesOutput","v","output","toggleTag","ContextPage","renderTarget","ProjectPage","EmbeddedNoteEdit","targetEntity","addNode","EmbeddedNoteShow","ShowTaskPage","event","isDirty","setTaskState","setContext","setProject","setDefer","ShowProjectPage","projectState","setProjectState","ShowContextPage","contextState","setContextState","DataPage","render","PeoplePage","localeCompare","EditPersonPage","initialState","setValues","handleChange","persist","useForm","birthday","ShowPersonPage","StatsPage","noteTotalCount","setNoteTotalCount","taskTotalCount","setTaskTotalCount","peopleTotalCount","setPeopleTotalCount","projectTotalCount","setProjectTotalCount","contextTotalCount","setContextTotalCount","DailyNotePage","oneWeekAgo","filteredContexts","dailyNotes","routes","routeProps","params","component","Fragment","getResults","getTime","pushSubscribed","setPushSubscribed","currentKey","setCurrentKey","swState","setSwState","generatedKey","setGeneratedKey","setPrivateKey","clearEntities","confirm","dropboxConnected","setDropboxConnected","refreshKeys","newCurrentKey","pushManager","getSubscription","subscription","componentDidMount","update","unsubscribe","applicationServerKey","userVisibleOnly","subscribe","readOnly","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21e7da11.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"#078263\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' || window.location.hostname === '[::1]' || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport async function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        \n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        \n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n        \n        window.addEventListener('load', async () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n            \n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n                \n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                await navigator.serviceWorker.ready;\n                console.log('This web app is being served cache-first by a service worker.'\n                );\n            } else {\n                // Is not localhost. Just register service worker\n                await registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nasync function registerValidSW(swUrl: string, config?: Config) {\n    const registration = await navigator.serviceWorker.register(swUrl);\n    \n    registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        \n        if (installingWorker == null) {\n            return;\n        }\n        \n        installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                    // At this point, the updated precached content has been fetched,\n                    // but the previous service worker will still serve the older\n                    // content until all client tabs are closed.\n                    console.log('New content is available and will be used when all tabs for this page are closed.');\n                    \n                    // Execute callback\n                    if (config && config.onUpdate) {\n                        config.onUpdate(registration);\n                    }\n                } else {\n                    // At this point, everything has been precached.\n                    // It's the perfect time to display a\n                    // \"Content is cached for offline use.\" message.\n                    console.log('Content is cached for offline use.');\n                    \n                    // Execute callback\n                    if (config && config.onSuccess) {\n                        config.onSuccess(registration);\n                    }\n                }\n            }\n        };\n    };\n}\n\nasync function checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    const response = await fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' }\n    });\n    \n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        const registration = await navigator.serviceWorker.ready;\n        await registration.unregister()\n        window.location.reload();\n    } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n    }\n}\n\nexport async function unregister() {\n    if ('serviceWorker' in navigator) {\n        const registration = await navigator.serviceWorker.ready;\n        registration.unregister();\n    }\n}\n","import * as React from 'react';\n\nexport class ServiceWorkerInstall extends React.Component<{ }, { installEvent: any }> {\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            installEvent: null\n        };\n    }\n\n    componentDidMount() {\n        window.addEventListener('beforeinstallprompt', (e: any) => {\n            // Prevent Chrome 67 and earlier from automatically showing the prompt\n            e.preventDefault();\n            this.setState({ installEvent: e });\n        });\n    }\n\n    onInstallClick() {\n        if (this.state.installEvent === null) {\n            return;\n        }\n        \n        this.state.installEvent.prompt();\n    \n        // Wait for the user to respond to the prompt\n        this.state.installEvent.userChoice.then((choiceResult: any) => {\n            if (choiceResult.outcome === 'accepted') {\n                console.log('User accepted the A2HS prompt');\n            } else {\n                console.log('User dismissed the A2HS prompt');\n            }\n        });\n    }\n\n    render() {\n        if (!this.state.installEvent) {\n            return null;\n        }\n\n        return (\n            <div className=\"button\" onClick={() => this.onInstallClick()}>Install app</div>\n        );\n    }\n}","import {css} from 'emotion';\n\nexport const hoverGlow = css({\n    '&': {\n        '&:hover': {\n            background: '#3f3f3f'\n        }\n    }\n});\n\nexport const cursorPointer = css({\n    cursor: 'pointer'\n});\n\nexport const verticalCenter = css({\n    display: 'flex',\n    alignItems: 'center'\n});\n\nexport function horizontalSpace(width = '.3rem', around = false) {\n    return css({\n        paddingLeft: around ? width : undefined,\n        paddingRight: around ? width : undefined,\n        '&': {\n            '& > *:first-child': {\n                marginLeft: 0\n            },\n            '& > *': {\n                marginRight: width\n            },\n            '& > *:last-child': {\n                marginRight: 0\n            }\n        }\n    });\n}\n\nexport function verticalSpace(height = '.3rem', around = false) {\n    return css({\n        paddingTop: around ? height : undefined,\n        paddingBottom: around ? height : undefined,\n        '&': {\n            '& > *': {\n                marginBottom: height\n            },\n            '& > *:last-child': {\n                marginBottom: 0\n            }\n        }\n    });\n}","import {createInstance} from 'localforage';\nimport * as md5 from 'js-md5';\n\nconst lifeKeyStore = createInstance({ name: 'lifekeystore' });\nconst privateKeyStore = createInstance({ name: 'privatekeystore' });\n\nexport interface LifeKey {\n    fingerprint: string;\n    publicKey: string;\n    createdAt: string;\n}\n\nconst rsaSettings = {\n    name: \"RSA-OAEP\",\n    modulusLength: 2048,\n    publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n    hash: {name: \"SHA-256\"},\n};\n\nconst aesSettings = { name: 'AES-GCM', length: 256 };\n\nexport async function generateRsaKey() {\n    try {\n        const keyPair = await crypto.subtle.generateKey(\n            rsaSettings,\n            true,\n            ['encrypt', 'decrypt']\n        );\n\n        const rawPrivateKey = await crypto.subtle.exportKey('pkcs8', keyPair.privateKey);\n        const privateKeyBase64 = arrayBufferToBase64(rawPrivateKey);\n\n        const rawPublicKey = await crypto.subtle.exportKey('spki', keyPair.publicKey);\n        const publicKeyBase64 = arrayBufferToBase64(rawPublicKey);\n        const publicKeyFingerprint = md5.hex(rawPublicKey);\n\n        return { fingerprint: publicKeyFingerprint, privateKey: privateKeyBase64, publicKey: publicKeyBase64 };\n    } catch (error) {\n        console.error('generateKey', error, error.message)\n        throw error;\n    }\n}\n\nexport async function derivePublicRsaKey(privateKey: CryptoKey) {\n    const jwk = await crypto.subtle.exportKey(\"jwk\", privateKey);\n\n    delete jwk.d;\n    delete jwk.dp;\n    delete jwk.dq;\n    delete jwk.q;\n    delete jwk.qi;\n    jwk.key_ops = [\"encrypt\", \"wrapKey\"];\n    \n    const publicKey = await crypto.subtle.importKey(\"jwk\", jwk, rsaSettings, true, [\"encrypt\", \"wrapKey\"]);\n    return publicKey;\n}\n\nexport async function importLifeKey(privateKeyBase64: string) {\n    const importedPrivateKey = base64ToArrayBuffer(privateKeyBase64);\n    const extractablePrivateKey = await crypto.subtle.importKey('pkcs8', importedPrivateKey, rsaSettings, true, ['decrypt', 'unwrapKey']);\n    \n    const publicKey = await derivePublicRsaKey(extractablePrivateKey);\n    const rawPublicKey = await crypto.subtle.exportKey('spki', publicKey);\n    const publicKeyBase64 = arrayBufferToBase64(rawPublicKey);\n    const publicKeyFingerprint = md5.hex(rawPublicKey);\n\n    const privateKey = await crypto.subtle.importKey('pkcs8', importedPrivateKey, rsaSettings, false, ['decrypt', 'unwrapKey']);\n    privateKeyStore.setItem(publicKeyFingerprint, privateKey);\n\n    const lifeKey: LifeKey = {\n        fingerprint: publicKeyFingerprint,\n        publicKey: publicKeyBase64,\n        createdAt: new Date().toISOString(),\n    };\n\n    lifeKeyStore.setItem(lifeKey.fingerprint, lifeKey);\n}\n\nexport async function encryptAndWrap(fingerprint: string, data: string) {\n    try {\n        const lifeKey = await lifeKeyStore.getItem(fingerprint) as LifeKey;\n        if (!lifeKey) {\n            throw new Error(`Key with fingerprint ${fingerprint} not found`);\n        }        \n        const importedPublicKeyBuffer = base64ToArrayBuffer(lifeKey.publicKey);\n        const publicKey = await crypto.subtle.importKey('spki', importedPublicKeyBuffer, rsaSettings, true, ['encrypt', 'wrapKey']);\n    \n        const aesKey = await generateAesKey();\n        const iv = crypto.getRandomValues(new Uint8Array(12));\n    \n        const encryptedData = await crypto.subtle.encrypt({ \n            name: 'AES-GCM', \n            length: 256,\n            iv\n        }, aesKey, strToArrayBuffer(data));\n    \n        const encryptedDataBase64 = arrayBufferToBase64(encryptedData);\n    \n        const wrappedAesKey = await crypto.subtle.wrapKey('raw', aesKey, publicKey, rsaSettings);\n        const wrappedAesKeyBase64 = arrayBufferToBase64(wrappedAesKey);\n    \n        const ivBase64 = arrayBufferToBase64(iv);\n    \n        const result = {\n            payload: encryptedDataBase64,\n            key: wrappedAesKeyBase64,\n            fingerprint: fingerprint,\n            iv: ivBase64\n        };\n    \n        return result;\n    } catch (error) {\n        console.error('encryptAndWrap', error, error.message)\n        throw error;\n    }\n}\n\nexport async function unwrapAndDecrypt(fingerprint: string, wrappedKeyBase64: string, dataBase64: string, ivBase64: string) {\n    try {\n        const privateKey = await privateKeyStore.getItem(fingerprint) as CryptoKey;\n        if (!privateKey) {\n            throw new Error(`Key with fingerprint ${fingerprint} not found`);\n        }\n\n        const aesKey = await crypto.subtle.unwrapKey('raw', base64ToArrayBuffer(wrappedKeyBase64), privateKey, rsaSettings, aesSettings, false, ['decrypt'])\n        const unencryptedDataBuffer = await crypto.subtle.decrypt({ \n            name: 'AES-GCM', \n            length: 256,\n            iv: base64ToArrayBuffer(ivBase64)\n        }, aesKey, base64ToArrayBuffer(dataBase64));\n        return arrayBufferToString(unencryptedDataBuffer);\n    } catch (error) {\n        console.error('unwrapAndDecrypt', error, error.message)\n        throw error;\n    }\n}\n\nexport async function generateAesKey(): Promise<any> {\n    try {\n        const key = await crypto.subtle.generateKey(aesSettings, true, ['encrypt', 'decrypt']);\n        return key;\n    } catch (error) {\n        console.error('generateKey', error, error.message)\n        throw error;\n    }\n}\n\nexport async function getCurrentKey() {\n    const keys = await lifeKeyStore.keys();\n\n    if (keys.length === 0) {\n        throw new Error('No key found');\n    }\n\n    if (keys.length > 1) {\n        throw new Error('More than 1 key found!');\n    }\n\n    return (await lifeKeyStore.getItem(keys[0])) as LifeKey;\n}\n\n\nfunction arrayBufferToBase64( buffer: ArrayBuffer ) {\n    var binary = '';\n    var bytes = new Uint8Array(buffer);\n    var len = bytes.byteLength;\n    for (var i = 0; i < len; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa( binary );\n}\n\nfunction base64ToArrayBuffer(base64: string) {\n    var binary_string =  window.atob(base64);\n    var len = binary_string.length;\n    var bytes = new Uint8Array(len);\n    for (var i = 0; i < len; i++)        {\n        bytes[i] = binary_string.charCodeAt(i);\n    }\n    return bytes.buffer;\n}\n\n// function webSafe64(base64: string) {\n//     return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n// }\n\n// // Convert from web-safe to normal, add trailing \"=\"s\n// function normal64(base64: string) {\n//     return base64.replace(/\\-/g, '+').replace(/_/g, '/') + '=='.substring(0, (3*base64.length)%4);\n// }\n\nfunction strToArrayBuffer(str: string) {\n    var buf = new ArrayBuffer(str.length * 2);\n    var bufView = new Uint16Array(buf);\n    for (var i = 0, strLen = str.length; i < strLen; i++) {\n      bufView[i] = str.charCodeAt(i);\n    }\n    return buf;\n}\n\nfunction arrayBufferToString(buf: ArrayBuffer) {\n    return String.fromCharCode.apply(null, new Uint16Array(buf) as any);\n}","export class EventListener<T> {\n    listeners: ((arg: T) => void)[] = [];\n\n    register(listener: (arg: T) => void) {\n        this.listeners.push(listener);\n        return () =>  {\n            this.listeners = this.listeners.filter(x => x !== listener);\n        };\n    }\n\n    trigger(arg: T) {\n        for(const listener of this.listeners) {\n            listener(arg);\n        }\n    }\n}","import {createInstance} from 'localforage';\nimport {Context} from './context';\nimport { Project } from './project';\nimport { Task } from './task';\nimport { Note } from './note';\nimport * as _ from 'lodash';\nimport { Person } from './person';\nimport { unwrapAndDecrypt, encryptAndWrap, getCurrentKey } from './crypt';\nimport { EventListener } from './EventListener';\n\ninterface Store<T extends Entity> {\n    getAll(): Promise<T[]>;\n    get(id: string, revision?: string): Promise<T|null>;\n    save(entity: T): void;\n}\n\nexport type EntityType = 'note' | 'task' | 'project' | 'context' | 'person';\n\nexport interface Entity {\n    id: string;\n    versionId: string;\n    parentVersionId1: string|null;\n    parentVersionId2: string|null;\n    type: EntityType;\n    createdAt: string;\n    updatedAt: string;\n    deferredUntil: string|null;\n}\n\n// type EntityProperty = keyof Entity;\n\n// const sampleEntity: Entity = {\n//     id: 'test',\n//     versionId: 'test',\n//     parentVersionId1: null,\n//     parentVersionId2: null,\n//     type: 'task',\n//     createdAt: 'now',\n//     updatedAt: 'now',\n//     deferredUntil: null\n// };\n\n// const entityProperties: EntityProperty[] = Object.keys(sampleEntity) as EntityProperty[];\n\nexport interface ServerEntity {\n    id: string;\n    versionId: string;\n    data: string;\n    encryption: string;\n    parentVersionId1: string|null;\n    parentVersionId2: string|null;\n    type: EntityType;\n    createdAt: string;\n    updatedAt: string;\n}\n\nexport interface ServerEntityEncryption {\n    key: string;\n    fingerprint: string;\n    iv: string;\n}\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>\n\nclass LocalForageStore<T extends Entity> implements Store<T> {\n    store: LocalForage;\n    type: EntityType;\n    changeListener: EventListener<T>;\n\n    constructor(type: EntityType) {\n        this.type = type;\n        this.store = createInstance({\n            name: `store-${type}`\n        });\n        this.changeListener = new EventListener<T>();\n    }\n\n    async create(entityProps: Omit<T, keyof Entity>): Promise<T> {\n        const now = new Date().toISOString();\n        let entity = {\n            id: this.uuid(),\n            versionId: this.uuid(),\n            type: this.type,\n            parentVersionIds: [] as string[],\n            createdAt: now,\n            updatedAt: now,\n            ...entityProps as any,\n        } as T;\n        await this.store.setItem(this.getKey(entity), entity);\n        this.changeListener && this.changeListener.trigger(entity);\n        return entity;\n    }\n\n    save(entity: T): void {\n        if (!entity.id) {\n            entity.id = this.uuid();\n        }\n\n        if (entity.type !== this.type) {\n            throw new Error(`Invalid type: ${entity.type} - expected ${this.type}`);\n        }\n\n        const now = new Date().toISOString();\n\n        if (!entity.createdAt) {\n            entity.createdAt = now;\n        }\n\n        entity.updatedAt = now;\n\n        if(entity.versionId) {\n            entity.parentVersionId1 = entity.versionId;\n        }\n\n        entity.versionId = this.uuid();\n        this.store.setItem(this.getKey(entity), entity);\n        this.changeListener && this.changeListener.trigger(entity);\n    }\n\n    import(entity: T) {\n        if (entity.type !== this.type) {\n            throw new Error(`Invalid type ${entity.type} - expected ${this.type}`);\n        }\n\n        this.store.setItem(this.getKey(entity), entity);\n        this.changeListener && this.changeListener.trigger(entity);\n    }\n\n    async get(id: string, versionId?: string): Promise<T|null> {\n        if (versionId === undefined) {\n            const leafNodes = await this.getLeafNodes(`${id}/`);\n\n            if (leafNodes.length > 1) {\n                console.warn(`Found ${leafNodes.length} leaf nodes for entity ${this.type}/${id} - expected 1: ${leafNodes.map(x => x.versionId)}`);\n\n                for(const node of leafNodes) {\n                    console.log('leaf node', node);\n                }\n                \n                // throw `Found ${leafNodes.length} leaf nodes for entity ${this.type}/${id} - expected 1: ${leafNodes.map(x => x.versionId)}`;\n                return _.orderBy(leafNodes, x => x.updatedAt, 'desc')[0];\n            }\n\n            if (leafNodes.length === 0) {\n                return null;\n            }\n\n            return leafNodes[0];\n        } else {\n            const keys = await this.getKeysPrefixed(`${id}/${versionId}`);\n            return await this.store.getItem(keys[0]) as T;\n        }\n    }\n\n    async getAll(): Promise<T[]> {\n        return await this.getLeafNodes();\n    }\n\n    async getKeysPrefixed(prefix: string) {\n        const keys = await this.store.keys();\n        return keys.filter(k => k.startsWith(prefix));\n    }\n\n    async getSyncKeys(): Promise<string[]> {\n        const keys = await this.store.keys();\n        return keys.map(x => `${this.type}/${x.split('/')[0]}/${x.split('/')[1]}`)\n    }\n\n    private async getLeafNodes(prefix = '') {\n        const keys = await this.getKeysPrefixed(prefix);\n\n        const objs = keys.map(k => {\n            const parts = k.split('/');\n\n            let parentVersionId1 = null;\n            let parentVersionId2 = null;\n\n            if (parts[2].length > 0) {\n                const parentVersionIds = parts[2].split('+');\n\n                if (parentVersionIds.length > 2) {\n                    throw new Error(\"ParentVersionIds length > 2\");\n                }\n\n                parentVersionId1 = parentVersionIds[0];\n                parentVersionId2 = parentVersionIds.length > 1 ? parentVersionIds[1] : null;\n            }\n\n            return {\n                id: parts[0],\n                versionId: parts[1],\n                parentVersionId1: parentVersionId1,\n                parentVersionId2: parentVersionId2,\n            }\n        });\n\n        const groups = _.groupBy(objs, o => o.id);\n\n        const leafNodeArrays = Object.keys(groups).map(k => {\n            const group = groups[k];\n            const parents: { [key: string]: boolean } = {};\n\n            for(const o of group) {\n                if (o.parentVersionId1) {\n                    parents[o.parentVersionId1] = true;\n                }\n                if (o.parentVersionId2) {\n                    parents[o.parentVersionId2] = true;\n                }\n            }\n\n            const leafNodes = group.filter(o => {\n                const isLeaf = !parents[o.versionId];\n                return isLeaf;\n            });\n\n            return leafNodes;\n        });\n\n        const result: T[] = [];\n\n        for(let leafNodes of leafNodeArrays) {\n            const leafObjs: T[] = [];\n            for(let node of leafNodes) {\n                leafObjs.push(await (this.store.getItem(this.getKey(node))) as T);\n            }\n\n            if(leafObjs.length !== 1) {\n                console.warn(`Found ${leafObjs.length} leaf nodes for entity ${this.type}/${leafNodes[0].id} - expected 1: ${leafObjs.map(x => x.versionId)}`);\n    \n                for(const node of leafObjs) {\n                    console.log('leaf node', node);\n                }\n    \n                result.push(_.orderBy(leafObjs, x => x.updatedAt, 'desc')[0])\n            } else {\n                result.push(leafObjs[0]);\n            }\n        }\n\n        return result;\n    }\n\n    registerChangeListener(listener: (status: T) => void) {\n        this.changeListener.register(listener)\n    }\n\n    dropInstance() {\n        this.store.dropInstance();\n    }\n\n    private getKey(entity: { id: string, versionId: string, parentVersionId1: string|null, parentVersionId2: string|null }) {\n        let parentVersionIds = [];\n\n        if (entity.parentVersionId1) {\n            parentVersionIds.push(entity.parentVersionId1);\n        }\n\n        if (entity.parentVersionId2) {\n            parentVersionIds.push(entity.parentVersionId2);\n        }\n\n\n        return `${entity.id}/${entity.versionId}/${parentVersionIds.join('+')}`;\n    }\n\n    private uuid() {\n        return 'xxxxxxxx-xxxx-xxxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            const r = Math.random() * 16 | 0, v = c === 'x' ? r : ((r & 0x3) | 0x8);\n            return v.toString(16);\n        });\n    }\n}\n\nconst contexts = new LocalForageStore<Context>(\"context\");\nconst tasks = new LocalForageStore<Task>(\"task\");\nconst notes = new LocalForageStore<Note>(\"note\");\nconst projects = new LocalForageStore<Project>(\"project\");\nconst people = new LocalForageStore<Person>(\"person\");\n\nasync function getSyncKeys() {\n    const keys: string[] = [\n        ...(await contexts.getSyncKeys()),\n        ...(await tasks.getSyncKeys()),\n        ...(await notes.getSyncKeys()),\n        ...(await projects.getSyncKeys()),\n        ...(await people.getSyncKeys()),\n    ];\n\n    return keys;\n}\n\nasync function getBySyncKey(syncKey: string): Promise<Entity|null> {\n    const [type, id, versionId] = syncKey.split('/');\n\n    switch(type) {\n        case 'context':\n            return contexts.get(id, versionId);\n        case 'task':\n            return tasks.get(id, versionId);\n        case 'note':\n            return notes.get(id, versionId);\n        case 'project':\n            return projects.get(id, versionId);\n        case 'person':\n            return people.get(id, versionId);\n        default:\n            throw new Error('Unknown type: ' + type);\n    }\n}\n\nasync function importEntites(entities: Entity[]) {\n    for(const entity of entities) {\n        switch(entity.type) {\n            case 'context':\n                contexts.import(entity as Context);\n                break;\n            case 'task':\n                tasks.import(entity as Task);\n                break;\n            case 'note':\n                notes.import(entity as Note);\n                break;\n            case 'project':\n                projects.import(entity as Project);\n                break;\n            case 'person':\n                people.import(entity as Person);\n                break;\n            default:\n                throw new Error('Unknown type: ' + entity.type);\n        }\n    }\n}\n\nasync function importServerEntites(serverEntities: ServerEntity[]) {\n    for(const serverEntity of serverEntities) {\n        const encryption = JSON.parse(serverEntity.encryption) as ServerEntityEncryption;\n        const unencryptedData = await unwrapAndDecrypt(encryption.fingerprint, encryption.key, serverEntity.data, encryption.iv);\n        let entity = JSON.parse(unencryptedData) as Entity;\n\n        entity.id = serverEntity.id;\n        entity.versionId = serverEntity.versionId;\n        entity.type = serverEntity.type;\n        entity.parentVersionId1 = serverEntity.parentVersionId1;\n        entity.parentVersionId2 = serverEntity.parentVersionId2;\n        entity.createdAt = serverEntity.createdAt;\n        entity.updatedAt = serverEntity.updatedAt;\n\n        switch(serverEntity.type) {\n            case 'context':\n                contexts.import(entity as Context);\n                break;\n            case 'task':\n                tasks.import(entity as Task);\n                break;\n            case 'note':\n                notes.import(entity as Note);\n                break;\n            case 'project':\n                projects.import(entity as Project);\n                break;\n            case 'person':\n                people.import(entity as Person);\n                break;\n            default:\n                throw new Error('Unknown type: ' + entity.type);\n        }\n    }\n}\n\nasync function exportServerEntities(syncKeys: string[]): Promise<ServerEntity[]> {\n    const result: ServerEntity[] = [];\n\n    for (const syncKey of syncKeys) {\n        const entity = await getBySyncKey(syncKey);\n\n        if (entity === null) {\n            console.warn(\"Entity with key not found: \" + syncKey)\n            continue;\n        }\n\n        const entityData = {...entity};\n\n        delete entityData.createdAt;\n        delete entityData.updatedAt;\n        delete entityData.id;\n        delete entityData.versionId;\n        delete entityData.type;\n        delete entityData.parentVersionId1;\n        delete entityData.parentVersionId2;\n\n        const unencryptedData = JSON.stringify(entityData);\n        const encryptionResult = await encryptAndWrap((await getCurrentKey()).fingerprint, unencryptedData);\n        const encryption: ServerEntityEncryption = { \n            fingerprint: encryptionResult.fingerprint, \n            key: encryptionResult.key,\n            iv: encryptionResult.iv\n        };\n        const encryptionJson = JSON.stringify(encryption);\n\n        const serverEntity: ServerEntity = {\n            id: entity.id,\n            versionId: entity.versionId,\n            type: entity.type,\n            parentVersionId1: entity.parentVersionId1,\n            parentVersionId2: entity.parentVersionId2,\n            createdAt: entity.createdAt,\n            updatedAt: entity.updatedAt,\n            data: encryptionResult.payload,\n            encryption: encryptionJson\n        };\n\n        result.push(serverEntity);\n    }\n\n    return result;\n}\n\nexport const db = {\n    contexts,\n    tasks,\n    notes,\n    projects,\n    people,\n    getSyncKeys,\n    importEntites,\n    importServerEntites,\n    exportServerEntities\n};","import * as React from 'react';\n\nexport const Loader: React.FC = (props) => {\n    return (\n        <div style={{display: 'flex', height: '100%', justifyContent: 'center', alignItems: 'center'}}>\n            <div style={{border: '1px solid #555', padding: '1rem 2rem', background: '#2e2e2e'}}>Loading...</div>\n        </div>\n    );\n}","import { Note } from \"./db/note\";\nimport { Task } from \"./db/task\";\nimport { Context } from \"./db/context\";\nimport { Project } from \"./db/project\";\nimport { Person } from \"./db/person\";\nimport React, { useContext, useEffect } from \"react\";\nimport { syncer } from \"./db/syncer\";\nimport { Loader } from \"./components/Loader\";\n\nexport class Data {\n    constructor(notes: Note[], tasks: Task[], contexts: Context[], projects: Project[], people: Person[]) {\n        this.notes = notes;\n        this.tasks = tasks;\n        this.contexts = contexts;\n        this.projects = projects;\n        this.people = people;\n    }\n\n    readonly notes: Note[];\n    readonly tasks: Task[];\n    readonly contexts: Context[];\n    readonly projects: Project[];\n    readonly people: Person[];\n};\n\ninterface DataContextState {\n    data: Data;\n    refreshData: () => void;\n}\n\nconst DataContext = React.createContext<DataContextState>({\n    data: null as any,\n    refreshData: () => {}\n});\n\nexport const DataProvider: React.FC = props => {\n    const [data, setData] = React.useState<Data>(null as any);\n\n    useEffect(() => {\n        async function init() {\n            syncer.registerDataListener(data => setData(data));\n            setData(await syncer.getData());\n            await syncer.startServerSync();\n            await syncer.ensureServerSyncEnqueued();\n        };\n        init();\n    }, []);\n\n    const refreshData = React.useCallback(async () => {\n        // setData(await syncer.getData());\n        syncer.startServerSync();\n    }, []);\n\n    const value: DataContextState = {\n        data,\n        refreshData\n    };\n\n    if (!data) {\n        return <Loader />;\n    }\n\n    return (\n      <DataContext.Provider value={value}>\n        {props.children}\n      </DataContext.Provider>\n    );\n};\n\nexport const useData = () => {\n    const value = useContext(DataContext);\n    return value;\n};","import { Dropbox } from 'dropbox';\nimport {createInstance} from 'localforage';\n\nconst store = createInstance({name: 'store-dropbox'})\n\nconst localClientId = 'jh9cnt92wi5e5my';\nconst prodClientId = 'li12ai4q2cs3dkc';\n\nexport const isLocalMode = window.location.host !== 'life.rasmuskl.dk';\n\nconst clientId = isLocalMode ? localClientId : prodClientId;\n\ntryStoreAccessKey();\n\nexport function signIn() {\n    const dropbox = new Dropbox({ clientId, fetch });\n    window.location.assign(dropbox.getAuthenticationUrl(window.location.toString()));\n}\n\nexport async function isSignedIn() {\n    return !!(await store.getItem('token'));\n}\n\ninterface DropboxSnapshot {\n    cursor: string|null;\n    files: Set<string>;\n}\n\nasync function getStateSnapshot() {\n    const snapshot = await store.getItem('snapshot') as DropboxSnapshot|null;\n    return snapshot || { cursor: null, files: new Set<string>() };\n}\n\nasync function setStateSnapshot(snapshot: DropboxSnapshot|null) {\n    if (!snapshot) {\n        await store.removeItem('snapshot');\n    } else {\n        await store.setItem('snapshot', snapshot);\n    }\n}\n\nexport async function listFiles(useSnapshot = true) {\n    if(!await isSignedIn()) {\n        throw new Error('Not authenticated');\n    }\n\n    const dropbox = new Dropbox({ accessToken: await getAccessToken(), fetch });\n    let snapshot: DropboxSnapshot = { cursor: null, files: new Set<string>() };\n\n    if (useSnapshot) {\n        snapshot = await getStateSnapshot();\n    }\n\n    let hasMore = true;\n\n    while(hasMore) {\n        if (snapshot.cursor) {\n            const fileListResult = await dropbox.filesListFolderContinue({ cursor: snapshot.cursor });\n            const results = fileListResult.entries.filter(e => e['.tag'] === 'file').map(e => e.path_lower?.substring(1)).filter(p => p) as string[];\n            snapshot.cursor = fileListResult.cursor;\n            for(const file of results) {\n                snapshot.files.add(file);\n            }\n            hasMore = fileListResult.has_more;\n        } else {\n            const fileListResult = await dropbox.filesListFolder({path: '', recursive: true});\n            const results = fileListResult.entries.filter(e => e['.tag'] === 'file').map(e => e.path_lower?.substring(1)).filter(p => p) as string[];\n            snapshot.cursor = fileListResult.cursor;    \n            for(const file of results) {\n                snapshot.files.add(file);\n            }\n            hasMore = fileListResult.has_more;\n        }\n\n        await setStateSnapshot(snapshot);\n    }\n\n    return snapshot.files;\n}\n\nexport function getAccessTokenFromUrl() {\n    const results = parseAuthFromHash(window.location.hash);\n    return results.access_token;\n}\n\nexport async function tryStoreAccessKey() {\n    const accessToken = getAccessTokenFromUrl();\n\n    if (accessToken) {\n        await store.setItem('token', accessToken);\n    }\n}\n\nexport async function uploadFile(path: string, contents: string) {\n    if(!await isSignedIn()) {\n        throw new Error('Not authenticated');\n    }\n\n    const dropbox = new Dropbox({ accessToken: await getAccessToken(), fetch });\n    await dropbox.filesUpload({\n        path: `/${path}`,\n        contents\n    });\n}\n\nexport async function getFile<T>(path: string) {\n    if(!await isSignedIn()) {\n        throw new Error('Not authenticated');\n    }\n\n    const dropbox = new Dropbox({ accessToken: await getAccessToken(), fetch });\n    const response = await dropbox.filesDownload({path: `/${path}` })\n    return new Promise<T>((resolve) => {\n        const blob: Blob = (response as any).fileBlob;\n        const reader = new FileReader();\n        reader.addEventListener(\"loadend\", function() {\n            const json = reader.result as string;\n            resolve(JSON.parse(json) as T);\n        });\n        reader.readAsText(blob);\n    });\n}\n\n\nasync function getAccessToken() {\n    return await store.getItem('token') as string;\n}\n\nfunction parseAuthFromHash(str: string) {\n    const ret: { [k: string]: string[] | string } = {};\n\n    if (typeof str !== 'string') {\n        return ret;\n    }\n\n    str = str.trim().replace(/^(\\?|#|&)/, '');\n\n    if (!str) {\n        return ret;\n    }\n\n    str.split('&').forEach(function (param) {\n        const parts = param.replace(/\\+/g, ' ').split('=');\n        let key = parts.shift();\n        let val = parts.length > 0 ? parts.join('=') : null;\n\n        key = decodeURIComponent(key!);\n        val = val ? decodeURIComponent(val) : null;\n\n        var retVal = ret[key];\n        if (ret[key] === undefined) {\n            ret[key] = val!;\n        } else if (Array.isArray(retVal)) {\n            retVal.push(val!);\n        } else {\n            ret[key] = [ret[key] as string, val!];\n        }\n    });\n\n    return ret;\n}","import { db, ServerEntity } from \"./db\";\nimport * as _ from \"lodash\";\nimport { Data } from \"../model\";\nimport {EventListener} from './EventListener';\nimport * as dropboxApi from '../lib/dropboxApi';\nimport pLimit from 'p-limit';\n\nexport enum SyncStatus {\n    Idle,\n    Syncing,\n    Failed,\n};\n\nexport interface SyncResult {\n    startAt: Date;\n    endAt: Date;\n    fetch: number;\n    send: number;\n    error: Error|null;\n}\n\nclass Syncer {\n    status = SyncStatus.Idle;\n    results: SyncResult[] = [];\n    data: Data|null = null;\n    intervalHandle: number|null = null;\n\n    syncListener = new EventListener<SyncStatus>();\n    dataListener = new EventListener<Data>();\n\n    constructor() {\n        db.notes.changeListener.register(note => {\n            if(!this.data) {\n                return;\n            }\n\n            const notes = _.orderBy(this.data.notes.filter(x => x.id !== note.id).concat(note), x => x.updatedAt);\n            this.data = new Data(notes, this.data.tasks, this.data.contexts, this.data.projects, this.data.people);\n            this.dataListener.trigger(this.data);\n        });\n\n        db.tasks.changeListener.register(task => {\n            if(!this.data) {\n                return;\n            }\n\n            const tasks = this.data.tasks.filter(x => x.id !== task.id).concat(task);\n            this.data = new Data(this.data.notes, tasks, this.data.contexts, this.data.projects, this.data.people);\n            this.dataListener.trigger(this.data);\n        });\n\n        db.contexts.changeListener.register(context => {\n            if(!this.data) {\n                return;\n            }\n\n            const contexts = this.data.contexts.filter(x => x.id !== context.id).concat(context);\n            this.data = new Data(this.data.notes, this.data.tasks, contexts, this.data.projects, this.data.people);\n            this.dataListener.trigger(this.data);\n        });\n\n        db.projects.changeListener.register(project => {\n            if(!this.data) {\n                return;\n            }\n\n            const projects = this.data.projects.filter(x => x.id !== project.id).concat(project);\n            this.data = new Data(this.data.notes, this.data.tasks, this.data.contexts, projects, this.data.people);\n            this.dataListener.trigger(this.data);\n        });\n\n        db.people.changeListener.register(person => {\n            if(!this.data) {\n                return;\n            }\n\n            const people = this.data.people.filter(x => x.id !== person.id).concat(person);\n            this.data = new Data(this.data.notes, this.data.tasks, this.data.contexts, this.data.projects, people);\n            this.dataListener.trigger(this.data);\n        });\n    }\n\n    registerSyncListener(listener: (status: SyncStatus) => void) {\n        this.syncListener.register(listener)\n    }\n\n    registerDataListener(listener: (status: Data) => void) {\n        this.dataListener.register(listener)\n    }\n\n    getResults() {\n        return this.results;\n    }\n\n    async getData() {\n        if (!this.data) {\n            this.data = await this.loadData();\n        }\n\n        return this.data;\n    }\n\n    async ensureServerSyncEnqueued() {\n        if (this.intervalHandle !== null) {\n            return;\n        }\n\n        this.intervalHandle = setInterval(async () => {\n            await this.startServerSync();\n        }, 60000) as any;\n    }\n\n    async startServerSync() {\n        if (this.status === SyncStatus.Syncing) {\n            return;\n        }\n\n        if(!dropboxApi.isSignedIn()) {\n            return;\n        }\n\n        const startAt = new Date();\n        this.status = SyncStatus.Syncing;\n        this.syncListener.trigger(this.status);\n\n        function difference<T>(setA: Set<T>, setB: Set<T>): Set<T> {\n            let _difference = new Set(setA);\n            for (const key of setB) {\n                _difference.delete(key);\n            }\n            return _difference;\n        }\n\n        try {\n            const files = await dropboxApi.listFiles();\n            const syncKeys = new Set(await db.getSyncKeys());\n    \n            const toSend = difference(syncKeys, files);\n            const toFetch = difference(files, syncKeys);\n    \n            for(const key of toSend) {\n                const entities = await db.exportServerEntities([key]);\n                await dropboxApi.uploadFile(key, JSON.stringify(entities[0]));\n            }\n    \n            const limit = pLimit(10);\n            const promises = [];\n    \n            for(const key of toFetch) {\n                promises.push(limit(async () => {\n                    const entity = await dropboxApi.getFile<ServerEntity>(key);\n                    await db.importServerEntites([entity]);\n                }));\n            }\n    \n            await Promise.all(promises);\n\n            this.results.push({ startAt, endAt: new Date(), error: null, fetch: toFetch.size, send: toSend.size })\n            this.status = SyncStatus.Idle;\n            this.syncListener.trigger(this.status);\n        } catch (e) {\n            this.status = SyncStatus.Failed;\n            this.results.push({ startAt, endAt: new Date(), error: e && e.message ? e.message : e, fetch: 0, send: 0 });\n            this.syncListener.trigger(this.status);\n        }\n    }\n\n    private async loadData(): Promise<Data> {\n        const contexts = db.contexts.getAll();\n        const tasks = await db.tasks.getAll();\n        const projects = db.projects.getAll();\n        const people = db.people.getAll();\n        const notes = _.orderBy(await db.notes.getAll(), x => x.updatedAt);\n        \n        return new Data(notes, await tasks, await contexts, await projects, await people);\n    }\n}\n\nexport const syncer = new Syncer();\n\n","import * as React from 'react';\nimport './Layout.scss';\nimport { NavLink } from 'react-router-dom';\nimport { ServiceWorkerInstall } from './ServiceWorkerInstall';\nimport * as styles from '../layout/styles';\nimport { syncer, SyncStatus } from '../db/syncer';\nimport { cx } from 'emotion';\n\nexport function isMobile() {\n    return window.matchMedia(\"(max-width: 768px)\").matches;\n}\n\nexport const Layout: React.FC<{}> = (props) => {\n    const [sidebar, setSidebar] = React.useState(() => !isMobile())\n    const [count, setCount] = React.useState(0);\n\n    React.useEffect(() => {\n        syncer.registerSyncListener(() => setCount(c => c +  1));\n    }, []);\n\n    function onNavClick() {\n        if(isMobile()) {\n            setSidebar(false);\n        }\n    }\n\n    return <>\n        <section style={{display: 'flex', overflow: 'hidden', height: '100%'}}>\n            <React.Fragment key={count} />\n            <div className={cx('navbar')}>\n                <div className={cx(styles.horizontalSpace('1rem'))}>\n                    {!sidebar && (\n                        <>\n                            <NavLink className={cx('button', styles.hoverGlow)} to={ '/' } onClick={onNavClick} exact activeClassName='is-active'>Notes</NavLink>\n                            <NavLink className={cx('button', styles.hoverGlow)} to={ '/tasks' } onClick={onNavClick} exact activeClassName='is-active'>Tasks</NavLink>\n                        </>\n                    )}\n                </div>\n                <div className={cx(styles.horizontalSpace('1rem'))}>\n                    <NavLink className=\"button\" to=\"/sync\">Sync: {SyncStatus[syncer.status]}</NavLink>\n                    <ServiceWorkerInstall />\n                    <button className=\"button\" onClick={() => setSidebar(!sidebar)}>\n                        Menu\n                    </button>\n                </div>\n            </div>\n\n            <div className={cx('sidebar', 'list')} style={{overflowY: 'auto', paddingTop: 52, height: '100%', width: sidebar ? undefined : 0, overflowX: 'hidden'}}>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/' } onClick={onNavClick} exact activeClassName='is-active'>Notes</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/notes/daily' } onClick={onNavClick} exact activeClassName='is-active'>Daily Notes</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/tasks' } onClick={onNavClick} exact activeClassName='is-active'>Tasks</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/projects' } onClick={onNavClick} exact activeClassName='is-active'>Projects</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/contexts' } onClick={onNavClick} exact activeClassName='is-active'>Contexts</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/people' } onClick={onNavClick} exact activeClassName='is-active'>People</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/playground' } onClick={onNavClick} exact activeClassName='is-active'>Playground</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/stats' } onClick={onNavClick} exact activeClassName='is-active'>Stats</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/settings' } onClick={onNavClick} exact activeClassName='is-active'>Settings</NavLink>\n            </div>\n\n            <div className=\"main\" style={{paddingTop: 52}}>\n                { props.children }\n            </div>\n        </section>\n    </>;\n}\n","import { Entity } from \"./db\";\n\nexport enum ProjectState {\n    Active = 'Active',\n    Incubated = 'Incubated',\n    Completed = 'Completed',\n    Dropped = 'Dropped',\n}\n\nexport interface Project extends Entity {\n    type: 'project',\n    title: string;\n    contextId: string|null;\n    state: ProjectState;\n}","import * as React from 'react';\nimport * as styles from '../layout/styles';\nimport { cx } from 'emotion';\n\nexport const ToolSection: React.SFC<{ verticalAround?: boolean }> = (props) => {\n    let verticalAround = props.verticalAround;\n\n    if (verticalAround === undefined) {\n        verticalAround = true;\n    }\n\n    return (\n        <div className={cx(styles.horizontalSpace('8px', true), styles.verticalSpace('8px', verticalAround))}>{props.children}</div>\n    );\n}","import { Data } from \"../model\";\nimport * as _ from 'lodash';\nimport { Context } from \"../db/context\";\n\nexport interface NestedContexts {\n    topContexts: Context[];\n    nestedContexts: {[id: string]: Context[]};\n    taskCounts: {[id: string]: number};\n}\n\nexport function getNestedContexts(data: Data): NestedContexts {\n    const grouped = _.groupBy(data.contexts, x => x.contextId);\n    const taskCounts = _.countBy(data.tasks.filter(x => x.state === 'active'), x => x.contextId);\n\n    return {\n        topContexts: data.contexts.filter(x => !x.contextId),\n        nestedContexts: grouped,\n        taskCounts\n    };\n}\n\nexport function getFilteredContextIds(contextId: string|null, data: Data) {\n    const contexts = getNestedContexts(data);\n\n    if (contextId) {\n        const contextIds = [contextId];\n        const queue = [contextId];\n\n        while (queue.length) {\n            const next = queue.pop();\n\n            if (!next) {\n                break;\n            }\n\n            for(const nested of contexts.nestedContexts[next] || []) {\n                contextIds.push(nested.id);\n                queue.push(nested.id);\n            }\n        }\n\n        return contextIds;\n    } else {\n        return data.contexts.map(c => c.id);\n    }\n};","import { Entity } from \"./db\";\n\nexport enum ContextState {\n    Active = 'Active',\n    Inactive = 'Inactive',\n}\n\nexport interface Context extends Entity {\n    type: 'context';\n    title: string;\n    contextId: string|null;\n    state: ContextState;\n}","import * as React from \"react\";\n\nexport const useQueryState = (initialValue: string|null, queryParam: string): [string|null, (value: string|null) => void] => {\n    const [rawValue, setRawValue] = React.useState(() => {\n        const urlParams = new URLSearchParams(window.location.search);\n        return urlParams.get(queryParam) || initialValue;\n    });\n\n    const setValue = (value: string|null) => {\n        const urlParams = new URLSearchParams(window.location.search);\n        setRawValue(value);\n        if (!value || value === initialValue) {\n            urlParams.delete(queryParam);\n        } else {\n            urlParams.set(queryParam, value);\n        }\n\n        const queryString = urlParams.toString();\n\n        if (queryString.length) {\n            window.history.replaceState(null, '', `?${queryString}`);\n        } else {\n            window.history.replaceState(null, '', window.location.pathname);\n        }\n\n        window.dispatchEvent(new (window as any).CustomEvent('popstate'));\n    };\n\n    return [rawValue, setValue];\n};\n\nexport const useQueryStateT = <T extends {}>(initialValue: T, queryParam: string, convertTo: (value: string|null) => T, convertFrom: (value: T) => string|null): [T, (value: T) => void] => {\n    const [rawValue, setRawValue] = React.useState<T>(() => {\n        const urlParams = new URLSearchParams(window.location.search);\n        return convertTo(urlParams.get(queryParam)) || initialValue;\n    });\n\n    const setValue = (value: T) => {\n        const urlParams = new URLSearchParams(window.location.search);\n        setRawValue(value);\n        if (!value || value === initialValue) {\n            urlParams.delete(queryParam);\n        } else {\n            const strValue = convertFrom(value);\n            if (strValue) {\n                urlParams.set(queryParam, strValue);\n            } else {\n                urlParams.delete(queryParam);\n            }\n        }\n\n        const queryString = urlParams.toString();\n\n        if (queryString.length) {\n            window.history.replaceState(null, '', `?${queryString}`);\n        } else {\n            window.history.replaceState(null, '', window.location.pathname);\n        }\n\n        window.dispatchEvent(new (window as any).CustomEvent('popstate'));\n    };\n\n    return [rawValue, setValue];\n};\n\nexport const useQueryStateBoolean = (initialValue: boolean, queryParam: string) => {\n    return useQueryStateT<boolean>(initialValue, queryParam, x => x === 'true', x => x === initialValue ? null : x.toString());\n};","import * as React from 'react';\nimport { isMobile } from './Layout';\nimport * as styles from '../layout/styles';\nimport { cx } from 'emotion';\n\nexport const SettingsCompactor : React.FC<{className?: string, alwaysVisible?: () => JSX.Element, mobileOnly?: () => JSX.Element, wideStyle?:React.CSSProperties}> = props => {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const alwaysVisible = props.alwaysVisible ? props.alwaysVisible() : null;\n\n    if(!isMobile()) {\n        return (\n            <div style={{display: 'flex', alignItems: 'center', ...props.wideStyle}} className={styles.horizontalSpace('.3rem')}>\n                {alwaysVisible}\n                {props.children}\n            </div>\n        );\n    }\n\n    const mobileOnly = props.mobileOnly ? props.mobileOnly() : null;\n\n    if(!expanded) {\n        return (\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\n                {alwaysVisible}\n                {mobileOnly}\n                <div className=\"button\" onClick={() => setExpanded(true)}>S</div>\n            </div>\n        );\n    }\n\n    return (\n        <div style={{display: 'flex', flexDirection: 'column'}} className={styles.verticalSpace('.3rem')}>\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\n                {alwaysVisible}\n                <div className=\"button\" onClick={() => setExpanded(false)}>S</div>\n            </div>\n            <div className={cx(styles.verticalSpace('.3rem'), props.className)}>\n                {props.children}\n            </div>\n        </div>\n    );\n};","import * as React from 'react';\nimport { useData } from '../model';\n\nexport const ContextTag: React.FC<{contextId: string|null}> = (props) => {\n    const {data} = useData();\n\n    if (!props.contextId) {\n        return null;\n    }\n\n    const context = data.contexts.find(p => p.id === props.contextId);\n\n    if (!context) {\n        return null;\n    }\n\n    return <div className=\"tag is-context\">{context.title}</div>;\n}","import * as React from 'react';\nimport { useData } from '../model';\nimport { ContextState, Context } from '../db/context';\nimport * as styles from '../layout/styles';\nimport * as ContextActions from '../lib/contextActions';\nimport { cx } from 'emotion';\n\nexport const ContextBar: React.FC<{contextId: string|null, onChange: (contextId: string|null) => void, showTaskCount?: boolean}> = (props) => {\n    const {data} = useData();\n\n    const nestedContexts = ContextActions.getNestedContexts(data);\n\n    const renderListContext = (context: Context, contexts: ContextActions.NestedContexts, depth = 0) => {\n        if (context.state && context.state === ContextState.Inactive) {\n            return <React.Fragment key={context.id}></React.Fragment>;\n        }\n\n        return (\n            <React.Fragment key={context.id}>\n                <div onClick={() => props.onChange(context.id)} style={{paddingLeft: 10 + depth * 10, background: props.contextId === context.id ? \"#3f3f3f\" : undefined}} className={cx('item', styles.hoverGlow, styles.cursorPointer)}>\n                    {context.title} {props.showTaskCount && <span style={{color: '#999'}}>{contexts.taskCounts[context.id]}</span>}\n                </div>\n                {contexts.nestedContexts[context.id] && contexts.nestedContexts[context.id].map(c => (\n                    renderListContext(c, contexts, depth + 1)\n                ))}\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <div style={{borderRight: '1px solid #666', width: 200}}>\n            <div className=\"list\">\n                <div className={cx('item', styles.hoverGlow, styles.cursorPointer)} style={{paddingLeft: 10, background: props.contextId === null ? \"#3f3f3f\" : undefined}} onClick={() => props.onChange(null)}>All</div>\n                {nestedContexts.topContexts.map(i => renderListContext(i, nestedContexts))}\n            </div>\n        </div>\n    )\n}","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as styles from '../layout/styles';\nimport { useData } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport * as ContextActions from '../lib/contextActions';\nimport { isMobile } from '../components/Layout';\nimport { Task } from '../db/task';\nimport { ProjectState, Project } from '../db/project';\nimport { db } from '../db/db';\nimport moment from 'moment';\nimport { useQueryState } from '../lib/UseQueryState';\nimport { SettingsCompactor } from '../components/SettingsCompactor';\nimport { ContextTag } from '../components/ContextTag';\nimport { ContextBar } from '../components/ContextBar';\nimport { cx } from 'emotion';\nimport _ from 'lodash';\n\ninterface Perspective {\n    id: string;\n    title: string;\n    groupedProject: boolean;\n    groupedContext: boolean;\n}\n\nlet perspectives: Perspective[] = [\n    { id: '1', title: 'All', groupedProject: false, groupedContext: false },\n    { id: '2', title: 'Grouped', groupedProject: false, groupedContext: true },\n    { id: '3', title: 'Grouped Project', groupedProject: true, groupedContext: false }\n]\n\nlet defaultPerspective = perspectives[1];\n\ninterface TaskFilters {\n    showCompleted: boolean;\n    showContextBar: boolean;\n    includeNested: boolean;\n    showDeferred: boolean;\n    showIncubated: boolean;\n}\n\nexport const TaskPage: React.FC<{}> = (props) => {\n    const {data, refreshData} = useData();\n    const [text, setText] = React.useState('');\n    const [options, setOptions] = React.useState<TaskFilters>({\n        showCompleted: false,\n        showDeferred: false,\n        showIncubated: false,\n        showContextBar: isMobile() ? false : true,\n        includeNested: true,\n    });\n\n    const [contextId, setContextId] = useQueryState(null, 'context');\n    const [projectId, setProjectId] = useQueryState(null, 'project');\n    const [perspectiveId, setPerspectiveId] = useQueryState('2', 'perspective');\n\n    const onKeyPress = async (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter') {\n            await db.tasks.create({\n                title: text,\n                contextId: contextId,\n                projectId: projectId,\n                content: null,\n                state: 'active',\n                stateChangedAt: new Date().toISOString(),\n                noteId: null,\n            });\n\n            setText('');\n            refreshData();\n        }\n    }\n\n    const onCompleteChange = async (task: Task, e: React.ChangeEvent<HTMLInputElement>) => {\n        task.state = task.state === 'completed' ? 'active' : 'completed';\n        task.stateChangedAt = new Date().toISOString();\n        await db.tasks.save(task);\n        refreshData();\n    }\n\n    const renderProject = (task: Task) => {\n        const project = data.projects.find(p => p.id === task.projectId);\n\n        if (project) {\n            return <div className=\"tag is-info\">{project.title}</div>;\n        }\n\n        return null;\n    };\n\n    const renderDeferred = (task: Task) => {\n        if (task.deferredUntil && new Date(task.deferredUntil) > new Date()) {\n            return <div className=\"tag is-primary\" title={`${moment(task.deferredUntil).format('YYYY-MM-DD')}`}>deferred {moment(task.deferredUntil).fromNow(true)}</div>;\n        }\n        return null;\n    };\n\n    const renderNote = (task: Task) => {\n        if (task.noteId) {\n            return <div className=\"tag is-primary\" >N</div>;\n        }\n        return null;\n    };\n\n    const renderTitle = (title: string) => {\n        const pattern = /(https?:\\/\\/[^\\s]+)/;\n        return title.split(pattern).map((c, i) => {\n            if (c.match(pattern)) {\n                let title = c.replace(/https?:\\/\\//, '');\n                title = title.replace(/\\/.*/, '/...');\n                return <a key={i} href={c} onClick={e => { e.stopPropagation(); }} target=\"_blank\"  rel=\"noopener noreferrer\" className=\"button is-small is-link\" style={{display: 'inline-block', marginLeft: '5px', marginRight: '5px'}}>{title}</a>;\n            }\n\n            return <span key={i}>{c}</span>;\n        });\n    };\n\n    const filterTasks = (complete: boolean, contexts: ContextActions.NestedContexts) => {\n        let tasks = data.tasks;\n\n        if (complete) {\n            tasks = tasks.filter(t => t.state === 'completed')\n        } else {\n            tasks = tasks.filter(t => t.state !== 'completed')\n        }\n\n        if (projectId) {\n            tasks = tasks.filter(t => t.projectId === projectId);\n        }\n\n        if (!options.showDeferred) {\n            tasks = tasks.filter(t => t.deferredUntil == null || new Date(t.deferredUntil) < new Date());\n        }\n\n        if (!options.showIncubated) {\n            tasks = tasks.filter(t => t.state !== 'incubated');\n\n            const incubatedProjectIds = data.projects.filter(p => p.state === ProjectState.Incubated).map(p => p.id);\n            tasks = tasks.filter(t => !t.projectId || incubatedProjectIds.indexOf(t.projectId) === -1);\n        }\n\n        if (contextId) {\n            const contextIds = ContextActions.getFilteredContextIds(contextId, data);\n            tasks = tasks.filter(t => t.contextId && contextIds.indexOf(t.contextId) !== -1);\n        }\n\n        return tasks.sort((a, b) =>  b.createdAt! < a.createdAt! ?  -1 : b.createdAt! > a.createdAt! ? 1 : 0);\n    }\n\n    const renderTask = (task: Task, skipProjectContext = false) => {\n        let source: string|null = null;\n        if (window.location.search.length) {\n            const urlParams = new URLSearchParams(window.location.search);\n            source = `?source=${encodeURIComponent(`${window.location.pathname}?${urlParams.toString()}`)}`\n        }\n\n        return (\n            <NavLink key={task.id} to={`/tasks/${task.id}${source ? source : ''}`} className={cx('item', 'task', styles.hoverGlow)}>\n                <div className=\"task-checkbox\">\n                    <input type=\"checkbox\" style={{display: 'block', padding: 10}} checked={task.state === 'completed'} onClick={e => e.preventDefault()} onChange={e => onCompleteChange(task, e)}/>\n                </div>\n                <div className=\"task-title\" style={{color: task.state === 'incubated' ? '#999' : undefined}}>\n                    {task.state === 'completed' ? <span style={{textDecoration: 'line-through'}}>{renderTitle(task.title)}</span> : renderTitle(task.title)}\n                    {task.state === 'incubated' ? <span> [Incubated]</span> : null}\n                </div>\n                <div className=\"task-details\">\n                    <div className=\"tags\">\n                        {renderNote(task)}\n                        {renderDeferred(task)}\n                        {!skipProjectContext && <ContextTag contextId={task.contextId} /> }\n                        {!skipProjectContext && renderProject(task)}\n                    </div>\n                </div>\n            </NavLink>\n        );\n    };\n\n    const perspective = perspectives.find(x => x.id === perspectiveId) || defaultPerspective;\n    const nestedContexts = ContextActions.getNestedContexts(data);\n\n    let taskBlock: JSX.Element[] = [];\n\n    if (perspective.groupedContext) {\n        const filteredContextIds: (string|null)[] = ContextActions.getFilteredContextIds(contextId, data);\n\n        if (!contextId) {\n            filteredContextIds.push(null);\n        }\n\n        for (const contextId of filteredContextIds) {\n            const context = data.contexts.find(p => p.id === contextId);\n\n            let tasks = filterTasks(false, nestedContexts);\n\n            if (contextId) {\n                if (!context) {\n                    continue;\n                }\n\n                tasks = tasks.filter(t => t.contextId === contextId);\n\n                if (!tasks.length) {\n                    continue;\n                }\n\n                taskBlock.push(\n                    <div key={contextId} style={{display: 'flex', justifyContent: 'space-between', padding: '.6rem', background: '#00503C', cursor: 'pointer'}} onClick={() => setContextId(context.id)}>\n                        {context.title}\n                        <NavLink className=\"button small\" to={`/contexts/${context.id}`}>Edit</NavLink>\n                    </div>\n                )\n            } else {\n                tasks = tasks.filter(t => t.contextId === contextId);\n\n                if (!tasks.length) {\n                    continue;\n                }\n\n                taskBlock.push(<div key={'no-context'} style={{padding: '.6rem', background: '#00503C'}}>No Context</div>)\n            }\n\n            let stateOrder = [ProjectState.Active, ProjectState.Incubated, ProjectState.Completed, ProjectState.Dropped];\n    \n            const emptyActiveProjects: Project[] = [];\n    \n            let filteredProjects = data.projects;\n    \n            if (projectId !== null) {\n                filteredProjects = filteredProjects.filter(p => p.id === projectId);\n            }\n    \n            filteredProjects.sort((a, b) => stateOrder.indexOf(a.state) - stateOrder.indexOf(b.state)).forEach(p => {\n                let projectTasks = tasks.filter(t => t.projectId === p.id);\n    \n                if (!projectTasks.length) {\n                    if (p.state === ProjectState.Active) {\n                        if (contextId) {\n                            if (p.contextId && filteredContextIds.indexOf(p.contextId) !== -1) {\n                                emptyActiveProjects.push(p);\n                            }\n                        } else {\n                            emptyActiveProjects.push(p);\n                        }\n                    }\n                    return;\n                }\n    \n                taskBlock.push(\n                    <React.Fragment key={`p-${p.id}`}>\n                        <div className=\"header link\" onClick={() => { setProjectId(p.id); setContextId(p.contextId); }}>\n                            {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''}\n                            <div style={{display: 'flex'}}>\n                                <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\n                            </div>\n                        </div>\n                        {projectTasks.map(t => renderTask(t, true))}\n                    </React.Fragment>\n                );\n            });\n    \n            const noProjectTasks = tasks.filter(t => t.projectId === null);\n    \n            if (noProjectTasks.length) {\n                taskBlock.push(\n                    <React.Fragment key={`no-p-${contextId}`}>\n                        <div className=\"header\">No Project</div>\n                        {noProjectTasks.map(t => renderTask(t, true))}\n                    </React.Fragment>\n                );\n            }\n    \n            for(const p of emptyActiveProjects) {\n                if (p.contextId !== contextId) {\n                    continue;\n                }\n\n                taskBlock.push(\n                    <div className=\"header link\" onClick={() => { setProjectId(p.id); setContextId(p.contextId); }}>\n                        {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''} [Empty]\n                        <div style={{display: 'flex'}}>\n                            <div className=\"tags\">\n                                <ContextTag contextId={p.contextId} />\n                            </div>\n                            <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\n                        </div>\n                    </div>\n                );\n            }\n        }\n\n        if (options.showCompleted) {\n            taskBlock.push(\n                <React.Fragment key=\"completed\">\n                    <div className=\"header\">Completed</div>\n                    {_.orderBy(filterTasks(true, nestedContexts), x => x.stateChangedAt, 'desc').map(t => renderTask(t))}\n                </React.Fragment>\n            );\n        }\n\n    } else if (perspective.groupedProject) {\n        let tasks = filterTasks(false, nestedContexts);\n\n        let stateOrder = [ProjectState.Active, ProjectState.Incubated, ProjectState.Completed, ProjectState.Dropped];\n\n        const emptyActiveProjects: Project[] = [];\n\n        let filteredProjects = data.projects;\n\n        if (projectId !== null) {\n            filteredProjects = filteredProjects.filter(p => p.id === projectId);\n        }\n\n        const filteredContextIds = ContextActions.getFilteredContextIds(contextId, data);\n\n        filteredProjects.sort((a, b) => stateOrder.indexOf(a.state) - stateOrder.indexOf(b.state)).forEach(p => {\n            let projectTasks = tasks.filter(t => t.projectId === p.id);\n\n            if (!projectTasks.length) {\n                if (p.state === ProjectState.Active) {\n                    if (contextId) {\n                        if (p.contextId && filteredContextIds.indexOf(p.contextId) !== -1) {\n                            emptyActiveProjects.push(p);\n                        }\n                    } else {\n                        emptyActiveProjects.push(p);\n                    }\n                }\n                return;\n            }\n\n            taskBlock.push(\n                <React.Fragment key={`p-${p.id}`}>\n                    <div className=\"header link\" onClick={() => { setProjectId(p.id); setContextId(p.contextId); }}>\n                        {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''}\n                        <div style={{display: 'flex'}}>\n                            <div className=\"tags\">\n                                <ContextTag contextId={p.contextId} />\n                            </div>\n                            <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\n                        </div>\n                    </div>\n                    {projectTasks.map(t => renderTask(t))}\n                </React.Fragment>\n            );\n        });\n\n        const noProjectTasks = tasks.filter(t => t.projectId === null);\n\n        if (noProjectTasks.length) {\n            taskBlock.push(\n                <React.Fragment key=\"no-p\">\n                    <div className=\"header\">No Project</div>\n                    {noProjectTasks.map(t => renderTask(t))}\n                </React.Fragment>\n            );\n        }\n\n        for(const p of emptyActiveProjects) {\n            taskBlock.push(\n                <React.Fragment key={`p-${p.id}`}>\n                    <div className=\"header link\" onClick={() => { setProjectId(p.id); setContextId(p.contextId); }}>\n                        {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''} [Empty]\n                        <div style={{display: 'flex'}}>\n                            <div className=\"tags\">\n                                <ContextTag contextId={p.contextId} />\n                            </div>\n                            <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\n                        </div>\n                    </div>\n                </React.Fragment>\n            );\n        }\n\n        if (options.showCompleted) {\n            taskBlock.push(\n                <React.Fragment key=\"completed\">\n                    <div className=\"header\">Completed</div>\n                    {filterTasks(true, nestedContexts).map(t => renderTask(t))}\n                </React.Fragment>\n            );\n        }\n    } else {\n        taskBlock.push(\n            <React.Fragment key=\"tasks\">\n                {filterTasks(false, nestedContexts).map(t => renderTask(t))}\n                {options.showCompleted && <>\n                    <div className=\"header\">Completed</div>\n                    {filterTasks(true, nestedContexts).map(t => renderTask(t))}\n                </>}\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <div style={{display: 'flex', height: '100%'}}>\n            {options.showContextBar && <ContextBar contextId={contextId} onChange={setContextId} showTaskCount={true} />}\n            <div style={{width: '100%'}}>\n                <ToolSection>\n                    <SettingsCompactor alwaysVisible={() => (\n                        <div className=\"button\" onClick={() => { setContextId(null); setProjectId(null); }}>R</div>\n                    )} mobileOnly={() => (\n                        <div className=\"button\" style={{marginLeft: 'auto', marginRight: 8}} onClick={() => setOptions({ ...options, showContextBar: !options.showContextBar })}>C</div>\n                    )}>\n                        <select style={{padding: '0.3rem', display: 'block'}} value={contextId || ''} onChange={e => setContextId(e.target.value === '' ? null : e.target.value) }>\n                            <option value=\"\">All contexts</option>\n                            {data.contexts.map(c => (\n                                <option key={c.id} value={c.id}>{c.title}</option>\n                            ))}\n                        </select>\n                        <select style={{padding: '0.3rem', display: 'block'}} value={projectId || ''} onChange={e => setProjectId(e.target.value === '' ? null : e.target.value)}>\n                            <option value=\"\">All projects</option>\n                            {data.projects.filter(c => c.state === ProjectState.Active).map(c => (\n                                <option key={c.id} value={c.id}>{c.title}</option>\n                            ))}\n                        </select>\n                        <select style={{padding: '0.3rem', display: 'block'}} value={perspectiveId || ''} onChange={e => setPerspectiveId(e.target.value === '' ? null : e.target.value)}>\n                            <option value=\"\">Select Perspective</option>\n                            {perspectives.map(c => (\n                                <option key={c.id} value={c.id}>{c.title}</option>\n                            ))}\n                        </select>\n                        <div>\n                            <input id=\"completed-box\" type=\"checkbox\" checked={options.showCompleted} onChange={() => setOptions({ ...options, showCompleted: !options.showCompleted })} />\n                            <label htmlFor=\"completed-box\">Show completed</label>\n                        </div>\n                        <div>\n                            <input id=\"deferred-box\" type=\"checkbox\" checked={options.showDeferred} onChange={() => setOptions({ ...options, showDeferred: !options.showDeferred })} />\n                            <label htmlFor=\"deferred-box\">Show deferred</label>\n                        </div>\n                        <div>\n                            <input id=\"incubated-box\" type=\"checkbox\" checked={options.showIncubated} onChange={() => setOptions({ ...options, showIncubated: !options.showIncubated })} />\n                            <label htmlFor=\"incubated-box\">Show incubated</label>\n                        </div>\n                        <div>\n                            <input id=\"context-box\" type=\"checkbox\" checked={options.showContextBar} onChange={() => setOptions({ ...options, showContextBar: !options.showContextBar })} />\n                            <label htmlFor=\"context-box\">Show context bar</label>\n                        </div>\n                        <div>\n                            <input id=\"include-nested-box\" type=\"checkbox\" checked={options.includeNested} onChange={() => setOptions({ ...options, includeNested: !options.includeNested })} />\n                            <label htmlFor=\"include-nested-box\">Include nested contexts</label>\n                        </div>\n                    </SettingsCompactor>\n                    <input type=\"text\" className=\"input is-large is-wide\" placeholder=\"Add task...\" value={text} onChange={e => setText(e.target.value)} onKeyPress={onKeyPress} />\n                </ToolSection>\n                <div className=\"list\">\n                    {taskBlock}\n                </div>\n            </div>\n        </div>\n    );\n};\n","import {createInstance} from 'localforage';\n\nconst draftStore = createInstance({ name: 'drafts' });\n\nfunction getDraftKey(id: string|undefined) {\n    if(!id) {\n        return 'draft-new';\n    }\n\n    return `draft-${id}`;\n}\n\nexport async function hasDraft(id: string|undefined) {\n    const draft = await draftStore.getItem<string>(getDraftKey(id));\n    return !!draft;\n}\n\nexport async function getDraftIds() {\n    const keys = await draftStore.keys();\n    return keys.map(k => k.replace('draft-', ''));\n}\n\nexport async function getDraft(id: string|undefined) {\n    return await draftStore.getItem<string>(getDraftKey(id));\n}\n\nexport async function setDraft(id: string|undefined, text: string) {\n    return await draftStore.setItem(getDraftKey(id), text);\n}\n\nexport async function clearDraft(id: string|undefined) {\n    return await draftStore.removeItem(getDraftKey(id));\n}","import * as React from 'react';\n\nexport function TagInput(props: { tagState: TagState, onChange: (tagState: TagState) => void }) {\n    const [focus, setFocus] = React.useState(false)\n\n    const timeoutId = React.useRef<number|undefined>(undefined);\n    const tagInput = React.useRef<any>();\n\n    function onTextChange(e: React.ChangeEvent<HTMLInputElement>) {\n        props.onChange(props.tagState.withText(e.target.value))\n    }\n\n    function onKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'ArrowUp') {\n            props.onChange(props.tagState.decrementIndex());\n        } else if (e.key === 'ArrowDown') {\n            props.onChange(props.tagState.incrementIndex());\n        } else if (e.key === 'Enter') {\n            if (props.tagState.text === '') {\n                props.onChange(props.tagState.addSelectedTag());\n            } else {\n                props.onChange(props.tagState.addText());\n            }\n        } else if (e.key === 'Tab') {\n            props.onChange(props.tagState.addSelectedTag());\n            e.preventDefault();\n        } else if (e.key === 'Backspace') {\n            if (props.tagState.text === '') {\n                props.onChange(props.tagState.reopenLastTag());\n            }\n        }\n    }\n\n    function onClickTag(tag: string) {\n        props.onChange(props.tagState.addTag(tag));\n        tagInput.current.focus();\n    }\n\n    function onFocus() {\n        clearTimeout(timeoutId.current);\n\n        if(focus) {\n            return;\n        }\n\n        setFocus(true);\n    }\n\n    function onBlur() {\n        if(!focus) {\n            return;\n        }\n\n        timeoutId.current = setTimeout(() => {\n            setFocus(false);\n        }, 100) as any;\n    }\n\n    return (\n        <div className=\"tag-input\" onFocus={() => onFocus()} onBlur={() => onBlur()}>\n            <div className=\"tags\">\n                {props.tagState.selectedTags.map((t, i) => <Tag key={`tag-${t}-${i}`} name={t} />)}\n                <input ref={tagInput} placeholder=\"Tag\" type=\"text\" className=\"\" onChange={e => onTextChange(e)} onKeyDown={e => onKeyPress(e)} value={props.tagState.text} />\n            </div>\n            {focus && props.tagState.getFilteredAvailableTags().length > 0 &&\n                <div className=\"panel\">\n                    {props.tagState.getFilteredAvailableTags().slice(0, 10).map((t, i) => <div key={`available-tag-${t}`} style={props.tagState.index === i ? { background: '#078263'} : {}} onClick={() => onClickTag(t)}>{t}</div>)}\n                </div>\n            }\n        </div>\n    );\n}\n\nexport class TagState {\n    availableTags: string[];\n    selectedTags: string[];\n    text: string;\n    index: number;\n\n    constructor(availableTags: string[], selectedTags: string[], text = \"\", index = 0) {\n        this.availableTags = availableTags;\n        this.selectedTags = selectedTags;\n        this.text = text;\n        this.index = index;\n    }\n\n    withText(text: string) {\n        return new TagState(this.availableTags, this.selectedTags, text, this.index);\n    }\n\n    withAvailableTags(availableTags: string[]) {\n        return new TagState(availableTags, this.selectedTags, this.text, this.index);\n    }\n\n    withSelectedTags(selectedTags: string[]) {\n        return new TagState(this.availableTags, selectedTags, this.text, this.index);\n    }\n\n    decrementIndex() {\n        return new TagState(this.availableTags, this.selectedTags, this.text, Math.max(0, this.index - 1));\n    }\n\n    incrementIndex() {\n        return new TagState(this.availableTags, this.selectedTags, this.text, Math.max(0, Math.min(this.availableTags.length - 1, this.index + 1)));\n    }\n\n    addSelectedTag() {\n        return new TagState(this.availableTags, this.selectedTags.concat([this.getFilteredAvailableTags()[this.index]]), '', 0);\n    }\n\n    addTag(tag: string) {\n        return new TagState(this.availableTags, this.selectedTags.concat([tag]), '', 0);\n    }\n\n    addText() {\n        return new TagState(this.availableTags, this.selectedTags.concat([this.text]), '', 0);\n    }\n\n    reopenLastTag() {\n        const lastTag = this.selectedTags[this.selectedTags.length - 1];\n        return new TagState(this.availableTags, this.selectedTags.slice(0, this.selectedTags.length - 1), lastTag, 0);\n    }\n\n    getFilteredAvailableTags() {\n        return this.availableTags.filter(t => this.selectedTags.indexOf(t) === -1).filter(t => t.toLowerCase().indexOf(this.text) !== -1);\n    }\n\n    getTags() {\n        return this.selectedTags.join(' ');\n    }\n}\n\nexport const Tag: React.FC<{ name: string }> = props => {\n    return (\n        <div className=\"tag is-dark\">{props.name}</div>\n    );\n}\n\nexport const TagList: React.FC<{tags: string}> = props => {\n    return (\n        <div className=\"tags\" style={{marginBottom: 0}}>{props.tags && props.tags.split(' ').map((t, i) => <Tag key={i} name={t} />)}</div>\n    );\n}","import { Entity } from \"./db\";\nimport moment from \"moment\";\n\nexport type NoteMode = 'markdown'|'tree';\n\nexport interface Note extends Entity {\n    type: 'note',\n    mode: NoteMode|null;\n    title: string;\n    tags: string;\n    content: string;\n    contextId: string|null;\n    noteFor: Reference|null;\n    dailyDate: string|null;\n};\n\nexport interface Reference {\n    type: string;\n    id: string;\n};\n\nexport interface HasNote extends Entity {\n    noteId: string|null;\n}\n\nexport function getNoteTitle(note: Pick<Note, 'dailyDate'|'title'|'content'>) {\n    if (note.dailyDate) {\n        return `Daily - ${moment(note.dailyDate).format('MMMM Do, YYYY')}`;\n    }\n\n    if (note.title && note.title.length) {\n        return note.title;\n    }\n\n    const parsedTitle = /# (.+)/.exec(note.content);\n\n    if (parsedTitle && parsedTitle.length > 1) {\n        return parsedTitle[1];\n    }\n\n    return '';\n}\n\nexport const noteReferenceRegex = /\\[\\[([^\\]]+)\\]\\]/ig;\n\nfunction escapeRegExp(str: string) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nexport function getNoteContextTitlePrefixRegExp(contextTitle: string) {\n    return new RegExp(`^${escapeRegExp(contextTitle)}/`, 'i')\n}\n\nexport function getNoteTitleMatchRegExp(reference: string) {\n    return new RegExp(`^${escapeRegExp(reference)}$`, 'i')\n}\n\nexport function getNoteReferenceMatchRegExp(reference: string) {\n    return new RegExp(`\\\\[\\\\[${escapeRegExp(reference)}\\\\]\\\\]`, 'i')\n}\n\nexport function getNoteAliasReferenceMatchRegExp(alias: string) {\n    return new RegExp(`\\\\B@${escapeRegExp(alias)}`, 'i')\n}\n\nexport function extractReferences(text: string) {\n    if(!text) {\n        return [];\n    }\n\n    const regex = /\\[\\[([^\\]]+)\\]\\]/ig;\n    const results = [];\n    for(const match of text.matchAll(regex)) {\n        results.push(match[1])\n    }\n\n    return results;\n}\n\nexport function extractAllReferences(notes: Note[]) {\n    const results: { [reference: string]: { title: string, contextId: string|null, updatedAt: Date } } = {};\n\n    function getKey(title: string, contextId: string|null) {\n        return `${contextId}-${title.toLowerCase()}`\n    }\n\n    const existing = new Set<string>(notes.filter(n => n.title).map(n => getKey(n.title, n.contextId)));\n\n    for(const note of notes) {\n        const references = extractReferences(note.content);\n\n        for(const reference of references) {\n            const key = getKey(reference, note.contextId);\n            \n            if (existing.has(key)) {\n                continue;\n            }\n            \n            const existingResult = results[key];\n\n            if (existingResult && existingResult.updatedAt > new Date(note.updatedAt)) {\n                continue;\n            }\n\n            results[key] = {\n                title: reference,\n                contextId: note.contextId,\n                updatedAt: new Date(note.updatedAt)\n            };\n        }\n    }\n\n    return Object.values(results);\n}","import { Entity } from \"./db\";\nimport { HasNote } from \"./note\";\n\nexport interface Person extends Entity, HasNote {\n    type: 'person';\n    name: string;\n    alias: string|null;\n    birthday: string|null;\n}\n\nexport const mentionRegex = /\\B(@[^\\s()[\\].,!:]+)/g;\n\nexport function convertNameToAlias(name: string) {\n    if(!name) {\n        return null;\n    }\n\n    return name.toLowerCase().replace(/ /g, '_');\n}\n\nexport function getAlias(person: Person) {\n    return `${person.alias || convertNameToAlias(person.name)}`;\n}","import * as React from 'react';\nimport marked from 'marked';\nimport '../github-markdown.css';\nimport { useData } from '../model';\nimport { getNoteTitleMatchRegExp, getNoteContextTitlePrefixRegExp, noteReferenceRegex } from '../db/note';\nimport {useHistory} from 'react-router-dom';\nimport { mentionRegex, getAlias } from '../db/person';\n\n\nexport const MarkedViewer: React.FC<{ markdown: string; contextId: string|null }> = props => {\n    const history = useHistory();\n    const {data} = useData();\n\n    (window as any).lifeNavigate = function(url: string) {\n        history.push(url);\n        return false;\n    };\n\n    let markdown = props.markdown.replace(noteReferenceRegex, (_, group1) => {\n        let matchContextId = props.contextId;\n        let matchTitle = group1;\n\n        const prefixContext = data.contexts.find(x => getNoteContextTitlePrefixRegExp(x.title).test(group1));\n        if (prefixContext) {\n            matchTitle = matchTitle.substring(prefixContext.title.length + 1);\n            matchContextId = prefixContext.id;\n        }\n\n        const referenceRegExp = getNoteTitleMatchRegExp(matchTitle);\n        const note = data.notes.find(x => x.contextId === matchContextId && referenceRegExp.test(x.title));\n\n        if (note) {\n            const url = `/notes/${note.id}`;\n            return `<span style=\"color: #444\">[[ </span><a onclick=\"return lifeNavigate('${url}')\" href=\"${url}\">${group1}</a><span style=\"color: #444\"> ]]</span>`;\n        }\n\n        const url = `/notes/virtual?title=${encodeURIComponent(group1)}${props.contextId ? `&context=${props.contextId}` : ''}&source=${encodeURIComponent(`${window.location.pathname}`)}`;\n        return `<span style=\"color: #444\">[[ </span><a onclick=\"return lifeNavigate('${url}')\" href=\"${url}\">${group1}</a><span style=\"color: #444\"> ? ]]</span>`;\n    });\n\n    markdown = markdown.replace(mentionRegex, (_, group1) => {\n        const person = data.people.find(x => `@${getAlias(x)}` === group1);\n\n        if (person) {\n            const url = `/people/${person.id}?source=${encodeURIComponent(`${window.location.pathname}`)}`;\n            return `<a onclick=\"return lifeNavigate('${url}')\" href=\"${url}\" style=\"background: #333; padding: 0px 4px; border-radius: 4px\">${person.name}</a>`;\n        }\n\n        const url = `/people/virtual?alias=${encodeURIComponent(group1)}&source=${encodeURIComponent(`${window.location.pathname}`)}`;\n        return `<a onclick=\"return lifeNavigate('${url}')\" href=\"${url}\" style=\"background: #333; padding: 0px 4px; border-radius: 4px\">${group1}</a><span style=\"color: #444\"> ?</span>`;\n    });\n\n    const html = marked(markdown);\n    return (\n        <div className=\"marked-viewer note markdown-body\" dangerouslySetInnerHTML={{ __html: html }}></div>\n    );\n};","import * as React from 'react';\nimport { MarkedViewer } from './MarkedViewer';\nimport * as styles from '../layout/styles';\nimport { NoteMode } from '../db/note';\n\nimport AceEditor from \"react-ace\";\nimport {textCompleter, snippetCompleter, keyWordCompleter} from \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/mode-markdown\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport { Data } from '../model';\nimport { cx } from 'emotion';\n\nexport enum SplitMode {\n    Split,\n    Editor,\n    Preview\n}\n\nexport const NoteModeSelector: React.SFC<{mode: NoteMode, onModeChange: (mode: NoteMode) => void}> = props => (\n    <div className={cx(styles.horizontalSpace('.5rem'))}>\n        <button className=\"button\" style={{background: !props.mode || props.mode !== 'markdown' ? '#444' : undefined}} onClick={() => props.onModeChange('markdown')}>Markdown</button>\n        <button className=\"button\" style={{background: props.mode !== 'tree' ? '#444' : undefined}} onClick={() => props.onModeChange('tree')}>Tree</button>\n    </div>\n);\n\n\nexport const SplitModeSelector: React.SFC<{mode: SplitMode, onModeChange: (mode: SplitMode) => void}> = props => (\n    <div className={cx(styles.horizontalSpace('.5rem'))}>\n        <button className=\"button\" style={{background: props.mode !== SplitMode.Split ? '#444' : undefined}} onClick={() => props.onModeChange(SplitMode.Split)}>Split</button>\n        <button className=\"button\" style={{background: props.mode !== SplitMode.Editor ? '#444' : undefined}} onClick={() => props.onModeChange(SplitMode.Editor)}>Editor</button>\n        <button className=\"button\" style={{background: props.mode !== SplitMode.Preview ? '#444' : undefined}} onClick={() => props.onModeChange(SplitMode.Preview)}>Preview</button>\n    </div>\n);\n\nexport class SimpleSplitEditor extends React.Component<{ text: string, onTextChanged: (text: string) => void, expand?: boolean, mode: SplitMode, data: Data, contextId: string|null }, {}> {\n\n    render() {\n        const style: React.CSSProperties = {};\n\n        if(this.props.expand) {\n            style.width = '100%';\n            style.height = '100%';\n            style.zIndex = 100;\n            style.display = 'flex';\n            style.maxHeight = '100%';\n        }\n\n        const border = '1px solid #666';\n        const components = [];\n\n        let textAreaStyle: React.CSSProperties = {\n            flexGrow: 1, \n            minWidth: '50%', \n            borderTop: border, \n            height: '100%'\n        };\n\n        let markedStyle: React.CSSProperties = {\n            flexGrow: 1, \n            minWidth: '50%', \n            background: 'transparent', \n            padding: '1rem', \n            borderTop: border\n        };\n\n        if (this.props.mode === SplitMode.Split) {\n            textAreaStyle.borderRight = border;\n            markedStyle.overflowY = 'scroll';\n        }\n\n        if (this.props.mode === SplitMode.Editor || this.props.mode === SplitMode.Split) {\n            components.push(\n                    <AceEditor \n                        key=\"editor\"\n                        value={this.props.text} \n                        fontSize={18}\n                        style={textAreaStyle}\n                        onChange={e => this.props.onTextChanged(e)} \n                        mode=\"markdown\"\n                        theme=\"monokai\"\n                        showGutter={false} \n                        showPrintMargin={false}\n                        wrapEnabled={true}\n                        enableBasicAutocompletion={[snippetCompleter, textCompleter, keyWordCompleter] as any}\n                        enableLiveAutocompletion={true}\n                        enableSnippets={true}\n                    />\n            );\n        }\n\n        if (this.props.mode === SplitMode.Preview || this.props.mode === SplitMode.Split) {\n            components.push(\n                <div key=\"2\" style={markedStyle}>\n                    <MarkedViewer markdown={this.props.text} contextId={this.props.contextId} />\n                </div>\n            );\n        }\n\n        return (\n            <div style={style}>\n                {components}\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { useState, useRef } from 'react';\nimport { horizontalSpace } from '../layout/styles';\nimport { MarkedViewer } from './MarkedViewer';\nimport AceEditor, { ICommand } from \"react-ace\";\n\nimport {textCompleter, snippetCompleter, keyWordCompleter} from \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/mode-markdown\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport ReactAce from 'react-ace/lib/ace';\nimport { Loader } from './Loader';\nimport { extractReferences } from '../db/note';\nimport { useData } from '../model';\nimport { cx } from 'emotion';\nimport { getAlias } from '../db/person';\n\ninterface Node {\n    text: string;\n    nodes: Node[];\n}\n\nexport const TreeEditor: React.FC<{text: string, onTextChanged: (text: string) => void, contextId: string|null}> = (props) => {\n    const {data} = useData();\n    const [invalid] = useState(() => {\n        if (!props.text || props.text === '') {\n            return false;\n        }\n        try {\n            JSON.parse(props.text);\n            return false;\n        } catch {\n            return true;\n        }\n    })\n\n    const [nodes, setNodes] = useState<Node[]>(() => {\n        if (invalid) {\n            return [];\n        }\n\n        if (!props.text || props.text === '') {\n            return [\n                { text: '', nodes: [] }\n            ];\n        }\n\n        return JSON.parse(props.text);\n    });\n\n    const inputRef = useRef<ReactAce>(null);\n    const [active, setActive] = useState(nodes[0]);\n\n    const [noteTitles, setNoteTitles] = React.useState<string[]>();\n\n    React.useEffect(() => {\n        const noteCompletions  = data.notes.map(n => {\n            let result = extractReferences(n.content);\n\n            if (n.title && n.title.length) {\n                result.push(n.title);\n            }\n\n            if (n.contextId !== props.contextId) {\n                const context = data.contexts.find(c => c.id === n.contextId);\n\n                if (context) {\n                    result = result.map(x => `${context.title}/${x}`)\n                }\n            }\n\n            return result;\n        }).flat().filter(t => t !== null);\n\n        setNoteTitles(noteCompletions);\n    }, [props.contextId, data.contexts, data.notes]);\n\n    const [peopleAliases, setPeopleAliases] = React.useState<string[]>();\n\n    React.useEffect(() => {\n        const aliases  = data.people.map(n => getAlias(n)).filter(t => t !== null);\n        setPeopleAliases(aliases);\n    }, [data.people]);\n\n    if (invalid) {\n        return (\n            <div>Invalid tree content (not valid JSON).</div>\n        )\n    }\n\n    if (!noteTitles || !peopleAliases) {\n        return <Loader />;\n    }\n\n    const updateText = () => {\n        props.onTextChanged(JSON.stringify(nodes));\n    }\n\n    const onInputChanged = (node: Node, value: string) => {\n        node.text = value;\n        setNodes([...nodes]);\n        updateText();\n    };\n\n    const getParentNode = (targetNode: Node, searchNodes: Node[] = nodes, parentNode: Node|null = null): Node|null => {\n      for(const node of searchNodes) {\n          if (node === targetNode) {\n              return parentNode;\n          }\n\n          const childResult = getParentNode(targetNode, node.nodes, node);\n          if (childResult) {\n              return childResult;\n          }\n      }\n\n      return null;\n    };\n\n    const preorderTraversal = () => {\n        const result: Node[] = [];\n        const stack = [...nodes].reverse();\n\n        while(stack.length) {\n            let node = stack.pop();\n\n            if (!node) {\n                return result;\n            }\n\n            result.push(node);\n\n            for(let childNode of [...node.nodes].reverse()) {\n                stack.push(childNode);\n            }\n\n        }\n\n        return result;\n    };\n\n    const insertNode = (afterNode: Node, above = false) => {\n        const parentNode = getParentNode(afterNode);\n        const searchNodes = parentNode ? parentNode.nodes : nodes;\n        const nodeIndex = searchNodes.findIndex(x => x === afterNode);\n        const node: Node = { text: '', nodes: [] };\n        searchNodes.splice(nodeIndex + (above ? 0 : 1), 0, node);\n        setNodes([...nodes]);\n        return node;\n    };\n\n    const removeNode = (node: Node) => {\n        const parentNode = getParentNode(node);\n        const searchNodes = parentNode ? parentNode.nodes : nodes;\n        const nodeIndex = searchNodes.findIndex(x => x === node);\n        searchNodes.splice(nodeIndex, 1);\n        setNodes([...nodes]);\n        return node;\n    };\n\n    const removeNodeIfEmpty = (node: Node) => {\n        if (node.text.length || node.nodes.length) {\n            return;\n        }\n        removeNode(node);\n    };\n\n    const indentNode = (node: Node) => {\n        const parentNode = getParentNode(node);\n        const searchNodes = parentNode ? parentNode.nodes : nodes;\n        const nodeIndex = searchNodes.findIndex(x => x === node);\n\n        if (nodeIndex === 0) {\n            return;\n        } else {\n            searchNodes.splice(nodeIndex, 1);\n            searchNodes[nodeIndex - 1].nodes.push(node);\n            setNodes([...nodes]);\n        }\n    };\n\n    const unindentNode = (node: Node) => {\n        const parentNode = getParentNode(node);\n\n        if(parentNode === null) {\n            return;\n        }\n\n        const parentParentNode = getParentNode(parentNode);\n        const targetNodes = parentParentNode ? parentParentNode.nodes : nodes;\n        const parentNodeIndex = targetNodes.findIndex(x => x === parentNode);\n        targetNodes.splice(parentNodeIndex + 1, 0, node);\n        const nodeIndex = parentNode.nodes.findIndex(x => x === node);\n        parentNode.nodes.splice(nodeIndex, 1);\n\n        setNodes([...nodes]);\n    };\n\n    const commands: ICommand[] = [\n        { name: 'indent', bindKey: { win: 'tab', mac: 'tab' }, exec: () => {\n            setTimeout(() => {\n                indentNode(active);\n            }, 0);\n            return true;\n        }},\n        { name: 'unindent', bindKey: { win: 'shift+tab', mac: 'shift+tab' }, exec: () => {\n            setTimeout(() => {\n                unindentNode(active);\n            }, 0);\n            return true;\n        }},\n        { name: 'enter', bindKey: { win: 'enter', mac: 'enter' }, exec: () => {\n            if (active.text === '') {\n                return;\n            }\n            const above = inputRef.current && inputRef.current.editor.getCursorPosition().row === 0 && inputRef.current.editor.getCursorPosition().column === 0;\n            setTimeout(() => {\n                const newNode = insertNode(active, !!above);\n                setActive(newNode);\n            }, 0);\n            return true;\n        }},\n        { name: 'up', bindKey: { win: 'up', mac: 'up' }, exec: () => {\n            const searchNodes = preorderTraversal();\n            let activeIndex = searchNodes.findIndex(x => x === active);\n            activeIndex = Math.max(0, activeIndex - 1);\n            setTimeout(() => {\n                setActive(searchNodes[activeIndex]);\n                removeNodeIfEmpty(active);\n            }, 0);\n            return true;\n        }},\n        { name: 'down', bindKey: { win: 'down', mac: 'down' }, exec: () => {\n            const searchNodes = preorderTraversal();\n            let activeIndex = searchNodes.findIndex(x => x === active);\n            activeIndex = Math.min(searchNodes.length - 1, activeIndex + 1);\n            setTimeout(() => {\n                setActive(searchNodes[activeIndex]);\n                removeNodeIfEmpty(active);\n            }, 0);\n            return true;\n        }},\n        { name: 'space', bindKey: { win: 'space', mac: 'space' }, exec: () => {\n            const atStart = inputRef.current && inputRef.current.editor.getCursorPosition().row === 0 && inputRef.current.editor.getCursorPosition().column === 0;\n            if (atStart) {\n                setTimeout(() => {\n                    indentNode(active);\n                }, 0);\n                return true;\n            }\n            return false;\n        }},\n        { name: 'backspace', bindKey: { win: 'backspace', mac: 'backspace' }, exec: () => {\n            const atStart = inputRef.current && inputRef.current.editor.getCursorPosition().row === 0 && inputRef.current.editor.getCursorPosition().column === 0;\n            if (atStart) {\n                setTimeout(() => {\n                    unindentNode(active);\n                }, 0);\n                return true;\n            }\n            return false;\n        }}\n    ];\n\n    // Look at https://github.com/ajaxorg/ace/blob/41ac47ec9e26f65fe0ffedeedf14b525a22f5462/lib/ace/ext/language_tools.js#L42-L48\n    const completions = {\n        getCompletions: (editor: any, session: any, pos: any, prefix: any, callback: CompletionCallback) => {\n            // console.log('editor', editor, 'session', session, 'pos', pos, 'prefix', prefix, 'callback', callback);\n            const token = session.getTokenAt(pos.row, pos.column);\n\n            if (!token) {\n                return;\n            }\n            \n            function hasPrefix(requiredPrefix: string) {\n                const strWithPrefix = token.value.substring(pos.column - prefix.length - requiredPrefix.length);\n                return strWithPrefix.startsWith(requiredPrefix);\n            }\n\n            if (hasPrefix('[[')) {\n                const completions = noteTitles.map(n => ({\n                    caption: n,\n                    snippet: n,\n                    meta: 'note',\n                }))\n\n                callback(null, completions);\n            } else if (hasPrefix('@')) {\n                const completions = peopleAliases.map(n => ({\n                    caption: n,\n                    snippet: n,\n                    meta: 'person',\n                }))\n\n                callback(null, completions);\n            }\n        }\n    }\n\n    const renderNode = (node: Node, index: number, level: number) => {\n        const isActive = node === active;\n        return (\n            <React.Fragment key={`${level}-${index}`}>\n                <div style={{display: 'flex', background: isActive ? '#292929' : undefined, padding: '.6rem .8rem'}} onClick={() => { if(!isActive) { setActive(node); }; }}>\n                    <div style={{letterSpacing: '.5rem', color: isActive ? '#078263' : '#777', lineHeight: 1.5}}>•</div>\n                    {isActive\n                        ? <AceEditor\n                            key=\"editor\"\n                            ref={inputRef}\n                            value={node.text}\n                            fontSize={16}\n                            style={{background: 'transparent', width: '100%'}}\n                            onChange={e => onInputChanged(node, e)}\n                            mode=\"markdown\"\n                            theme=\"monokai\"\n                            focus\n                            highlightActiveLine={false}\n                            showGutter={false}\n                            showPrintMargin={false}\n                            wrapEnabled={true}\n                            maxLines={Infinity}\n                            commands={commands}\n                            enableBasicAutocompletion={[completions, snippetCompleter, textCompleter, keyWordCompleter] as any}\n                            enableLiveAutocompletion={true}\n                            enableSnippets={true}\n                            />\n                        : <MarkedViewer markdown={node.text} contextId={props.contextId} />}\n                </div>\n                <div style={{borderLeft: '1px solid #555', marginLeft: 16, paddingLeft: 16}}>\n                    {node.nodes.map((n, i) => renderNode(n, i, level + 1))}\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    return (\n        <>\n            <div style={{display: 'flex', background: '#444', position: 'fixed', height: 36, bottom: 0, left: 0, right: 0}} className={cx(horizontalSpace('.5rem'))}>\n                    <div className=\"button\" onClick={e => { unindentNode(active); inputRef.current && inputRef.current.editor.focus(); }}>&larr;</div>\n                    <div className=\"button\" onClick={e => { indentNode(active); inputRef.current && inputRef.current.editor.focus(); }}>&rarr;</div>\n                    <div className=\"button\" onClick={e => {\n                        if (!inputRef.current) {\n                            return;\n                        }\n                        inputRef.current.editor.session.insert(inputRef.current.editor.getCursorPosition(), '[[');\n                        inputRef.current.editor.focus();\n                    }}>[[</div>\n                    <div className=\"button\" onClick={e => {\n                        if (!inputRef.current) {\n                            return;\n                        }\n                        inputRef.current.editor.session.insert(inputRef.current.editor.getCursorPosition(), ']]');\n                        inputRef.current.editor.focus();\n                    }}>]]</div>\n            </div>\n            <div style={{height: '100%', marginBottom: 36}}>\n                {nodes.map((n, i) => renderNode(n, i, 0))}\n            </div>\n        </>\n    );\n};\n\ninterface Completion {\n    value?: string;\n    meta: string;\n    type?: string;\n    caption?: string;\n    snippet?: any;\n    score?: number;\n    exactMatch?: number;\n    docHTML?: string;\n}\n\ntype CompletionCallback = (error: Error|null, results: Completion[]) => void;","import * as React from 'react';\nimport { Data } from '../model';\nimport { ContextState } from '../db/context';\nimport _ from 'lodash';\n\nexport const ContextSelector: React.FC<{contextId: string|null, data: Data, onChange: (contextId: string|null) => void}> = (props) => {\n    const activeContexts = _.orderBy(props.data.contexts.filter(x => x.state === ContextState.Active), x => x.title);\n    const inactiveContexts = _.orderBy(props.data.contexts.filter(x => x.state !== ContextState.Active), x => x.title);\n\n    return (\n        <select className=\"input is-large\" value={props.contextId || ''} onChange={e => props.onChange(e.target.value)}>\n            <option value=\"\">Not set</option>\n            {activeContexts.map(c => (<option key={c.id} value={c.id}>{c.title}</option>))}\n            <option value=\"--inactive--\" disabled>-- Inactive</option>\n            {inactiveContexts.map(c => (<option key={c.id} value={c.id}>{c.title}</option>))}\n        </select>\n    );\n}","import * as React from 'react';\nimport * as draftStorage from '../draftStorage';\nimport { TagInput, TagState } from './TagInput';\nimport { ToolSection } from '../framework/ToolSection';\nimport { SimpleSplitEditor, SplitMode, SplitModeSelector, NoteModeSelector } from './SimpleSplitEditor';\nimport { isMobile } from './Layout';\nimport { db } from '../db/db';\nimport { Reference, NoteMode, getNoteTitle } from '../db/note';\nimport { TreeEditor } from './TreeEditor';\nimport { SettingsCompactor } from './SettingsCompactor';\nimport './NoteEditor.scss';\nimport { Loader } from '../components/Loader';\nimport { ContextSelector } from '../components/ContextSelector';\nimport { Data } from '../model';\nimport moment from 'moment';\n\nexport class NoteEditor extends React.Component<{onNoteAdded: () => void, id?: string, title?: string, text?: string, tags?: string, contextId: string|null, availableTags: string[], noteFor: Reference|null, noteMode?: NoteMode, data: Data, dailyDate: string|null}, {title: string, text: string, tags: string, tagState: TagState, splitMode: SplitMode, noteMode: NoteMode, contextId: string|null, loaded: boolean, dailyDate: string|null}> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            loaded: false,\n            title: '', \n            text: '', \n            tags: '', \n            tagState: new TagState([], []), \n            splitMode: isMobile() ? SplitMode.Editor : SplitMode.Split, \n            noteMode: 'tree',\n            contextId: null,\n            dailyDate: null,\n        };\n\n        this.onTextChanged = this.onTextChanged.bind(this);\n        this.onSave = this.onSave.bind(this);\n    }\n\n    async componentDidMount() {\n        const draft = await draftStorage.getDraft(this.props.id);\n\n        const title = this.props.title;\n        let text = this.props.text;\n        const tags = this.props.tags;\n        const noteMode = this.props.noteMode;\n        const contextId = this.props.contextId;\n        const dailyDate = this.props.dailyDate;\n\n        let state: any = {};\n\n        if (draft !== null && draft !== text && draft.length > 0) {\n            text = draft;\n        }\n\n        if (title !== undefined) {\n            state.title = title;\n        }\n        \n        if (text !== undefined) {\n            state.text = text;\n        }\n\n        if (noteMode !== undefined) {\n            state.noteMode = noteMode;\n        }\n\n        if (contextId !== undefined) {\n            state.contextId = contextId;\n        }\n\n        if (dailyDate !== undefined) {\n            state.dailyDate = dailyDate;\n        }\n\n        state.tagState = this.state.tagState\n            .withAvailableTags(this.props.availableTags);\n\n        if (tags && tags.length > 0) {\n            state.tagState = state.tagState.withSelectedTags(tags.split(' '));\n        }\n\n        state.loaded = true;\n        this.setState(state);\n    }\n\n    componentWillReceiveProps(props: any) {\n        this.setState({tagState: this.state.tagState.withAvailableTags(props.availableTags)});\n    }\n\n    onTitleChanged(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({ title: e.target.value });\n    }\n\n    onTextChanged(text: string) {\n        if (text !== this.props.text) {\n            draftStorage.setDraft(this.props.id, text);\n        }\n\n        this.setState({text})\n    }\n\n    async onSave() {\n        const id = this.props.id || null;\n\n        if (id) {\n            let note = await db.notes.get(id);\n\n            if (note === null) {\n                throw new Error('Note is null?');\n            }\n\n            note.title = this.state.title;\n            note.content = this.state.text;\n            note.tags = this.state.tagState.getTags();\n            note.mode = this.state.noteMode;\n            note.contextId = this.state.contextId;\n            note.dailyDate = this.state.dailyDate;\n\n            await db.notes.save(note);\n        } else {\n            await db.notes.create({\n                title: this.state.title,\n                content: this.state.text,\n                tags: this.state.tagState.getTags(),\n                noteFor: null,\n                mode: this.state.noteMode,\n                contextId: this.state.contextId,\n                dailyDate: this.state.dailyDate\n            });\n        }\n\n        await draftStorage.clearDraft(this.props.id);\n        this.props.onNoteAdded();\n    }\n\n    render() {\n        const updateDailyDate = (value: string) => {\n            if (value === '') {\n                this.setState({dailyDate: null});\n            } else {\n                this.setState({dailyDate: new Date(value).toISOString()});\n            }\n        }\n\n        if (!this.state.loaded) {\n            return <Loader />;\n        }\n\n        return (\n            <div style={{width: '100%', flex: 1, display: 'flex', flexDirection: 'column'}}>\n                <ToolSection verticalAround={false}>\n                    <SettingsCompactor wideStyle={{justifyContent: 'space-between'}} alwaysVisible={() => (\n                        <>\n                            {this.props.id === undefined ?\n                                <button className=\"button is-primary\" onClick={this.onSave}>Add note</button> :\n                                <button className=\"button is-primary\" onClick={this.onSave}>Update note</button>}\n                            <ContextSelector contextId={this.state.contextId} data={this.props.data} onChange={contextId => this.setState({ contextId })} />\n                            <input type=\"date\" className=\"input is-large\" value={(this.state.dailyDate && moment(this.state.dailyDate).format('YYYY-MM-DD')) || ''} onChange={e => updateDailyDate(e.target.value)} />\n                        </>\n                    )}>\n                        <NoteModeSelector mode={this.state.noteMode} onModeChange={noteMode => this.setState({ noteMode })} />\n                        <SplitModeSelector mode={this.state.splitMode} onModeChange={splitMode => this.setState({ splitMode })} />\n                    </SettingsCompactor>\n                </ToolSection>\n                <ToolSection>\n                    {!this.props.noteFor && !this.state.dailyDate && (\n                        <>\n                            <input type=\"text\" placeholder=\"Title\" className=\"input is-large is-wide\" value={this.state.title} onChange={this.onTitleChanged.bind(this)} />\n                            <TagInput tagState={this.state.tagState} onChange={s => this.setState({tagState: s})} />\n                        </>\n                    )}\n                    {this.state.dailyDate && (\n                        <h1>{getNoteTitle({ dailyDate: this.state.dailyDate, title: this.state.title, content: this.state.text })}</h1>\n                    )}\n                </ToolSection>\n                <div style={{flex: 1}}>\n                    {this.state.noteMode === 'markdown' ? (\n                        <SimpleSplitEditor text={this.state.text} expand={true} onTextChanged={this.onTextChanged} mode={this.state.splitMode} data={this.props.data} contextId={this.state.contextId} />\n                    ) : (\n                        <TreeEditor text={this.state.text} onTextChanged={this.onTextChanged} contextId={this.state.contextId} />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { NoteEditor } from '../../components/NoteEditor';\nimport { useData } from '../../model';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { useQueryState } from '../../lib/UseQueryState';\nimport * as styles from '../../layout/styles';\nimport { cx } from 'emotion';\n\nexport const EditNotePage: React.FC<{id?: string }> = props => {\n    const {data, refreshData} = useData();\n    let tags: {[key: string]: number} = {};\n    const [goBack, setGoBack] = React.useState(false);\n    const [source] = useQueryState(null, 'source');\n\n    if (goBack) {\n        return <Redirect to={source ? decodeURIComponent(source) : '/'} />;\n    }\n\n    for (const note of data.notes || []) {\n\n        if(!note.tags || !note.tags.length) {\n            continue;\n        }\n\n        for(const tag of note.tags.split(' ')) {\n            if(!tags[tag]) {\n                tags[tag] = 0;\n            }\n\n            tags[tag] += 1;\n        }\n    }\n\n    const availableTags = Object.keys(tags).sort((a, b) => tags[b] - tags[a]);\n\n    if (props.id) {\n        let note = data.notes.find(x => x.id === props.id);\n\n        if (!note) {\n            return <div>Note not found.</div>\n        }\n\n        return (\n            <>\n                <div style={{height: '100%', display: 'flex', flexDirection: 'column'}}>\n                    <ToolSection>\n                        <div className={cx(styles.horizontalSpace('.5rem'))}>\n                            <NavLink to={source ? decodeURIComponent(source) : '/'} className=\"button\">Back</NavLink>\n                            {!note.noteFor && <NavLink to={`/notes/${note.id}`} className=\"button\">Show</NavLink>}\n                        </div>\n                    </ToolSection>\n                    <NoteEditor {...note} data={data} text={note.content}  availableTags={availableTags} noteMode={note.mode||'tree'} dailyDate={note.dailyDate} onNoteAdded={() => { refreshData(); setGoBack(true); }} />\n                </div>\n            </>\n        );\n    }\n\n    const urlParams = new URLSearchParams(window.location.search);\n    const title = urlParams.get('title');\n    const contextId = urlParams.get('context');\n\n    return (\n        <>\n            <div style={{height: '100%', display: 'flex', flexDirection: 'column'}} >\n                <ToolSection>\n                    <NavLink to={`/`} className=\"button\">Back</NavLink>\n                </ToolSection>\n                <NoteEditor title={title || undefined} contextId={contextId} availableTags={availableTags} data={data} noteFor={null} dailyDate={null} noteMode={'tree'} onNoteAdded={() => { refreshData(); setGoBack(true); }} />\n            </div>\n        </>\n    );\n}","import * as React from 'react';\nimport { useState } from 'react';\nimport { MarkedViewer } from './MarkedViewer';\n\nimport \"ace-builds/src-noconflict/mode-markdown\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport { Loader } from './Loader';\nimport { getNoteReferenceMatchRegExp, getNoteAliasReferenceMatchRegExp } from '../db/note';\n\ninterface Node {\n    text: string;\n    nodes: Node[];\n}\n\nexport const TreeViewer: React.FC<{ json: string, contextId: string|null, referenceTitle?: string, personAlias?: string }> = (props) => {\n    const [nodes, setNodes] = useState<Node[]|null>(null);\n    const [invalid, setInvalid] = useState(false);\n\n    React.useEffect(() => {\n        try {\n            let nodes = [];\n            if (props.json) {\n                nodes = JSON.parse(props.json)\n            }\n            setNodes(nodes);\n        } catch {\n            setInvalid(true);\n        }\n    }, [props.json]);\n\n    if (invalid) {\n        return <div>Invalid json</div>;\n    }\n\n    if (!nodes) {\n        return <Loader />;\n    }\n\n    const renderNode = (node: Node, index: number, level: number, filter: RegExp|null) => {\n        const extra: JSX.Element[] = [];\n        if (filter) {\n            if (filter.test(node.text)) {\n                filter = null;\n                if (level > 0) {\n                    extra.push(<div key={`extra-${index}-${level}`} style={{paddingTop: 8, color: '#aaa'}}>{'... > '.repeat(level)}</div>)\n                }\n            } else {\n                return (\n                    <React.Fragment key={`${level}-${index}`}>\n                        {node.nodes.map((n, i) => renderNode(n, i, level + 1, filter))}\n                    </React.Fragment>\n                );\n            }\n        }\n\n        return (\n            <React.Fragment key={`${level}-${index}`}>\n                {extra}\n                <div style={{display: 'flex', padding: '.6rem .8rem'}}>\n                    <div style={{letterSpacing: '.5rem', color: '#777', lineHeight: 1.5}}>•</div>\n                    <MarkedViewer markdown={node.text} contextId={props.contextId} />\n                </div>\n                <div style={{borderLeft: '1px solid #555', paddingLeft: 16, marginLeft: 16}}>\n                    {node.nodes.map((n, i) => renderNode(n, i, level + 1, filter))}\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    let referenceRegExp = props.referenceTitle ? getNoteReferenceMatchRegExp(props.referenceTitle) : null;\n\n    if (props.personAlias) {\n        referenceRegExp = getNoteAliasReferenceMatchRegExp(props.personAlias);\n    }\n\n    return (\n        <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'space-between', height: '100%'}}>\n            <div style={{width: '100%'}}>\n                {nodes.map((n, i) => renderNode(n, i, 0, referenceRegExp))}\n            </div>\n        </div>\n    );\n};","import * as React from 'react';\nimport { useData } from '../model';\nimport { MarkedViewer } from './MarkedViewer';\nimport { getNoteTitle, getNoteReferenceMatchRegExp, getNoteAliasReferenceMatchRegExp } from '../db/note';\nimport { Link } from 'react-router-dom';\nimport * as _ from 'lodash';\nimport { TreeViewer } from './TreeViewer';\n\nexport const ReferenceViewer: React.FC<{ title: string, contextId: string|null }> = (props) => {\n    const {data} = useData();\n    const referenceRegExp = getNoteReferenceMatchRegExp(props.title);\n    const contextNotes = _.orderBy(data.notes.filter(x => x.contextId === props.contextId && referenceRegExp.test(x.content)), x => x.updatedAt, 'desc');\n\n    if (contextNotes.length === 0) {\n        return null;\n    }\n\n    return (\n        <div style={{paddingTop: 32}}>\n            <div style={{fontWeight: 'bold'}}>{contextNotes.length} linked references for \"{props.title}\"</div>\n            {contextNotes.map(note => (\n                <div key={note.id} style={{marginTop: 16}}>\n                    <Link to={`/notes/${note.id}`} style={{color: '#078263'}}>{getNoteTitle(note)}</Link>\n                    <div style={{paddingLeft: 16, background: '#222', marginTop: 8}}>\n                        {note.mode === 'markdown' \n                        ? <MarkedViewer markdown={note.content} contextId={note.contextId} /> \n                        : <TreeViewer json={note.content} contextId={note.contextId} referenceTitle={props.title} />}\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport const PersonReferenceViewer: React.FC<{ alias: string }> = (props) => {\n    const {data} = useData();\n    const referenceRegExp = getNoteAliasReferenceMatchRegExp(props.alias);\n    const matchingNotes = _.orderBy(data.notes.filter(x => referenceRegExp.test(x.content)), x => x.updatedAt, 'desc');\n\n    if (matchingNotes.length === 0) {\n        return null;\n    }\n\n    return (\n        <div style={{paddingTop: 32}}>\n            <div style={{fontWeight: 'bold'}}>{matchingNotes.length} linked references for \"{props.alias}\"</div>\n            {matchingNotes.map(note => (\n                <div key={note.id} style={{marginTop: 16}}>\n                    <Link to={`/notes/${note.id}`} style={{color: '#078263'}}>{getNoteTitle(note)}</Link>\n                    <div style={{paddingLeft: 16, background: '#222', marginTop: 8}}>\n                        {note.mode === 'markdown' \n                        ? <MarkedViewer markdown={note.content} contextId={note.contextId} /> \n                        : <TreeViewer json={note.content} contextId={note.contextId} personAlias={props.alias} />}\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { MarkedViewer } from '../../components/MarkedViewer';\nimport { ReferenceViewer } from '../../components/ReferenceViewer';\nimport { useData } from '../../model';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { useQueryState } from '../../lib/UseQueryState';\nimport { TagList } from '../../components/TagInput';\nimport { ContextTag } from '../../components/ContextTag';\nimport { getNoteTitle } from '../../db/note';\nimport { TreeViewer } from '../../components/TreeViewer';\n\nexport const ShowNotePage: React.SFC<{id: string}> = (props) => {\n    const {data} = useData();\n    const [source] = useQueryState(null, 'source');\n    const note = data.notes.find(x => x.id === props.id);\n\n    if (!note) {\n        return <div>Note not found.</div>\n    }\n\n    let viewer = null;\n\n    if (!note.mode || note.mode === 'markdown') {\n        viewer = <MarkedViewer markdown={note.content} contextId={note.contextId} />;\n    } else {\n        viewer = <TreeViewer json={note.content} contextId={note.contextId} />;\n    }\n\n    return (\n        <>\n            <ToolSection>\n                <NavLink to={source ? decodeURIComponent(source) : '/'} className=\"button\">Back</NavLink>\n                <NavLink to={`/notes/${note.id}/edit`} className=\"button\">Edit</NavLink>\n            </ToolSection>\n            <div className=\"panel\">\n                <div className=\"content\" style={{padding: '1rem'}}>\n                    <h1>{getNoteTitle(note)}</h1>\n                    <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                        <TagList tags={note.tags} />\n                        <ContextTag contextId={note.contextId} />\n                    </div>\n                    {viewer}\n                    <ReferenceViewer title={getNoteTitle(note)} contextId={note.contextId} />\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport const ShowVirtualNotePage: React.SFC<{}> = (props) => {\n    const [source] = useQueryState(null, 'source');\n\n    const urlParams = new URLSearchParams(window.location.search);\n    const title = urlParams.get('title');\n    const contextId = urlParams.get('context');\n\n    if(!title) {\n        return <div>Note not found.</div>\n    }\n\n    return (\n        <>\n            <ToolSection>\n                <NavLink to={source ? decodeURIComponent(source) : '/'} className=\"button\">Back</NavLink>\n                <NavLink to={`/notes/new?title=${encodeURIComponent(title)}${contextId ? `&context=${contextId}` : ''}&source=${encodeURIComponent(`${window.location.pathname}`)}`} className=\"button\">Create</NavLink>\n            </ToolSection>\n            <div className=\"panel\">\n                <div className=\"content\" style={{padding: '1rem'}}>\n                    <h1>{title}</h1>\n                    <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                        <ContextTag contextId={contextId} />\n                    </div>\n                    <ReferenceViewer title={title} contextId={contextId} />\n                </div>\n            </div>\n        </>\n    );\n}","import * as React from 'react';\n\ninterface ListProps<T> {\n    renderItem: (item: T) => JSX.Element;\n    items: T[];\n}\n\nexport function List<T>(props: ListProps<T>) {\n    return (\n        <div className=\"list\">\n            {props.items.map(props.renderItem)}\n        </div>\n    );\n}","import * as React from 'react';\nimport moment from 'moment';\nimport * as draftStorage from '../../draftStorage';\nimport { TagList } from '../../components/TagInput';\nimport { NavLink } from 'react-router-dom';\nimport lunr from 'lunr';\nimport { debounce } from 'throttle-debounce';\nimport { useData } from '../../model';\nimport * as styles from '../../layout/styles';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { getNoteTitle, extractAllReferences } from '../../db/note';\nimport { List } from '../../framework/List';\nimport { isMobile } from '../../components/Layout';\nimport { useQueryState, useQueryStateT, useQueryStateBoolean } from '../../lib/UseQueryState';\nimport { SettingsCompactor } from '../../components/SettingsCompactor';\nimport { ContextTag } from '../../components/ContextTag';\nimport _ from 'lodash';\nimport { Loader } from '../../components/Loader';\nimport { cx } from 'emotion';\n\nexport const NotePage: React.SFC<{ }> = (props) => {\n    const {data, refreshData} = useData();\n\n    const [text, setText] = useQueryState(null, 'search');\n    const [filterTags, setFilterTags] = useQueryStateT<string[]>([], 'tags', s => s !== null ? s.split('|') : [], a => a.join('|'));\n    const [showTagsBar, setShowTagsBar] = React.useState(!isMobile());\n    const [searchResult, setSearchResult] = React.useState<{ id: string, score: number }[]|null>(null);\n    const [searchIndex, setSearchIndex] = React.useState<lunr.Index|null>(null);\n    const [showNotesFor, setShowNotesFor] = React.useState(false);\n    const [draftIds, setDraftIds] = React.useState<string[]>([]);\n    const [showNoContext, setShowNoContext] = useQueryStateBoolean(false, 'no-context');\n    const [virtualReferences, setVirtualReferences] = React.useState<{ title: string, contextId: string|null, updatedAt: Date }[]>();\n\n    React.useEffect(() => {\n        draftStorage.getDraftIds().then(setDraftIds);\n    }, []);\n\n    React.useEffect(() => {\n        const refs = extractAllReferences(data.notes);\n        setVirtualReferences(refs);\n    }, [data.notes])\n\n    const onClearDraft = (id: string) => {\n        draftStorage.clearDraft(id);\n        refreshData();\n    }\n\n    const onSearch = (text: string) => {\n        if (!text || !text.length) {\n            setSearchResult(null);\n            return;\n        }\n\n        if (searchIndex === null) {\n            const idx = lunr(function() {\n                this.field('title');\n                this.field('text');\n    \n                for(let note of data.notes) {\n                    this.add({\n                        id: note.id,\n                        title: note.title,\n                        text: note.content\n                    });\n                }\n            });\n\n            setSearchIndex(idx);\n            const result = idx.search(text);\n            setSearchResult(result.map(r => { return { id: r.ref, score: r.score }; }));\n            return;\n        }\n\n        const result = searchIndex.search(text);\n        setSearchResult(result.map(r => { return { id: r.ref, score: r.score }; }));\n    };\n\n    const debouncedSearch = debounce(100, onSearch);\n\n    const toggleTag = (tag: string) => {\n        if (filterTags.indexOf(tag) === -1) {\n            setFilterTags(filterTags.concat([ tag ]));\n        } else {\n            setFilterTags(filterTags.filter(x => x !== tag));\n        }\n    }\n\n    let notes = data.notes || [];\n    let tags: {[key: string]: number} = {};\n\n    for(const tag of filterTags) {\n        notes = notes.filter(x => x.tags.split(' ').indexOf(tag) !== -1);\n    }\n\n    if (!showNotesFor) {\n        notes = notes.filter(x => !x.noteFor);\n    }\n\n    if (showNoContext) {\n        notes = notes.filter(x => !x.contextId);\n    }\n\n    if (searchResult) {\n        notes = searchResult.map(r => {\n            let idx =  notes.findIndex(n => n.id === r.id);\n            return notes[idx];\n        }).filter(n => n);\n    }\n\n    for (const note of notes) {\n\n        if(!note.tags) {\n            continue;\n        }\n\n        for(const tag of note.tags.split(' ')) {\n            if(!tags[tag]) {\n                tags[tag] = 0;\n            }\n\n            tags[tag] += 1;\n        }\n    }\n\n    const tagCounts = Object.keys(tags).map(k => { return { key: k, count: tags[k], active: filterTags.indexOf(k) !== -1 }; }).sort((a, b) => b.count - a.count);\n\n    let source: string|null = null;\n    if (window.location.search.length) {\n        const urlParams = new URLSearchParams(window.location.search);\n        source = `?source=${encodeURIComponent(`${window.location.pathname}?${urlParams.toString()}`)}`\n    }\n\n    if(!virtualReferences) {\n        return <Loader />;\n    }\n\n    interface NoteOutput {\n        id: string|null;\n        title: string;\n        tags: string|null;\n        contextId: string|null;\n        updatedAt: Date;\n        url: string;\n        isRef: boolean;\n    }\n\n    const notesOutput: NoteOutput[] = notes.map(n => ({\n        id: n.id,\n        title: getNoteTitle(n),\n        tags: n.tags,\n        contextId: n.contextId,\n        updatedAt: new Date(n.updatedAt),\n        url: `/notes/${n.id}${source ? source : ''}`,\n        isRef: false\n    }));\n\n    const virtualReferencesOutput: NoteOutput[] = virtualReferences.map(v => ({\n        id: null,\n        title: v.title,\n        tags: null,\n        contextId: v.contextId,\n        updatedAt: v.updatedAt,\n        url: `/notes/virtual?title=${encodeURIComponent(v.title)}${v.contextId ? `&context=${v.contextId}` : ''}&source=${encodeURIComponent(`${window.location.pathname}`)}`,\n        isRef: true\n    }));\n\n    const output = _.orderBy(notesOutput.concat(virtualReferencesOutput), o => o.updatedAt, 'desc');\n\n    return (\n        <div style={{display: 'flex', height: '100%'}}>\n            {showTagsBar && <div style={{borderRight: '1px solid #666', width: 200}}>\n                <List<{key: string, count: Number, active: boolean}> items={tagCounts} renderItem={i => {\n                    return (\n                        <div key={i.key} style={{background: i.active ? '#444' : undefined}} onClick={() => toggleTag(i.key)} className={cx('item', styles.hoverGlow)}>{i.key} <span style={{color: '#999'}}>{i.count}</span></div>\n                    );\n                }} />\n            </div>}\n            <div style={{width: '100%'}}>\n                <ToolSection>\n                    <SettingsCompactor alwaysVisible={() => (\n                        <>\n                            <NavLink to={`/notes/new`} className=\"button\">New Note</NavLink>\n                        </>\n                    )}>\n                        <div>\n                            <input id=\"tags-box\" type=\"checkbox\" checked={showTagsBar} onChange={() =>setShowTagsBar(!showTagsBar)} />\n                            <label htmlFor=\"tags-box\">Show tags bar</label>\n                        </div>\n                        <div>\n                            <input id=\"show-notes-for-box\" type=\"checkbox\" checked={showNotesFor} onChange={() =>setShowNotesFor(!showNotesFor)} />\n                            <label htmlFor=\"show-notes-for-box\">Show notes for</label>\n                        </div>\n                        <div>\n                            <input id=\"show-no-context-box\" type=\"checkbox\" checked={showNoContext} onChange={() =>setShowNoContext(!showNoContext)} />\n                            <label htmlFor=\"show-no-context-box\">Show no context</label>\n                        </div>\n                    </SettingsCompactor>\n                    <input style={{fontSize: 16, padding: '.3rem', width: '100%'}} placeholder=\"Search...\" type=\"text\" value={text || ''} onChange={e => { setText(e.target.value); debouncedSearch(e.target.value); }}/>\n                </ToolSection>\n                <div className=\"list\">\n                    {output.map((n, i) => (\n                        <React.Fragment key={i}>\n                            <NavLink to={n.url} className={cx('item', 'note', styles.hoverGlow)} style={{color: n.isRef ? '#aaa' : undefined}}>\n                                <div className=\"note-title\">\n                                    <div>{n.title}</div>\n                                </div> \n                                <div className=\"note-details\">\n                                    <TagList tags={n.tags || ''} />\n                                    <div className=\"tags\">\n                                        <ContextTag contextId={n.contextId} />\n                                    </div>\n                                    {n.id && draftIds.indexOf(n.id) !== -1 && <div className=\"button is-danger\" onClick={e => { e.preventDefault(); n.id && onClearDraft(n.id)}}>{'Clear draft'}</div>}\n                                    <div className=\"note-date\">{moment(n.updatedAt).format('ddd MMM Do HH:mm')}</div>\n                                </div>\n                            </NavLink>\n                        </React.Fragment>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as styles from '../layout/styles';\nimport { ToolSection } from '../framework/ToolSection';\nimport { Context, ContextState } from '../db/context';\nimport { db } from '../db/db';\nimport { useData } from '../model';\nimport { cx } from 'emotion';\n\nexport const ContextPage: React.FC<{ }> = props => {\n    const {data, refreshData} = useData();\n\n    const [text, setText] = React.useState('');\n\n    async function onKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            await db.contexts.create({\n                title: text,\n                state: ContextState.Active,\n                contextId: null\n            });\n\n            setText('');\n            refreshData();\n        }\n    }\n\n    function renderTarget(target: Context) {\n        return (\n            <NavLink key={target.id} to={`/contexts/${target.id}`} className={cx('item', styles.hoverGlow)}>\n                <div>\n                    {target.title}\n                </div>\n            </NavLink>\n        );\n    }\n\n    return (\n        <>\n            <ToolSection>\n                <input type=\"text\" className=\"input is-large is-wide\" placeholder=\"Add context...\" value={text} onChange={e => setText(e.target.value)} onKeyPress={onKeyPress} />\n            </ToolSection>\n\n            <div className=\"list\">\n                <div className=\"header\">Active</div>\n                {data.contexts.filter(p => !p.state || p.state === ContextState.Active).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => renderTarget(t))}\n                <div className=\"header\">Not Active</div>\n                {data.contexts.filter(p => p.state === ContextState.Inactive).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => renderTarget(t))}\n            </div>\n        </>\n    );\n}\n","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as styles from '../layout/styles';\nimport { Data } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport { ProjectState, Project } from '../db/project';\nimport { db } from '../db/db';\nimport { ContextTag } from '../components/ContextTag';\nimport { cx } from 'emotion';\n\nexport class ProjectPage extends React.Component<{ data: Data, refreshData: () => void }, { text: string }> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            text: ''\n        };\n    } \n    \n    async onKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            await db.projects.create({\n                title: this.state.text,\n                state: ProjectState.Active,\n                contextId: null\n            });\n            this.setState({ text: '' }, this.props.refreshData);\n        }\n    }\n\n    renderProject(target: Project) {\n        return (\n            <NavLink to={`/projects/${target.id}`} className={cx('item', styles.hoverGlow)}>\n                <div>\n                    {target.title}\n                </div>\n                <div className=\"tags\">\n                    <div className=\"tag\">{target.state}</div>\n                    <ContextTag contextId={target.contextId} />\n                </div>\n            </NavLink>\n        );\n    }\n\n    render() {\n        return (\n            <>\n                <ToolSection>\n                    <input type=\"text\" className=\"input is-large is-wide\" placeholder=\"Add project...\" value={this.state.text} onChange={e => this.setState({ text: e.target.value })} onKeyPress={this.onKeyPress.bind(this)} />\n                </ToolSection>\n\n                <div className=\"list\">\n                    <div className=\"header\">Active</div>\n                    {this.props.data.projects.filter(p => !p.state || p.state === ProjectState.Active).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => this.renderProject(t))}\n                    <div className=\"header\">Incubated</div>\n                    {this.props.data.projects.filter(p => !p.state || p.state === ProjectState.Incubated).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => this.renderProject(t))}\n                    <div className=\"header\">Not Active</div>\n                    {this.props.data.projects.filter(p => p.state !== ProjectState.Active && p.state !== ProjectState.Incubated).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => this.renderProject(t))}\n                </div>\n            </>\n        );\n    }\n}\n","import * as React from 'react';\nimport { useData } from '../model';\nimport { db } from '../db/db';\nimport { Person } from '../db/person';\nimport { NavLink } from 'react-router-dom';\nimport { MarkedViewer } from './MarkedViewer';\nimport { Task } from '../db/task';\nimport { HasNote } from '../db/note';\nimport { TreeViewer } from './TreeViewer';\n\nexport const EmbeddedNoteEdit: React.FC<{ targetEntity: Person|Task|null }> = (props) => {\n    const {data, refreshData} = useData();\n\n    if (!props.targetEntity) {\n        return null;\n    }\n\n    const {noteId} = props.targetEntity;\n\n    const addNode = async () => {\n        if (!props.targetEntity) {\n            return;\n        }\n\n        const note = await db.notes.create({\n            title: '',\n            content: '',\n            tags: '',\n            contextId: null,\n            noteFor: {\n                type: props.targetEntity.type,\n                id: props.targetEntity.id,\n            },\n            mode: 'tree',\n            dailyDate: null\n        });\n\n        if (props.targetEntity.type === 'person') {\n            props.targetEntity.noteId = note.id;\n            await db.people.save(props.targetEntity);\n        }\n\n        if (props.targetEntity.type === 'task') {\n            props.targetEntity.noteId = note.id;\n            await db.tasks.save(props.targetEntity);\n        }\n\n        refreshData();\n    };\n\n    if (!noteId) {\n        return (\n            <div>\n                <div className=\"button\" onClick={addNode}>Add note</div>\n            </div>\n        );\n    }\n\n    const note = data.notes.find(x => x.id === noteId);\n\n    if (!note) {\n        return null;\n    }\n\n    return (\n        <div>\n            <NavLink to={`/notes/${note.id}/edit?source=${encodeURIComponent(`${window.location.pathname}`)}`} className=\"button\">Edit note</NavLink>\n            {!note.mode || note.mode === 'markdown' ? (\n                <MarkedViewer markdown={note.content} contextId={note.contextId} />\n            ) : (\n                <TreeViewer json={note.content} contextId={note.contextId} />\n            )}\n        </div>\n    )\n};\n\nexport const EmbeddedNoteShow: React.FC<{ targetEntity: HasNote|null }> = (props) => {\n    const {data} = useData();\n\n    if (!props.targetEntity) {\n        return null;\n    }\n\n    const {noteId} = props.targetEntity;\n    if (!noteId) {\n        return null;\n    }\n\n    const note = data.notes.find(x => x.id === noteId);\n\n    if (!note) {\n        return null;\n    }\n\n    return (\n        <div>\n            {!note.mode || note.mode === 'markdown' ? (\n                <MarkedViewer markdown={note.content} contextId={note.contextId} />\n            ) : (\n                <TreeViewer json={note.content} contextId={note.contextId} />\n            )}\n        </div>\n    )\n};","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Data } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport { Task, TaskState } from '../db/task';\nimport { db } from '../db/db';\nimport { ProjectState } from '../db/project';\nimport moment from 'moment';\nimport * as styles from '../layout/styles';\nimport { EmbeddedNoteEdit } from '../components/EmbeddedNote';\nimport { cx } from 'emotion';\n\nexport class ShowTaskPage extends React.Component<{ data: Data, id: string, refreshData(): void }, { title: string, source: string }> {\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            title: '',\n            source: '/tasks'\n        }\n    }\n\n    componentDidMount() {\n        const urlParams = new URLSearchParams(window.location.search);\n\n        let task = this.props.data.tasks.find(x => x.id === this.props.id);\n        this.setState({ title: task!.title }, () => {\n            if (urlParams.has('source')) {\n                this.setState({ source: decodeURIComponent(urlParams.get('source')!)});\n            }\n        });\n    }\n\n    async setContext(task: Task, event: React.ChangeEvent<HTMLSelectElement>) {\n        let contextId: string|null = event.target.value;\n\n        if (contextId === '') {\n            contextId = null;\n        }\n\n        task.contextId = contextId;\n        await db.tasks.save(task);\n        this.props.refreshData();\n    }\n\n    async setProject(task: Task, event: React.ChangeEvent<HTMLSelectElement>) {\n        let projectId: string|null = event.target.value;\n\n        if (projectId === '') {\n            projectId = null;\n        }\n\n        task.projectId = projectId;\n        await db.tasks.save(task);\n        this.props.refreshData();\n    }\n\n    async setDefer(task: Task, event: React.ChangeEvent<HTMLInputElement>) {\n        let value: string|null = event.target.value;\n\n        if (value === '') {\n            task.deferredUntil = null;\n        } else {\n            task.deferredUntil = new Date(value).toISOString();\n        }\n\n        await db.tasks.save(task);\n        this.props.refreshData();\n    }\n\n    async onKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            let task = this.props.data.tasks.find(x => x.id === this.props.id);\n\n            if (!task) {\n                return;\n            }\n\n            if (task.title !== this.state.title) {\n                task.title = this.state.title;\n                await db.tasks.save(task);\n                this.props.refreshData();\n            }\n        }\n    }\n\n    async setTaskState(state: TaskState) {\n        const task = this.props.data.tasks.find(x => x.id === this.props.id);\n\n        if (!task) {\n            return;\n        }\n\n        if (task.state === state) {\n            return;\n        }\n\n        task.state = state;\n        task.stateChangedAt = new Date().toISOString();\n        await db.tasks.save(task);\n        this.props.refreshData();\n    }\n\n    render() {\n        let task = this.props.data.tasks.find(x => x.id === this.props.id);\n\n        if (!task) {\n            return <div>Task not found.</div>\n        }\n\n        let isDirty = false;\n\n        if (task.title !== this.state.title) {\n            isDirty = true;\n        }\n\n        return (\n            <>\n                <ToolSection>\n                    <NavLink to={this.state.source} className=\"button\">Back</NavLink>\n                    {/* <NavLink to={`/tasks/${task.id}/edit`} className=\"button\">Edit</NavLink> */}\n                </ToolSection>\n\n                <ToolSection>\n                    <div>Task</div>\n                    <input type=\"text\" className=\"input is-large is-wide\" style={{border: isDirty ? '2px solid orange' : undefined}} value={this.state.title} onKeyDown={e => this.onKeyDown(e)} onChange={e => this.setState({ title: e.target.value })} />\n\n                    <div>State</div>\n                    <div className={cx(styles.horizontalSpace('.5rem'))}>\n                        <div className={cx('button', task.state !== 'active' ? 'inactive' : null)} onClick={() => this.setTaskState('active')}>Active</div>\n                        <div className={cx('button', task.state !== 'incubated' ? 'inactive' : null)} onClick={() => this.setTaskState('incubated')}>Incubated</div>\n                        <div className={cx('button', task.state !== 'completed' ? 'inactive' : null)} onClick={() => this.setTaskState('completed')}>Completed</div>\n                    </div>\n\n                    <div>Context</div>\n                    <select className=\"input is-large\" value={task.contextId || ''} onChange={e => this.setContext(task!, e)}>\n                        <option value=\"\">Not set</option>\n                        {this.props.data.contexts.map(c => (\n                            <option key={c.id} value={c.id}>{c.title}</option>\n                        ))}\n                    </select>\n\n                    <div>Project</div>\n                    <select className=\"input is-large\" value={task.projectId || ''} onChange={e => this.setProject(task!, e)}>\n                        <option value=\"\">Not set</option>\n                        {this.props.data.projects.filter(p => p.state === ProjectState.Active || p.id === task!.projectId).map(c => (\n                            <option key={c.id} value={c.id}>{c.title}</option>\n                        ))}\n                    </select>\n\n                    <div>Defer</div>\n                    <input type=\"date\" className=\"input is-large\" value={(task.deferredUntil && moment(task.deferredUntil).format('YYYY-MM-DD')) || ''} onChange={e => this.setDefer(task!, e)} />\n                </ToolSection>\n\n                <ToolSection>\n                    <EmbeddedNoteEdit targetEntity={task} {...this.props} />\n                </ToolSection>\n            </>\n        );\n    }\n}","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Data } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport { Project, ProjectState } from '../db/project';\nimport { db } from '../db/db';\nimport { Loader } from '../components/Loader';\nimport { ContextSelector } from '../components/ContextSelector';\n\nexport class ShowProjectPage extends React.Component<{ data: Data, refreshData: () => void, id: string }, { title: string }> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            title: '',\n        }\n    }\n\n    componentDidMount() {\n        let target = this.props.data.projects.find(x => x.id === this.props.id);\n        this.setState({title: target!.title});\n    }\n\n    async setContext(target: Project, contextId: string|null) {\n        if (contextId === '') {\n            contextId = null;\n        }\n\n        target.contextId = contextId;\n        await db.projects.save(target);\n        this.props.refreshData();\n    }\n\n    async setProjectState(target: Project, event: React.ChangeEvent<HTMLSelectElement>) {\n        let projectState: ProjectState = event.target.value as ProjectState;\n\n        target.state = projectState;\n        await db.projects.save(target);\n        this.props.refreshData();\n    }\n\n    async onKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            let target = this.props.data!.projects.find(x => x.id === this.props.id);\n\n            if (!target) {\n                return;\n            }\n\n            if (target.title !== this.state.title) {\n                target.title = this.state.title;\n                await db.projects.save(target);\n                this.props.refreshData();\n            }\n        }\n    }\n\n    render() {\n        if (this.props.data === null) {\n            return <Loader />;\n        }\n\n        let target = this.props.data.projects.find(x => x.id === this.props.id);\n\n        if (!target) {\n            return <div>Project not found.</div>\n        }\n\n        let isDirty = false;\n\n        if (target.title !== this.state.title) {\n            isDirty = true;\n        }\n\n        return (\n            <>\n                <ToolSection>\n                    <NavLink to={`/projects`} className=\"button\">Back</NavLink>\n                </ToolSection>\n\n                <ToolSection>\n                    <div>Project</div>\n                    <input type=\"text\" className=\"input is-large is-wide\" style={{border: isDirty ? '2px solid orange' : undefined}} value={this.state.title} onKeyDown={e => this.onKeyDown(e)} onChange={e => this.setState({ title: e.target.value })} />\n                    \n                    <div>Context</div>\n                    <ContextSelector contextId={target.contextId} onChange={e => this.setContext(target!, e)} data={this.props.data} />\n                    <div>State</div>\n                    <select className=\"input is-large\" value={target.state || ProjectState.Active} onChange={e => this.setProjectState(target!, e)}>\n                        {Object.keys(ProjectState).map(c => (\n                            <option key={c} value={c}>{c}</option>\n                        ))}\n                    </select>\n\n                </ToolSection>\n\n            </>\n        );\n    }\n}","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Data } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport { Context, ContextState } from '../db/context';\nimport { db } from '../db/db';\n\nexport class ShowContextPage extends React.Component<{id: string, data: Data, refreshData(): void }, { title: string }> {\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            title: '',\n        }\n    }\n\n    componentDidMount() {\n        let target = this.props.data.contexts.find(x => x.id === this.props.id);\n        this.setState({ title: target!.title })\n    }\n\n    async onKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            const target = this.props.data.contexts.find(x => x.id === this.props.id);\n\n            if (!target) {\n                return;\n            }\n\n            if (target.title !== this.state.title) {\n                target.title = this.state.title;\n                await db.contexts.save(target);\n                this.props.refreshData();\n            }\n        }\n    }\n\n    async setContext(target: Context, event: React.ChangeEvent<HTMLSelectElement>) {\n        let contextId: string|null = event.target.value;\n\n        if (contextId === '') {\n            contextId = null;\n        }\n\n        target.contextId = contextId;\n        await db.contexts.save(target);\n        this.props.refreshData();\n    }\n\n    async setContextState(target: Context, event: React.ChangeEvent<HTMLSelectElement>) {\n        let contextState: ContextState = event.target.value as ContextState;\n\n        target.state = contextState;\n        await db.contexts.save(target);\n        this.props.refreshData();\n    }\n\n    render() {\n        let target = this.props.data.contexts.find(x => x.id === this.props.id);\n\n        if (!target) {\n            return <div>Context not found.</div>\n        }\n\n        let isDirty = false;\n\n        if (target.title !== this.state.title) {\n            isDirty = true;\n        }\n\n        return (\n            <>\n                <ToolSection>\n                    <NavLink to={`/contexts`} className=\"button\">Back</NavLink>\n                </ToolSection>\n\n                <ToolSection>\n                    <div>Context</div>\n                    <input type=\"text\" className=\"input is-large is-wide\" style={{border: isDirty ? '2px solid orange' : undefined}} value={this.state.title} onKeyDown={e => this.onKeyDown(e)} onChange={e => this.setState({ title: e.target.value })} />\n\n                    <div>Parent Context</div>\n                    <select className=\"input is-large\" value={target.contextId || ''} onChange={e => this.setContext(target!, e)}>\n                        <option value=\"\">Not set</option>\n                        {this.props.data.contexts.filter(c => c.id !== target!.id).map(c => (\n                            <option key={c.id} value={c.id}>{c.title}</option>\n                        ))}\n                    </select>\n\n                    <div>State</div>\n                    <select className=\"input is-large\" value={target.state || ContextState.Active} onChange={e => this.setContextState(target!, e)}>\n                        {Object.keys(ContextState).map(c => (\n                            <option key={c} value={c}>{c}</option>\n                        ))}\n                    </select>\n                </ToolSection>\n            </>\n        );\n    }\n}","import * as React from 'react';\nimport { Data } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport { syncer } from '../db/syncer';\nimport { Loader } from '../components/Loader';\n\ninterface DataPageProps {\n    data: Data;\n    refreshData(): void;\n}\n\nexport class DataPage extends React.Component<{ render: (props: DataPageProps)=>React.ReactNode }, { data: Data|null, error: string|null }> {\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            error: null,\n            data: null\n        };\n\n        this.refreshData = this.refreshData.bind(this);\n    }\n\n    async componentDidMount() {\n        syncer.registerDataListener(data => this.setState({ data }));\n        this.setState({ data: await syncer.getData() }, async () => {\n            await syncer.startServerSync();\n            await syncer.ensureServerSyncEnqueued();\n        });\n    }\n\n    async refreshData() {\n        this.setState({ data: await syncer.getData() }, async () => {\n            syncer.startServerSync();\n        });\n    }\n\n    render() {\n        if (this.state.error) {\n            return (\n                <>\n                    <div>{this.state.error}</div>\n                    <ToolSection>\n                        <div className=\"button\" onClick={() => this.refreshData()}>Retry</div>\n                        <div className=\"button\" onClick={() => window.location.reload()}>Reload</div>\n                        <div className=\"button\" onClick={() => window.location.reload(true)}>Force Reload</div>\n                        <a className=\"button\" href=\"/login\" >Login</a>\n                    </ToolSection>\n                </>\n            );\n        }      \n        \n        if (!this.state.data) {\n            return <Loader />;\n        }\n\n        return this.props.render({ data: this.state.data, refreshData: this.refreshData });\n    }\n}","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as styles from '../../layout/styles';\nimport { useData } from '../../model';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { Person } from '../../db/person';\nimport { cx } from 'emotion';\n\nexport const PeoplePage: React.FC<{}> = props => {\n    const {data} = useData();\n\n    const renderTarget = (target: Person) => {\n        return (\n            <NavLink key={target.id} to={`/people/${target.id}`} className={cx('item', styles.hoverGlow)}>\n                <div>\n                    {target.name}\n                </div>\n            </NavLink>\n        );\n    };\n\n    return (\n        <>\n            <ToolSection>\n                <NavLink to={`/people/new`} className=\"button\">New Person</NavLink>\n            </ToolSection>\n\n            <div className=\"list\">\n                {data.people.sort((a, b) => a.name.localeCompare(b.name)).map(t => renderTarget(t))}\n            </div>\n        </>\n    );\n};\n","import * as React from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { db } from '../../db/db';\nimport { useState } from 'react';\nimport { EmbeddedNoteEdit } from '../../components/EmbeddedNote';\nimport { useData } from '../../model';\n\nconst useForm = <T extends {}>(initialState: ()=>T) => {\n    const [values, setValues] = useState<T>(initialState);\n    \n    const handleChange = (event: any) => {\n        event.persist();\n        setValues((values) => ({ ...values, [event.target.name]: event.target.value }));\n    };\n\n    return {\n        values,\n        handleChange\n    };\n};\n\nexport const EditPersonPage: React.FC<{id?: string }> = (props) => {\n    const {data, refreshData} = useData();\n    const [goBack, setGoBack] = useState<string|null>(null);\n\n    const {values, handleChange} = useForm(() => {\n        const person = props.id ? data.people.find(x => x.id === props.id) : null;\n        return {\n            name:  person ? person.name : '',\n            alias: person ? person.alias : '',\n            birthday: person ? person.birthday : null\n        }\n    });\n\n    const onSave = async () => {\n        const id = props.id || null;\n\n        if (id) {\n            let person = await db.people.get(id)!;\n\n            if (person === null) {\n                throw new Error('Person is null?');\n            }\n\n            person.name = values.name;\n            person.alias = (values.alias?.length && values.alias) || null;\n            person.birthday = values.birthday;\n\n            await db.people.save(person);\n            refreshData();\n            setGoBack(person.id);\n        } else {\n            const person = await db.people.create({\n                name: values.name,\n                alias: (values.alias?.length && values.alias) || null,\n                birthday: values.birthday,\n                noteId: null,\n            });\n\n            refreshData();\n            setGoBack(person.id);\n        }\n    };\n\n    const person = props.id ? data.people.find(x => x.id === props.id) || null : null;\n\n    return (\n        <>\n            {goBack && <Redirect to={`/people/${goBack}`} />}\n            <div style={{height: '100%', display: 'flex', flexDirection: 'column'}} >\n                <ToolSection>\n                    <NavLink to={`/people`} className=\"button\">Back</NavLink>\n                    {props.id && <NavLink to={`/people/${props.id}`} className=\"button\">Show</NavLink>}\n                </ToolSection>\n                <ToolSection>\n                    {props.id === undefined ?\n                            <button type=\"button\" className=\"button is-primary\" onClick={onSave}>Add person</button> :\n                            <button type=\"button\" className=\"button is-primary\" onClick={onSave}>Update person</button>}\n                </ToolSection>\n                <ToolSection>\n                    <div>Name</div>\n                    <input type=\"text\" name=\"name\" className=\"input is-large is-wide\" value={values.name} onChange={handleChange} />\n                    <div>Alias</div>\n                    <input type=\"text\" name=\"alias\" className=\"input is-large is-wide\" value={values.alias || ''} onChange={handleChange} />\n                    <div>Birthday</div>\n                    <input type=\"date\" name=\"birthday\" className=\"input is-large\" value={values.birthday || ''} onChange={handleChange} />\n                </ToolSection>\n                <ToolSection>\n                    <EmbeddedNoteEdit targetEntity={person} />\n                </ToolSection>\n            </div>\n        </>\n    );\n};","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useData } from '../../model';\nimport { ToolSection } from '../../framework/ToolSection';\nimport moment from 'moment';\nimport { EmbeddedNoteShow } from '../../components/EmbeddedNote';\nimport { getAlias } from '../../db/person';\nimport { PersonReferenceViewer } from '../../components/ReferenceViewer';\n\nexport const ShowPersonPage: React.FC<{id: string}> = (props) => {\n    const {data} = useData();\n    const person = data.people.find(x => x.id === props.id);\n\n    if (!person) {\n        return <div>Person not found.</div>\n    }\n\n    return (\n        <>\n            <ToolSection>\n                <NavLink to={`/people`} className=\"button\">Back</NavLink>\n                <NavLink to={`/people/${person.id}/edit`} className=\"button\">Edit</NavLink>\n            </ToolSection>\n            <div className=\"panel\">\n                <div className=\"content\" style={{padding: '1rem'}}>\n                    <h1>{person.name} (@{getAlias(person)})</h1>\n                    {person.birthday && <div>Birthday: {moment(person.birthday).format('YYYY-MM-DD')}</div>}\n                    <EmbeddedNoteShow targetEntity={person} {...props} />\n                    <PersonReferenceViewer alias={getAlias(person)} />\n                </div>\n            </div>\n        </>\n    );\n}; ","import * as React from 'react';\nimport { ToolSection } from '../framework/ToolSection';\nimport { db } from '../db/db';\nimport { useData } from '../model';\n\nexport const StatsPage: React.SFC<{}> = (props) => {\n    const {data} = useData();\n    const [noteTotalCount, setNoteTotalCount] = React.useState<number|null>(null);\n    const [taskTotalCount, setTaskTotalCount] = React.useState<number|null>(null);\n    const [peopleTotalCount, setPeopleTotalCount] = React.useState<number|null>(null);\n    const [projectTotalCount, setProjectTotalCount] = React.useState<number|null>(null);\n    const [contextTotalCount, setContextTotalCount] = React.useState<number|null>(null);\n    \n    React.useEffect(() => {\n        db.notes.getSyncKeys().then(c => setNoteTotalCount(c.length));\n        db.tasks.getSyncKeys().then(c => setTaskTotalCount(c.length));\n        db.people.getSyncKeys().then(c => setPeopleTotalCount(c.length));\n        db.projects.getSyncKeys().then(c => setProjectTotalCount(c.length));\n        db.contexts.getSyncKeys().then(c => setContextTotalCount(c.length));\n    });\n\n    return (\n        <>\n            <ToolSection>\n            </ToolSection>\n            <div className=\"panel\">\n                <div className=\"content\" style={{padding: '1rem'}}>\n                    <h1>Stats</h1>\n                    <ul>\n                        <li>Notes: {data.notes.length}, versions: {noteTotalCount ? noteTotalCount : '...'}</li>\n                        <li>Tasks: {data.tasks.length}, versions: {taskTotalCount ? taskTotalCount : '...'}</li>\n                        <li>People: {data.people.length}, versions: {peopleTotalCount ? peopleTotalCount : '...'}</li>\n                        <li>Projects: {data.projects.length}, versions: {projectTotalCount ? projectTotalCount : '...'}</li>\n                        <li>Contexts: {data.contexts.length}, versions: {contextTotalCount ? contextTotalCount : '...'}</li>\n                    </ul>\n                </div>\n            </div>\n        </>\n    );\n}","import * as React from 'react';\nimport { ContextBar } from '../../components/ContextBar';\nimport { useQueryState } from '../../lib/UseQueryState';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { useData } from '../../model';\nimport moment from 'moment';\nimport { getNoteTitle, Note } from '../../db/note';\nimport { ContextTag } from '../../components/ContextTag';\nimport { TagList } from '../../components/TagInput';\nimport { MarkedViewer } from '../../components/MarkedViewer';\nimport _ from 'lodash';\nimport * as ContextActions from '../../lib/contextActions';\nimport { TreeViewer } from '../../components/TreeViewer';\n\nexport const DailyNotePage: React.SFC<{ }> = (props) => {\n    const [contextId, setContextId] = useQueryState(null, 'context');\n    const {data} = useData();\n\n    const oneWeekAgo = moment().add(-7,'d');\n    \n    const filteredContexts = ContextActions.getFilteredContextIds(contextId, data);\n    const dailyNotes = _.orderBy(data.notes.filter(x => x.dailyDate && moment(x.dailyDate) > oneWeekAgo && (!contextId || filteredContexts.indexOf(x.contextId!) !== -1)), n => n.dailyDate,  'desc');\n\n    function renderViewer(note: Note) {\n        if (!note.mode || note.mode === 'markdown') {\n            return <MarkedViewer markdown={note.content} contextId={note.contextId} />;\n        } \n          \n        return <TreeViewer json={note.content} contextId={note.contextId} />;\n    }\n\n    return (\n        <div style={{display: 'flex', height: '100%'}}>\n            <ContextBar contextId={contextId} onChange={setContextId} />\n            <div style={{width: '100%'}}>\n                <ToolSection>\n                </ToolSection>\n                <div className=\"panel\">\n                    {dailyNotes.map(n => (\n                        <div key={n.id} className=\"content\" style={{padding: '1rem'}}>\n                            <h1>{getNoteTitle(n)}</h1>\n                            <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                                <TagList tags={n.tags} />\n                                <ContextTag contextId={n.contextId} />\n                            </div>\n                            {renderViewer(n)}\n                        </div>))}\n                </div>\n            </div>\n        </div>\n    )\n};\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Layout } from './components/Layout';\nimport { TaskPage } from './pages/TaskPage';\nimport { EditNotePage } from './pages/notes/EditNotePage';\nimport { ShowNotePage, ShowVirtualNotePage } from './pages/notes/ShowNotePage';\nimport { NotePage } from './pages/notes/NotePage';\nimport { PlaygroundPage } from './pages/PlaygroundPage';\nimport { ContextPage } from './pages/ContextPage';\nimport { ProjectPage } from './pages/ProjectPage';\nimport { ShowTaskPage } from './pages/ShowTaskPage';\nimport { ShowProjectPage } from './pages/ShowProjectPage';\nimport { ShowContextPage } from './pages/ShowContextPage';\nimport { DataPage } from './pages/DataPage';\nimport { SyncPage } from './pages/SyncPage';\nimport { SettingsPage } from './pages/SettingsPage';\nimport { PeoplePage } from './pages/people/PeoplePage';\nimport { EditPersonPage } from './pages/people/EditPersonPage';\nimport { ShowPersonPage } from './pages/people/ShowPersonPage';\nimport { StatsPage } from './pages/StatsPage';\nimport {DataProvider} from './model';\nimport { DailyNotePage } from './pages/notes/DailyNotes';\n\nexport const routes = <Layout>\n    <DataProvider>\n        <Switch>\n            <Route exact path='/' render={routeProps => <NotePage />} />\n            <Route exact path='/notes/new' render={routeProps => <EditNotePage />} />\n            <Route exact path='/notes/daily' render={routeProps => <DailyNotePage />} />\n            <Route exact path='/notes/virtual' render={routeProps => <ShowVirtualNotePage />} />\n            <Route exact path='/notes/:id' render={routeProps => <ShowNotePage id={routeProps.match.params.id} />} />\n            <Route exact path='/notes/:id/edit' render={routeProps => <EditNotePage id={routeProps.match.params.id} />} />\n            <Route exact path='/tasks' render={routeProps => <TaskPage />} />\n            <Route exact path='/tasks/:id' render={routeProps => <DataPage render={(props) => <ShowTaskPage {...props} id={routeProps.match.params.id} />} />} />\n            <Route exact path='/contexts' render={routeProps => <ContextPage />} />\n            <Route exact path='/contexts/:id' render={routeProps => <DataPage render={(props) => <ShowContextPage {...props} id={routeProps.match.params.id} />} />} />\n            <Route exact path='/projects' render={routeProps => <DataPage render={(props) => <ProjectPage {...props} />} />} />\n            <Route exact path='/projects/:id' render={routeProps => <DataPage render={(props) => <ShowProjectPage {...props} id={routeProps.match.params.id} />} />} />\n            <Route exact path='/people' render={routeProps => <PeoplePage />} />} />\n            <Route exact path='/people/new' render={routeProps => <EditPersonPage />} />\n            <Route exact path='/people/:id' render={routeProps => <ShowPersonPage id={routeProps.match.params.id} />} />\n            <Route exact path='/people/:id/edit' render={routeProps => <EditPersonPage id={routeProps.match.params.id} />} />\n            <Route path='/playground' component={PlaygroundPage} />\n            <Route path='/sync' component={SyncPage} />\n            <Route path='/stats' render={routeProps => <StatsPage />} />\n            <Route path='/settings' component={SettingsPage} />\n        </Switch>\n    </DataProvider>\n</Layout>;\n","import * as React from 'react';\nimport { ToolSection } from '../framework/ToolSection';\nimport { extractAllReferences } from '../db/note';\nimport { useData } from '../model';\n\nexport const PlaygroundPage: React.FC<{}> = () => {\n    \n    const {data} = useData();\n\n    console.log(extractAllReferences(data.notes));\n    \n    return (\n        <div style={{height: '100%'}}>\n            <ToolSection>\n            </ToolSection>\n        </div>\n    );\n}","import React from 'react';\nimport { ToolSection } from '../framework/ToolSection';\nimport { syncer, SyncStatus } from '../db/syncer';\nimport moment from 'moment';\n\nexport const SyncPage: React.FC<{}> = props => {\n    const [count, setCount] = React.useState(0);\n\n    React.useEffect(() => {\n        syncer.registerSyncListener(() => {\n            setCount(c => c + 1);\n        });\n    }, []);\n   \n    return (\n        <>\n            <React.Fragment key={count}></React.Fragment>\n            <ToolSection>\n                <div>Status: {SyncStatus[syncer.status]}</div>\n                <div className=\"button\" onClick={() => syncer.startServerSync()}>Sync Now</div>\n            </ToolSection>\n            <div className=\"list\">\n                {syncer.getResults().slice(0).reverse().map((result, i) =>\n                    <React.Fragment key={i}>\n                        <div className=\"item\">{result.endAt.getTime() - result.startAt.getTime()} ms - start: {moment(result.startAt).format('HH:mm:ss')}, end: {moment(result.endAt).format('HH:mm:ss')}, fetch: {result.fetch}, send: {result.send}{result.error ? `, error: ${result.error}` : null}</div>\n                    </React.Fragment>)}\n            </div>\n        </>\n    );\n}\n","import * as React from 'react';\nimport { ToolSection } from '../framework/ToolSection';\nimport { db } from '../db/db';\nimport { getCurrentKey, generateRsaKey, importLifeKey, LifeKey } from '../db/crypt';\nimport * as dropboxApi from '../lib/dropboxApi';\n\nexport const SettingsPage: React.FC<{}> = () => {\n    const [pushSubscribed, setPushSubscribed] = React.useState<boolean|null>(null);\n    const [currentKey, setCurrentKey] = React.useState<LifeKey|null>(null);\n    const [swState, setSwState] = React.useState<string>('no-update');\n    const [generatedKey, setGeneratedKey] = React.useState<string|null>(null);\n    const [privateKey, setPrivateKey] = React.useState<string|null>(null);\n\n    async function clearEntities() {\n        if(!window.confirm('Clear all local data?')) {\n            return;\n        }\n\n        db.contexts.dropInstance();\n        db.tasks.dropInstance();\n        db.notes.dropInstance();\n        db.projects.dropInstance();\n        db.people.dropInstance();\n    }\n\n    const [dropboxConnected, setDropboxConnected] = React.useState<boolean|null>(null);\n    React.useEffect(() => {\n        dropboxApi.isSignedIn().then(status => {\n            setDropboxConnected(status);\n        });\n    }, [])\n\n    React.useEffect(() => {\n        async function componentDidMount() {\n            navigator.serviceWorker.ready.then(async (registration) => {\n                const subscription = await registration.pushManager.getSubscription();\n                setPushSubscribed(!!subscription);\n            });\n    \n            navigator.serviceWorker.ready.then(registration => {\n                registration.addEventListener('updatefound', () => {\n                    const installingWorker = registration.installing;\n                    if (!installingWorker) {\n                        setSwState('not-installing');\n                        return;\n                    }\n    \n                    installingWorker.addEventListener('statechange', () => {\n                        if (installingWorker.state === 'installed') {\n                            if (navigator.serviceWorker.controller) {\n                                console.log('New content is available; please refresh.');\n                                setSwState('content-ready');\n                            } else {\n                                console.log('Content is cached for offline use.');\n                                setSwState('cached');\n                            }\n                        } else {\n                            setSwState('state-not-installed');\n                        }\n                    });\n                });\n            });\n    \n            await refreshKeys();\n        }\n        componentDidMount() \n    }, [])\n\n    async function refreshKeys() {\n        try {\n            const newCurrentKey = await getCurrentKey();\n            setCurrentKey(newCurrentKey)\n        } catch(err) {\n\n        }\n    }\n\n    function unsubscribePush() {\n        navigator.serviceWorker.ready.then(async (registration) => {\n            const subscription = await registration.pushManager.getSubscription();\n            if (subscription) {\n                await subscription.unsubscribe();\n                setPushSubscribed(!!(await registration.pushManager.getSubscription()));\n            }\n        });\n    }\n\n    function subscribePush() {\n        navigator.serviceWorker.ready.then(async (registration) => {\n            try {\n                const options = {\n                    applicationServerKey: 'BEl6vcKrENjrQk-LikFlZ5hy6VuVgSUUZ2uCYOQsuYjMP_WbigIOfDITEkF6JhEbd9MVw9RKiMODYxmpONuYsqY',\n                    userVisibleOnly: true\n                };\n                const subscription = await registration.pushManager.subscribe(options);\n                console.log(JSON.stringify(subscription))\n                setPushSubscribed(!!subscription);\n                // Api.testPush(subscription);\n            } catch (err) {\n                console.log('Error', err)\n            }\n        });\n    }\n\n    function clearServiceWorker() {\n        navigator.serviceWorker.ready.then(async (registration) => {\n            await registration.update();\n        });\n    }\n\n    function unregisterServiceWorker() {\n        navigator.serviceWorker.ready.then(async (registration) => {\n            await registration.unregister();\n        });\n    }\n\n    return (\n        <>\n            <ToolSection>\n                <div className=\"button\" onClick={() => window.location.reload()}>Reload</div>\n                <div className=\"button\" onClick={() => window.location.reload(true)}>Force Reload</div>\n            </ToolSection>\n            <ToolSection>\n                <div className=\"button\" onClick={async () => { await dropboxApi.signIn(); setDropboxConnected(await dropboxApi.isSignedIn()) }}>Connect Dropbox</div>\n                {/* <div className=\"button\" onClick={async () => { await signOut(); setDropboxConnected(await isLoggedIn()) }}>Disconnect Google Drive</div> */}\n                <div style={{display: 'inline-block', background: '#222', padding: '.5rem'}}>Status: {dropboxConnected === null ? 'unknown' : dropboxConnected ? 'connected' : 'not connected'}</div>\n                {dropboxApi.isLocalMode && <div style={{display: 'inline-block', background: '#222', padding: '.5rem'}}>Local [ {window.location.host} ]</div>}\n            </ToolSection>\n            <ToolSection>\n                <div className=\"button\" onClick={async () => await clearEntities()}>Clear Entities</div>\n                <div className=\"button\" onClick={() => clearServiceWorker()}>Update SW</div>\n                <div className=\"button\" onClick={() => unregisterServiceWorker()}>Unregister SW</div>\n                <div>ServiceWorker state: {swState}</div>\n            </ToolSection>\n            <ToolSection>\n                {pushSubscribed === true && <div className=\"button\" onClick={async () => await unsubscribePush()}>Unsubscribe Push</div>}\n                {pushSubscribed === false && <div className=\"button\" onClick={async () => await subscribePush()}>Subscribe Push</div>}\n            </ToolSection>\n            <ToolSection>\n                <h2>Encryption</h2>\n                {!currentKey && (\n                    <>\n                        <div>\n                            <textarea style={{width: '100%'}} onChange={e => setPrivateKey(e.target.value)} />\n                        </div>\n                        <button className=\"button\" onClick={async () => { await importLifeKey(privateKey!); await refreshKeys(); }}>Set private key</button>\n                        <h4>Generate key</h4>\n                        <div className=\"button\" onClick={async () => setGeneratedKey((await generateRsaKey()).privateKey)}>Generate</div>\n                        <textarea style={{width: '100%', background: '#555', color: '#ddd'}} readOnly value={generatedKey || ''} />\n                    </>\n                )}\n                <h4>Keys</h4>\n                <div className=\"list\">\n                    {!currentKey && <div>No keys</div>}\n                    {currentKey && (\n                        <div className=\"item\">\n                            {currentKey.fingerprint}\n                        </div>\n                    )}\n                </div>\n            </ToolSection>\n            <ToolSection>\n            </ToolSection>\n        </>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { routes } from './routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter children={ routes } />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}