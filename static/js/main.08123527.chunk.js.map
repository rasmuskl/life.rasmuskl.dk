{"version":3,"sources":["serviceWorker.ts","components/ServiceWorkerInstall.tsx","layout/styles.ts","db/EventListener.ts","db/db.ts","components/Loader.tsx","model.tsx","lib/dropboxApi.ts","bridge/HostBridge.ts","db/syncer.ts","components/ServiceWorkerUpdate.tsx","layout/theme.ts","components/Layout.tsx","db/project.ts","framework/ToolSection.tsx","lib/contextActions.ts","db/context.ts","lib/UseQueryState.ts","components/SettingsCompactor.tsx","components/ContextTag.tsx","components/ContextBar.tsx","pages/TaskPage.tsx","db/note.ts","db/person.ts","components/MarkedViewer.tsx","components/SimpleSplitEditor.tsx","components/TreeEditor.tsx","components/ContextSelector.tsx","components/TagInput.tsx","components/NoteEditor.tsx","db/stagingArea.ts","pages/notes/EditNotePage.tsx","components/TreeViewer.tsx","components/ReferenceViewer.tsx","pages/notes/ShowNotePage.tsx","framework/List.tsx","pages/notes/NotePage.tsx","pages/PlaygroundPage.tsx","pages/ContextPage.tsx","pages/ProjectPage.tsx","components/EmbeddedNote.tsx","pages/ShowTaskPage.tsx","pages/ShowProjectPage.tsx","pages/ShowContextPage.tsx","pages/DataPage.tsx","db/crypt.ts","pages/SettingsPage.tsx","pages/people/PeoplePage.tsx","pages/people/EditPersonPage.tsx","pages/people/ShowPersonPage.tsx","pages/StatsPage.tsx","pages/notes/DailyNotes.tsx","routes.tsx","pages/SyncPage.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","config","a","navigator","URL","process","href","origin","addEventListener","swUrl","checkValidServiceWorker","serviceWorker","ready","console","log","registerValidSW","self","event","data","type","skipWaiting","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","fetch","headers","response","contentType","get","status","indexOf","unregister","reload","ServiceWorkerInstall","props","installEvent","e","preventDefault","setState","this","prompt","userChoice","then","choiceResult","outcome","className","onClick","onInstallClick","React","hoverGlow","cursorPointer","css","cursor","display","alignItems","horizontalSpace","width","around","paddingLeft","undefined","paddingRight","marginLeft","marginRight","verticalSpace","height","paddingTop","paddingBottom","marginBottom","EventListener","listeners","listener","push","filter","x","arg","LocalForageStore","store","changeListener","createInstance","name","entityProps","now","Date","toISOString","id","uuid","versionId","parentVersionIds","createdAt","updatedAt","entity","setItem","getKey","trigger","Error","parentVersionId1","suppressChangeListener","getLeafNodes","leafNodes","length","warn","map","node","_","getKeysPrefixed","keys","getItem","prefix","k","startsWith","split","objs","parts","parentVersionId2","groups","o","leafNodeArrays","Object","group","parents","result","leafObjs","dropInstance","join","replace","c","r","Math","random","toString","contexts","tasks","notes","projects","people","getSyncKeys","getBySyncKey","syncKey","entities","import","serverEntities","serverEntity","unencryptedData","JSON","parse","syncKeys","entityData","stringify","db","importEntites","importServerEntites","exportServerEntities","Loader","style","justifyContent","border","padding","background","Data","DataContext","createContext","DataProvider","useState","setData","useEffect","syncer","registerDataListener","getData","startServerSync","ensureServerSyncEnqueued","init","value","Provider","children","useData","useContext","isLocalMode","host","clientId","tryStoreAccessKey","localFetch","isSignedIn","getStateSnapshot","snapshot","files","Set","setStateSnapshot","removeItem","disconnect","refreshDropbox","listFiles","useSnapshot","Dropbox","getAccessToken","accessToken","dropbox","hasMore","filesListFolderContinue","fileListResult","results","entries","path_lower","substring","p","file","add","has_more","filesListFolder","path","recursive","getAccessTokenFromUrl","str","ret","trim","forEach","param","key","shift","val","decodeURIComponent","retVal","Array","isArray","parseAuthFromHash","hash","access_token","uploadFile","contents","filesUpload","getFile","filesDownload","Promise","resolve","blob","fileBlob","reader","FileReader","json","readAsText","getBridge","desktop","chrome","webview","hostObjects","dotnet","android","AndroidBridge","getNotes","getNote","getContext","syncRemote","SyncStatus","Api","hasBridge","getEntity","sendEntity","Idle","intervalHandle","syncListener","dataListener","note","concat","task","context","project","person","loadData","setInterval","Syncing","dropboxApi","runDropboxSync","runBridgeSync","difference","setA","setB","_difference","delete","startAt","serverKeys","toSend","toFetch","size","endAt","error","send","Failed","message","limit","pLimit","promises","all","getAll","orderBy","ServiceWorkerUpdate","waitingServiceWorker","setWaitingServiceWorker","waiting","target","update","componentDidMount","postMessage","themeStore","themeListener","currentTheme","setTheme","theme","getVariable","variable","getComputedStyle","document","documentElement","getPropertyValue","isDark","isMobile","matchMedia","matches","ProjectState","Layout","sidebar","setSidebar","count","setCount","onNavClick","registerSyncListener","overflow","cx","styles","to","exact","activeClassName","overflowY","overflowX","ToolSection","verticalAround","getNestedContexts","grouped","contextId","taskCounts","topContexts","nestedContexts","getFilteredContextIds","contextIds","queue","next","pop","nested","ContextState","useQueryState","initialValue","queryParam","URLSearchParams","search","rawValue","setRawValue","urlParams","set","queryString","history","replaceState","pathname","dispatchEvent","CustomEvent","useQueryStateT","convertTo","convertFrom","strValue","SettingsCompactor","expanded","setExpanded","alwaysVisible","wideStyle","mobileOnly","flexDirection","ContextTag","find","title","ContextBar","ContextActions","borderRight","onChange","i","renderListContext","depth","Inactive","showTaskCount","color","perspectives","groupedProject","groupedContext","defaultPerspective","TaskPage","text","setText","showCompleted","showDeferred","showIncubated","showContextBar","includeNested","options","setOptions","setContextId","projectId","setProjectId","perspectiveId","setPerspectiveId","onKeyPress","create","content","stateChangedAt","noteId","onCompleteChange","save","renderProject","renderDeferred","deferredUntil","moment","format","fromNow","renderNote","renderTitle","pattern","stopPropagation","rel","filterTasks","complete","t","incubatedProjectIds","Incubated","sort","b","renderTask","skipProjectContext","source","encodeURIComponent","checked","textDecoration","perspective","taskBlock","filteredContextIds","stateOrder","Active","Completed","Dropped","emptyActiveProjects","filteredProjects","projectTasks","noProjectTasks","htmlFor","placeholder","getNoteTitle","dailyDate","parsedTitle","exec","getNoteTitleType","noteReferenceRegex","escapeRegExp","getNoteReferenceMatchRegExp","reference","RegExp","getNoteAliasReferenceMatchRegExp","alias","extractReferences","matchAll","extractAllReferences","toLowerCase","existing","n","references","has","existingResult","values","mentionRegex","getAlias","SplitMode","MarkedViewer","useHistory","lifeNavigate","url","markdown","group1","matchContextId","matchTitle","prefixContext","contextTitle","test","referenceRegExp","html","marked","dangerouslySetInnerHTML","__html","NoteModeSelector","mode","onModeChange","SplitModeSelector","Split","Editor","Preview","SimpleSplitEditor","expand","zIndex","maxHeight","components","textAreaStyle","flexGrow","minWidth","borderTop","markedStyle","fontSize","onTextChanged","showGutter","showPrintMargin","wrapEnabled","enableBasicAutocompletion","snippetCompleter","textCompleter","keyWordCompleter","enableLiveAutocompletion","enableSnippets","TreeEditor","invalid","selectMode","setSelectMode","selectedNodes","setSelectedNodes","nodes","setNodes","inputRef","useRef","active","setActive","noteTitles","setNoteTitles","noteCompletions","titles","flat","peopleAliases","setPeopleAliases","aliases","onInputChanged","getParentNode","targetNode","searchNodes","parentNode","childResult","preorderTraversal","stack","reverse","childNode","removeNodeIfEmpty","nodeIndex","findIndex","splice","removeNode","indentNode","unindentNode","parentParentNode","targetNodes","parentNodeIndex","commands","bindKey","win","mac","setTimeout","above","current","editor","getCursorPosition","row","column","newNode","afterNode","insertNode","activeIndex","max","getSession","doc","getLength","min","completions","getCompletions","session","pos","callback","token","getTokenAt","hasPrefix","caption","snippet","meta","requiredPrefix","toggleSelected","includes","renderNode","index","level","isActive","isSelected","clickNode","lineHeight","letterSpacing","ref","focus","highlightActiveLine","maxLines","Infinity","borderLeft","position","bottom","left","right","visit","visitNodes","repeat","copy","insert","ContextSelector","activeContexts","inactiveContexts","disabled","TagInput","setFocus","TagState","availableTags","tags","tagState","setTagState","timeoutId","tagInput","onTextChange","withText","newTagState","getTags","onFocus","clearTimeout","onBlur","selectedTags","onKeyDown","decrementIndex","incrementIndex","addSelectedTag","addText","reopenLastTag","getFilteredAvailableTags","slice","tag","addTag","lastTag","Tag","TagList","NoteEditor","splitMode","setSplitMode","flex","updateNote","noteFor","registered","ensureRegister","listen","onNavigate","processQueue","queuedPath","queuedNote","action","hasChanges","useNote","pristineNote","pristine","setNote","setHasChanges","newNote","newHasChanges","EditNotePage","goBack","setGoBack","daily","createUnsaved","onNoteAdded","TreeViewer","setInvalid","referenceTitle","personAlias","extra","ReferenceViewer","contextNotes","fontWeight","marginTop","PersonReferenceViewer","matchingNotes","ShowNotePage","viewer","ShowVirtualNotePage","List","items","renderItem","NotePage","s","filterTags","setFilterTags","showTagsBar","setShowTagsBar","searchResult","setSearchResult","searchIndex","setSearchIndex","showNotesFor","setShowNotesFor","showNoContext","setShowNoContext","virtualReferences","setVirtualReferences","setInactiveContexts","refs","debouncedSearch","debounce","score","idx","lunr","field","tagCounts","notesOutput","isRef","virtualReferencesOutput","v","output","toggleTag","ContextPage","renderTarget","ProjectPage","refreshData","bind","EmbeddedNoteEdit","targetEntity","addNode","EmbeddedNoteShow","ShowTaskPage","isDirty","setTaskState","setContext","setProject","setDefer","ShowProjectPage","projectState","setProjectState","ShowContextPage","contextState","setContextState","DataPage","render","lifeKeyStore","Uint8Array","getCurrentKey","fileSystemInstance","dirHandle","perms","permissionStatus","fileHandle","readWrite","queryPermission","h","PeoplePage","localeCompare","EditPersonPage","initialState","setValues","handleChange","persist","useForm","birthday","onSave","ShowPersonPage","StatsPage","noteTotalCount","setNoteTotalCount","taskTotalCount","setTaskTotalCount","peopleTotalCount","setPeopleTotalCount","projectTotalCount","setProjectTotalCount","contextTotalCount","setContextTotalCount","DailyNotePage","oneMonthAgo","filteredContexts","dailyNotes","contextCounts","countBy","routes","routeProps","params","component","Fragment","getResults","getTime","setCurrentKey","serviceWorkerState","setServiceWorkerState","clearEntities","confirm","dropboxConnected","setDropboxConnected","refreshKeys","newCurrentKey","writeNode","indent","formatContent","showDirectoryPicker","verifyPermission","getDirectoryHandle","vaultHandle","fileName","dir","getFileHandle","createWritable","keepExistingData","writable","metadata","write","close","peopleHandle","requestPermission","assign","createBrowserHistory","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.08123527.chunk.js","sourcesContent":["declare var self: ServiceWorkerGlobalScope;\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' || window.location.hostname === '[::1]' || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport async function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        \n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        \n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n        \n        window.addEventListener('load', async () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n            \n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n                \n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                await navigator.serviceWorker.ready;\n                console.log('This web app is being served cache-first by a service worker.'\n                );\n            } else {\n                // Is not localhost. Just register service worker\n                await registerValidSW(swUrl, config);\n            }\n        });\n\n        self.addEventListener('message', event => {\n            if (event.data && event.data.type === 'SKIP_WAITING') {\n                self.skipWaiting();\n              }\n        });\n    }\n}\n\nasync function registerValidSW(swUrl: string, config?: Config) {\n    const registration = await navigator.serviceWorker.register(swUrl);\n    \n    registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        \n        if (installingWorker == null) {\n            return;\n        }\n        \n        installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                    // At this point, the updated precached content has been fetched,\n                    // but the previous service worker will still serve the older\n                    // content until all client tabs are closed.\n                    console.log('New content is available and will be used when all tabs for this page are closed.');\n                    \n                    // Execute callback\n                    if (config && config.onUpdate) {\n                        config.onUpdate(registration);\n                    }\n                } else {\n                    // At this point, everything has been precached.\n                    // It's the perfect time to display a\n                    // \"Content is cached for offline use.\" message.\n                    console.log('Content is cached for offline use.');\n                    \n                    // Execute callback\n                    if (config && config.onSuccess) {\n                        config.onSuccess(registration);\n                    }\n                }\n            }\n        };\n    };\n}\n\nasync function checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    const response = await fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' }\n    });\n    \n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        const registration = await navigator.serviceWorker.ready;\n        await registration.unregister()\n        window.location.reload();\n    } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n    }\n}\n\nexport async function unregister() {\n    if ('serviceWorker' in navigator) {\n        const registration = await navigator.serviceWorker.ready;\n        registration.unregister();\n    }\n}\n","import * as React from 'react';\n\nexport class ServiceWorkerInstall extends React.Component<{ }, { installEvent: any }> {\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            installEvent: null\n        };\n    }\n\n    componentDidMount() {\n        window.addEventListener('beforeinstallprompt', (e: any) => {\n            // Prevent Chrome 67 and earlier from automatically showing the prompt\n            e.preventDefault();\n            this.setState({ installEvent: e });\n        });\n    }\n\n    onInstallClick() {\n        if (this.state.installEvent === null) {\n            return;\n        }\n        \n        this.state.installEvent.prompt();\n    \n        // Wait for the user to respond to the prompt\n        this.state.installEvent.userChoice.then((choiceResult: any) => {\n            if (choiceResult.outcome === 'accepted') {\n                console.log('User accepted the A2HS prompt');\n            } else {\n                console.log('User dismissed the A2HS prompt');\n            }\n        });\n    }\n\n    render() {\n        if (!this.state.installEvent) {\n            return null;\n        }\n\n        return (\n            <div className=\"button\" onClick={() => this.onInstallClick()}>Install app</div>\n        );\n    }\n}","import {css} from 'emotion';\n\nexport const hoverGlow = 'hover-glow';\n\nexport const cursorPointer = css({\n    cursor: 'pointer'\n});\n\nexport const verticalCenter = css({\n    display: 'flex',\n    alignItems: 'center'\n});\n\nexport function horizontalSpace(width = '.3rem', around = false) {\n    return css({\n        paddingLeft: around ? width : undefined,\n        paddingRight: around ? width : undefined,\n        '&': {\n            '& > *:first-child': {\n                marginLeft: 0\n            },\n            '& > *': {\n                marginRight: width\n            },\n            '& > *:last-child': {\n                marginRight: 0\n            }\n        }\n    });\n}\n\nexport function verticalSpace(height = '.3rem', around = false) {\n    return css({\n        paddingTop: around ? height : undefined,\n        paddingBottom: around ? height : undefined,\n        '&': {\n            '& > *': {\n                marginBottom: height\n            },\n            '& > *:last-child': {\n                marginBottom: 0\n            }\n        }\n    });\n}","export class EventListener<T> {\n    listeners: ((arg: T) => void)[] = [];\n\n    register(listener: (arg: T) => void) {\n        this.listeners.push(listener);\n        return () =>  {\n            this.listeners = this.listeners.filter(x => x !== listener);\n        };\n    }\n\n    trigger(arg: T) {\n        for(const listener of this.listeners) {\n            listener(arg);\n        }\n    }\n}","import {createInstance} from 'localforage';\nimport {Context} from './context';\nimport { Project } from './project';\nimport { Task } from './task';\nimport { Note } from './note';\nimport * as _ from 'lodash';\nimport { Person } from './person';\nimport { EventListener } from './EventListener';\n\ninterface Store<T extends Entity> {\n    getAll(): Promise<T[]>;\n    get(id: string, revision?: string): Promise<T|null>;\n    save(entity: T): void;\n}\n\nexport type EntityType = 'note' | 'task' | 'project' | 'context' | 'person';\n\nexport interface Entity {\n    id: string;\n    versionId: string;\n    parentVersionId1: string|null;\n    parentVersionId2: string|null;\n    type: EntityType;\n    createdAt: string;\n    updatedAt: string;\n    deferredUntil: string|null;\n}\n\n// type EntityProperty = keyof Entity;\n\n// const sampleEntity: Entity = {\n//     id: 'test',\n//     versionId: 'test',\n//     parentVersionId1: null,\n//     parentVersionId2: null,\n//     type: 'task',\n//     createdAt: 'now',\n//     updatedAt: 'now',\n//     deferredUntil: null\n// };\n\n// const entityProperties: EntityProperty[] = Object.keys(sampleEntity) as EntityProperty[];\n\nexport interface ServerEntity {\n    id: string;\n    versionId: string;\n    data: string;\n    // encryption: string;\n    parentVersionId1: string|null;\n    parentVersionId2: string|null;\n    type: EntityType;\n    createdAt: string;\n    updatedAt: string;\n}\n\nexport interface ServerEntityEncryption {\n    key: string;\n    fingerprint: string;\n    iv: string;\n}\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>\n\nclass LocalForageStore<T extends Entity> implements Store<T> {\n    store: LocalForage;\n    type: EntityType;\n    changeListener: EventListener<T>;\n\n    constructor(type: EntityType) {\n        this.type = type;\n        this.store = createInstance({\n            name: `store-${type}`\n        });\n        this.changeListener = new EventListener<T>();\n    }\n\n    createUnsaved(entityProps: Omit<T, keyof Entity>): T {\n        const now = new Date().toISOString();\n        let entity = {\n            id: this.uuid(),\n            versionId: this.uuid(),\n            type: this.type,\n            parentVersionIds: [] as string[],\n            createdAt: now,\n            updatedAt: now,\n            ...entityProps as any,\n        } as T;\n        return entity;\n    }\n\n    async create(entityProps: Omit<T, keyof Entity>): Promise<T> {\n        const now = new Date().toISOString();\n        let entity = {\n            id: this.uuid(),\n            versionId: this.uuid(),\n            type: this.type,\n            parentVersionIds: [] as string[],\n            createdAt: now,\n            updatedAt: now,\n            ...entityProps as any,\n        } as T;\n        await this.store.setItem(this.getKey(entity), entity);\n        this.changeListener && this.changeListener.trigger(entity);\n        return entity;\n    }\n\n    save(entity: T): void {\n        if (!entity.id) {\n            entity.id = this.uuid();\n        }\n\n        if (entity.type !== this.type) {\n            throw new Error(`Invalid type: ${entity.type} - expected ${this.type}`);\n        }\n\n        const now = new Date().toISOString();\n\n        if (!entity.createdAt) {\n            entity.createdAt = now;\n        }\n\n        entity.updatedAt = now;\n\n        if(entity.versionId) {\n            entity.parentVersionId1 = entity.versionId;\n        }\n\n        entity.versionId = this.uuid();\n        this.store.setItem(this.getKey(entity), entity);\n        this.changeListener && this.changeListener.trigger(entity);\n    }\n\n    import(entity: T, suppressChangeListener = false) {\n        if (entity.type !== this.type) {\n            throw new Error(`Invalid type ${entity.type} - expected ${this.type}`);\n        }\n\n        this.store.setItem(this.getKey(entity), entity);\n        !suppressChangeListener && this.changeListener && this.changeListener.trigger(entity);\n    }\n\n    async get(id: string, versionId?: string): Promise<T|null> {\n        if (versionId === undefined) {\n            const leafNodes = await this.getLeafNodes(`${id}/`);\n\n            if (leafNodes.length > 1) {\n                console.warn(`Found ${leafNodes.length} leaf nodes for entity ${this.type}/${id} - expected 1: ${leafNodes.map(x => x.versionId)}`);\n\n                for(const node of leafNodes) {\n                    console.log('leaf node', node);\n                }\n                \n                // throw `Found ${leafNodes.length} leaf nodes for entity ${this.type}/${id} - expected 1: ${leafNodes.map(x => x.versionId)}`;\n                return _.orderBy(leafNodes, x => x.updatedAt, 'desc')[0];\n            }\n\n            if (leafNodes.length === 0) {\n                return null;\n            }\n\n            return leafNodes[0];\n        } else {\n            const keys = await this.getKeysPrefixed(`${id}/${versionId}`);\n            return await this.store.getItem(keys[0]) as T;\n        }\n    }\n\n    async getAll(): Promise<T[]> {\n        return await this.getLeafNodes();\n    }\n\n    async getKeysPrefixed(prefix: string) {\n        const keys = await this.store.keys();\n        return keys.filter(k => k.startsWith(prefix));\n    }\n\n    async getSyncKeys(): Promise<string[]> {\n        const keys = await this.store.keys();\n        return keys.map(x => `${this.type}/${x.split('/')[0]}/${x.split('/')[1]}`)\n    }\n\n    private async getLeafNodes(prefix = '') {\n        const keys = await this.getKeysPrefixed(prefix);\n\n        const objs = keys.map(k => {\n            const parts = k.split('/');\n\n            let parentVersionId1 = null;\n            let parentVersionId2 = null;\n\n            if (parts[2].length > 0) {\n                const parentVersionIds = parts[2].split('+');\n\n                if (parentVersionIds.length > 2) {\n                    throw new Error(\"ParentVersionIds length > 2\");\n                }\n\n                parentVersionId1 = parentVersionIds[0];\n                parentVersionId2 = parentVersionIds.length > 1 ? parentVersionIds[1] : null;\n            }\n\n            return {\n                id: parts[0],\n                versionId: parts[1],\n                parentVersionId1: parentVersionId1,\n                parentVersionId2: parentVersionId2,\n            }\n        });\n\n        const groups = _.groupBy(objs, o => o.id);\n\n        const leafNodeArrays = Object.keys(groups).map(k => {\n            const group = groups[k];\n            const parents: { [key: string]: boolean } = {};\n\n            for(const o of group) {\n                if (o.parentVersionId1) {\n                    parents[o.parentVersionId1] = true;\n                }\n                if (o.parentVersionId2) {\n                    parents[o.parentVersionId2] = true;\n                }\n            }\n\n            const leafNodes = group.filter(o => {\n                const isLeaf = !parents[o.versionId];\n                return isLeaf;\n            });\n\n            return leafNodes;\n        });\n\n        const result: T[] = [];\n\n        for(let leafNodes of leafNodeArrays) {\n            const leafObjs: T[] = [];\n            for(let node of leafNodes) {\n                leafObjs.push(await (this.store.getItem(this.getKey(node))) as T);\n            }\n\n            if(leafObjs.length !== 1) {\n                console.warn(`Found ${leafObjs.length} leaf nodes for entity ${this.type}/${leafNodes[0].id} - expected 1: ${leafObjs.map(x => x.versionId)}`);\n    \n                for(const node of leafObjs) {\n                    console.log('leaf node', node);\n                }\n    \n                result.push(_.orderBy(leafObjs, x => x.updatedAt, 'desc')[0])\n            } else {\n                result.push(leafObjs[0]);\n            }\n        }\n\n        return result;\n    }\n\n    registerChangeListener(listener: (status: T) => void) {\n        this.changeListener.register(listener)\n    }\n\n    dropInstance() {\n        this.store.dropInstance();\n    }\n\n    private getKey(entity: { id: string, versionId: string, parentVersionId1: string|null, parentVersionId2: string|null }) {\n        let parentVersionIds = [];\n\n        if (entity.parentVersionId1) {\n            parentVersionIds.push(entity.parentVersionId1);\n        }\n\n        if (entity.parentVersionId2) {\n            parentVersionIds.push(entity.parentVersionId2);\n        }\n\n\n        return `${entity.id}/${entity.versionId}/${parentVersionIds.join('+')}`;\n    }\n\n    private uuid() {\n        return 'xxxxxxxx-xxxx-xxxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            const r = Math.random() * 16 | 0, v = c === 'x' ? r : ((r & 0x3) | 0x8);\n            return v.toString(16);\n        });\n    }\n}\n\nconst contexts = new LocalForageStore<Context>(\"context\");\nconst tasks = new LocalForageStore<Task>(\"task\");\nconst notes = new LocalForageStore<Note>(\"note\");\nconst projects = new LocalForageStore<Project>(\"project\");\nconst people = new LocalForageStore<Person>(\"person\");\n\nasync function getSyncKeys() {\n    const keys: string[] = [\n        ...(await contexts.getSyncKeys()),\n        ...(await tasks.getSyncKeys()),\n        ...(await notes.getSyncKeys()),\n        ...(await projects.getSyncKeys()),\n        ...(await people.getSyncKeys()),\n    ];\n\n    return keys;\n}\n\nasync function getBySyncKey(syncKey: string): Promise<Entity|null> {\n    const [type, id, versionId] = syncKey.split('/');\n\n    switch(type) {\n        case 'context':\n            return contexts.get(id, versionId);\n        case 'task':\n            return tasks.get(id, versionId);\n        case 'note':\n            return notes.get(id, versionId);\n        case 'project':\n            return projects.get(id, versionId);\n        case 'person':\n            return people.get(id, versionId);\n        default:\n            throw new Error('Unknown type: ' + type);\n    }\n}\n\nasync function importEntites(entities: Entity[]) {\n    for(const entity of entities) {\n        switch(entity.type) {\n            case 'context':\n                contexts.import(entity as Context);\n                break;\n            case 'task':\n                tasks.import(entity as Task);\n                break;\n            case 'note':\n                notes.import(entity as Note);\n                break;\n            case 'project':\n                projects.import(entity as Project);\n                break;\n            case 'person':\n                people.import(entity as Person);\n                break;\n            default:\n                throw new Error('Unknown type: ' + entity.type);\n        }\n    }\n}\n\nasync function importServerEntites(serverEntities: ServerEntity[]) {\n    for(const serverEntity of serverEntities) {\n        // const encryption = JSON.parse(serverEntity.encryption) as ServerEntityEncryption;\n        // const unencryptedData = await unwrapAndDecrypt(encryption.fingerprint, encryption.key, serverEntity.data, encryption.iv);\n        const unencryptedData = serverEntity.data;\n        let entity = JSON.parse(unencryptedData) as Entity;\n\n        entity.id = serverEntity.id;\n        entity.versionId = serverEntity.versionId;\n        entity.type = serverEntity.type;\n        entity.parentVersionId1 = serverEntity.parentVersionId1;\n        entity.parentVersionId2 = serverEntity.parentVersionId2;\n        entity.createdAt = serverEntity.createdAt;\n        entity.updatedAt = serverEntity.updatedAt;\n\n        switch(serverEntity.type) {\n            case 'context':\n                contexts.import(entity as Context, true);\n                break;\n            case 'task':\n                tasks.import(entity as Task, true);\n                break;\n            case 'note':\n                notes.import(entity as Note, true);\n                break;\n            case 'project':\n                projects.import(entity as Project, true);\n                break;\n            case 'person':\n                people.import(entity as Person, true);\n                break;\n            default:\n                throw new Error('Unknown type: ' + entity.type);\n        }\n    }\n}\n\nasync function exportServerEntities(syncKeys: string[]): Promise<ServerEntity[]> {\n    const result: ServerEntity[] = [];\n\n    for (const syncKey of syncKeys) {\n        const entity = await getBySyncKey(syncKey);\n\n        if (entity === null) {\n            console.warn(\"Entity with key not found: \" + syncKey)\n            continue;\n        }\n\n        const entityData = {...entity};\n\n        delete entityData.createdAt;\n        delete entityData.updatedAt;\n        delete entityData.id;\n        delete entityData.versionId;\n        delete entityData.type;\n        delete entityData.parentVersionId1;\n        delete entityData.parentVersionId2;\n\n        const unencryptedData = JSON.stringify(entityData);\n        // const encryptionResult = await encryptAndWrap((await getCurrentKey()).fingerprint, unencryptedData);\n        // const encryption: ServerEntityEncryption = { \n        //     fingerprint: encryptionResult.fingerprint, \n        //     key: encryptionResult.key,\n        //     iv: encryptionResult.iv\n        // };\n        // const encryptionJson = JSON.stringify(encryption);\n\n        const serverEntity: ServerEntity = {\n            id: entity.id,\n            versionId: entity.versionId,\n            type: entity.type,\n            parentVersionId1: entity.parentVersionId1,\n            parentVersionId2: entity.parentVersionId2,\n            createdAt: entity.createdAt,\n            updatedAt: entity.updatedAt,\n            data: unencryptedData,\n            // encryption: encryptionJson\n        };\n\n        result.push(serverEntity);\n    }\n\n    return result;\n}\n\nexport const db = {\n    contexts,\n    tasks,\n    notes,\n    projects,\n    people,\n    getSyncKeys,\n    importEntites,\n    importServerEntites,\n    exportServerEntities\n};","import * as React from 'react';\n\nexport const Loader: React.FC = (props) => {\n    return (\n        <div style={{display: 'flex', height: '100%', justifyContent: 'center', alignItems: 'center'}}>\n            <div style={{border: '1px solid #555', padding: '1rem 2rem', background: '#2e2e2e'}}>Loading...</div>\n        </div>\n    );\n}","import { Note } from \"./db/note\";\nimport { Task } from \"./db/task\";\nimport { Context } from \"./db/context\";\nimport { Project } from \"./db/project\";\nimport { Person } from \"./db/person\";\nimport React, { useContext, useEffect } from \"react\";\nimport { syncer } from \"./db/syncer\";\nimport { Loader } from \"./components/Loader\";\n\nexport class Data {\n    constructor(notes: Note[], tasks: Task[], contexts: Context[], projects: Project[], people: Person[]) {\n        this.notes = notes;\n        this.tasks = tasks;\n        this.contexts = contexts;\n        this.projects = projects;\n        this.people = people;\n    }\n\n    notes: Note[];\n    readonly tasks: Task[];\n    readonly contexts: Context[];\n    readonly projects: Project[];\n    readonly people: Person[];\n};\n\ninterface DataContextState {\n    data: Data;\n}\n\nconst DataContext = React.createContext<DataContextState>({\n    data: null as any,\n});\n\nexport const DataProvider: React.FC = props => {\n    const [data, setData] = React.useState<Data>(null as any);\n\n    useEffect(() => {\n        async function init() {\n            syncer.registerDataListener(async data => setData(data));\n            setData(await syncer.getData());\n            await syncer.startServerSync();\n            await syncer.ensureServerSyncEnqueued();\n        };\n        init();\n    }, []);\n\n    const value: DataContextState = {\n        data,\n    };\n\n    if (!data) {\n        return <Loader />;\n    }\n\n    return (\n      <DataContext.Provider value={value}>\n        {props.children}\n      </DataContext.Provider>\n    );\n};\n\nexport const useData = () => {\n    const value = useContext(DataContext);\n    return value;\n};","import { Dropbox } from 'dropbox';\nimport {createInstance} from 'localforage';\nimport 'whatwg-fetch';\n\nconst store = createInstance({name: 'store-dropbox'})\n\nconst localClientId = 'jh9cnt92wi5e5my';\nconst prodClientId = 'li12ai4q2cs3dkc';\n\nexport const isLocalMode = window.location.host !== 'life.rasmuskl.dk';\n\nconst clientId = isLocalMode ? localClientId : prodClientId;\n\ntryStoreAccessKey();\n\nconst localFetch = window.fetch;\n\nexport function signIn() {\n    window.location.assign(`https://www.dropbox.com/oauth2/authorize?client_id=${clientId}&response_type=token&redirect_uri=${window.location.toString()}`);\n}\n\nexport async function isSignedIn() {\n    return !!(await store.getItem('token'));\n}\n\ninterface DropboxSnapshot {\n    cursor: string|null;\n    files: Set<string>;\n}\n\nasync function getStateSnapshot() {\n    const snapshot = await store.getItem('snapshot') as DropboxSnapshot|null;\n    return snapshot || { cursor: null, files: new Set<string>() };\n}\n\nasync function setStateSnapshot(snapshot: DropboxSnapshot|null) {\n    if (!snapshot) {\n        await store.removeItem('snapshot');\n    } else {\n        await store.setItem('snapshot', snapshot);\n    }\n}\nexport async function disconnect() {\n    await store.removeItem('token');\n}\n\nexport async function refreshDropbox() {\n    await setStateSnapshot(null);\n}\n\nexport async function listFiles(useSnapshot = true) {\n    if(!await isSignedIn()) {\n        throw new Error('Not authenticated');\n    }\n\n    const dropbox = new Dropbox({ accessToken: await getAccessToken(), fetch: localFetch });\n    let snapshot: DropboxSnapshot = { cursor: null, files: new Set<string>() };\n\n    if (useSnapshot) {\n        snapshot = await getStateSnapshot();\n    }\n\n    let hasMore = true;\n\n    while(hasMore) {\n        if (snapshot.cursor) {\n            const fileListResult = await dropbox.filesListFolderContinue({ cursor: snapshot.cursor });\n            const results = fileListResult.entries.filter(e => e['.tag'] === 'file').map(e => e.path_lower?.substring(1)).filter(p => p) as string[];\n            snapshot.cursor = fileListResult.cursor;\n            for(const file of results) {\n                snapshot.files.add(file);\n            }\n            hasMore = fileListResult.has_more;\n        } else {\n            const fileListResult = await dropbox.filesListFolder({path: '', recursive: true});\n            const results = fileListResult.entries.filter(e => e['.tag'] === 'file').map(e => e.path_lower?.substring(1)).filter(p => p) as string[];\n            snapshot.cursor = fileListResult.cursor;    \n            for(const file of results) {\n                snapshot.files.add(file);\n            }\n            hasMore = fileListResult.has_more;\n        }\n\n        await setStateSnapshot(snapshot);\n    }\n\n    return snapshot.files;\n}\n\nexport function getAccessTokenFromUrl() {\n    const results = parseAuthFromHash(window.location.hash);\n    return results.access_token;\n}\n\nexport async function tryStoreAccessKey() {\n    const accessToken = getAccessTokenFromUrl();\n\n    if (accessToken) {\n        await store.setItem('token', accessToken);\n    }\n}\n\nexport async function uploadFile(path: string, contents: string) {\n    if(!await isSignedIn()) {\n        throw new Error('Not authenticated');\n    }\n\n    const dropbox = new Dropbox({ accessToken: await getAccessToken(), fetch: localFetch });\n    await dropbox.filesUpload({\n        path: `/${path}`,\n        contents\n    });\n}\n\nexport async function getFile<T>(path: string) {\n    if(!await isSignedIn()) {\n        throw new Error('Not authenticated');\n    }\n\n    const dropbox = new Dropbox({ accessToken: await getAccessToken(), fetch: localFetch });\n    const response = await dropbox.filesDownload({path: `/${path}` })\n    return new Promise<T>((resolve) => {\n        const blob: Blob = (response as any).fileBlob;\n        const reader = new FileReader();\n        reader.addEventListener(\"loadend\", function() {\n            const json = reader.result as string;\n            resolve(JSON.parse(json) as T);\n        });\n        reader.readAsText(blob);\n    });\n}\n\n\nasync function getAccessToken() {\n    return await store.getItem('token') as string;\n}\n\nfunction parseAuthFromHash(str: string) {\n    const ret: { [k: string]: string[] | string } = {};\n\n    if (typeof str !== 'string') {\n        return ret;\n    }\n\n    str = str.trim().replace(/^(\\?|#|&)/, '');\n\n    if (!str) {\n        return ret;\n    }\n\n    str.split('&').forEach(function (param) {\n        const parts = param.replace(/\\+/g, ' ').split('=');\n        let key = parts.shift();\n        let val = parts.length > 0 ? parts.join('=') : null;\n\n        key = decodeURIComponent(key!);\n        val = val ? decodeURIComponent(val) : null;\n\n        var retVal = ret[key];\n        if (ret[key] === undefined) {\n            ret[key] = val!;\n        } else if (Array.isArray(retVal)) {\n            retVal.push(val!);\n        } else {\n            ret[key] = [ret[key] as string, val!];\n        }\n    });\n\n    return ret;\n}","import React from \"react\";\nimport { Context } from \"../db/context\";\nimport { Note } from \"../db/note\";\n\nfunction getBridge() {\n    const desktop: HostBridge = (window as any).chrome?.webview?.hostObjects?.dotnet;\n    const android: HostBridge = (window as any).AndroidBridge;\n    return desktop || android || null;\n}\n\nfunction hasBridge() {\n    return !!getBridge();\n}\n\ninterface HostBridge {\n    getNote(id: string): Promise<string>;\n    getContext(id: string): Promise<string>;\n    getEntity(key: string): Promise<string>;\n    sendEntity(key: string, contents: string): Promise<void>;\n    getSyncKeys(): Promise<string>;\n    getNotes(): Promise<string>\n    syncRemote(): Promise<void>\n}\n\nfunction getEntity(key: string) {\n    return getBridge().getEntity(key);\n}\n\nfunction sendEntity(key: string, contents: string) {\n    return getBridge().sendEntity(key, contents);\n}\n\nasync function getSyncKeys() {\n    return JSON.parse(await getBridge().getSyncKeys()) as string[];\n}\n\nasync function getNotes() {\n    return JSON.parse(await getBridge().getNotes()) as Note[];\n}\n\nasync function getNote(id: string) {\n    return JSON.parse(await getBridge().getNote(id)) as Note;\n}\n\nasync function getContext(id: string) {\n    return JSON.parse(await getBridge().getContext(id)) as Context;\n}\n\nasync function syncRemote() {\n    await getBridge().syncRemote();\n}\n\nexport const useNotes = () => {\n    const [data, setData] = React.useState<Note[]|null>(null);\n  \n    async function fetchData() {\n        console.time('getNotes');\n        const response = await Api.getNotes();\n        console.timeEnd('getNotes');\n        setData(response);\n    }\n  \n    React.useEffect(() => {fetchData()}, []);\n    return data;\n};\n\nexport const useNote = (id: string|null) => {\n    const [data, setData] = React.useState<Note|null>(null);\n  \n    async function fetchData(id: string|null) {\n        if(!id) {\n            return;\n        }\n\n        console.time('getNote');\n        const response = await Api.getNote(id);\n        console.timeEnd('getNote');\n        setData(response);\n    }\n  \n    React.useEffect(() => {fetchData(id)}, [id]);\n    return data;\n};\n\nexport const useContext = (id: string|null) => {\n    const [data, setData] = React.useState<Context|null>(null);\n  \n    async function fetchData(id: string|null) {\n        if(!id) {\n            return;\n        }\n\n        // console.time('getContext');\n        const response = await Api.getContext(id);\n        // console.timeEnd('getContext');\n        setData(response);\n    }\n  \n    React.useEffect(() => {fetchData(id)}, [id]);\n    return data;\n};\n\nexport const Api = {\n    hasBridge,\n    getEntity,\n    sendEntity,\n    getSyncKeys,\n    getNotes,\n    getNote,\n    getContext,\n    syncRemote,\n};\n\n","import { db, ServerEntity } from \"./db\";\nimport * as _ from \"lodash\";\nimport { Data } from \"../model\";\nimport {EventListener} from './EventListener';\nimport * as dropboxApi from '../lib/dropboxApi';\nimport pLimit from 'p-limit';\nimport { Api } from \"../bridge/HostBridge\";\n\nexport enum SyncStatus {\n    Idle,\n    Syncing,\n    Failed,\n};\n\nexport interface SyncResult {\n    startAt: Date;\n    endAt: Date;\n    type: 'desktop'|'dropbox';\n    fetch: number;\n    send: number;\n    error: Error|null;\n}\n\nclass Syncer {\n    status = SyncStatus.Idle;\n    results: SyncResult[] = [];\n    data: Data|null = null;\n    intervalHandle: number|null = null;\n\n    syncListener = new EventListener<SyncStatus>();\n    dataListener = new EventListener<Data>();\n\n    constructor() {\n        db.notes.changeListener.register(note => {\n            if(!this.data) {\n                return;\n            }\n\n            const notes = _.orderBy(this.data.notes.filter(x => x.id !== note.id).concat(note), x => x.updatedAt);\n            this.data = new Data(notes, this.data.tasks, this.data.contexts, this.data.projects, this.data.people);\n            this.dataListener.trigger(this.data);\n            this.startServerSync();\n        });\n\n        db.tasks.changeListener.register(task => {\n            if(!this.data) {\n                return;\n            }\n\n            const tasks = this.data.tasks.filter(x => x.id !== task.id).concat(task);\n            this.data = new Data(this.data.notes, tasks, this.data.contexts, this.data.projects, this.data.people);\n            this.dataListener.trigger(this.data);\n            this.startServerSync();\n        });\n\n        db.contexts.changeListener.register(context => {\n            if(!this.data) {\n                return;\n            }\n\n            const contexts = this.data.contexts.filter(x => x.id !== context.id).concat(context);\n            this.data = new Data(this.data.notes, this.data.tasks, contexts, this.data.projects, this.data.people);\n            this.dataListener.trigger(this.data);\n            this.startServerSync();\n        });\n\n        db.projects.changeListener.register(project => {\n            if(!this.data) {\n                return;\n            }\n\n            const projects = this.data.projects.filter(x => x.id !== project.id).concat(project);\n            this.data = new Data(this.data.notes, this.data.tasks, this.data.contexts, projects, this.data.people);\n            this.dataListener.trigger(this.data);\n            this.startServerSync();\n        });\n\n        db.people.changeListener.register(person => {\n            if(!this.data) {\n                return;\n            }\n\n            const people = this.data.people.filter(x => x.id !== person.id).concat(person);\n            this.data = new Data(this.data.notes, this.data.tasks, this.data.contexts, this.data.projects, people);\n            this.dataListener.trigger(this.data);\n            this.startServerSync();\n        });\n    }\n\n    registerSyncListener(listener: (status: SyncStatus) => void) {\n        this.syncListener.register(listener)\n    }\n\n    registerDataListener(listener: (status: Data) => void) {\n        this.dataListener.register(listener)\n    }\n\n    getResults() {\n        return this.results;\n    }\n\n    async getData() {\n        if (!this.data) {\n            this.data = await this.loadData();\n        }\n\n        return this.data;\n    }\n\n    async ensureServerSyncEnqueued() {\n        if (this.intervalHandle !== null) {\n            return;\n        }\n\n        this.intervalHandle = setInterval(async () => {\n            await this.startServerSync();\n        }, 60000) as any;\n    }\n\n    async startServerSync() {\n        // console.trace('sync');\n\n        if (this.status === SyncStatus.Syncing) {\n            return;\n        }\n\n        if(await dropboxApi.isSignedIn()) {\n            await this.runDropboxSync();\n        }\n\n        await this.runBridgeSync();\n    }\n    \n    async runBridgeSync() {\n        if(!Api.hasBridge()) {\n            return;\n        }\n\n        const startAt = new Date();\n\n        function difference<T>(setA: Set<T>, setB: Set<T>): Set<T> {\n            let _difference = new Set(setA);\n            for (const key of setB) {\n                _difference.delete(key);\n            }\n            return _difference;\n        }\n\n        try {\n            await Api.syncRemote();\n\n            const serverKeys = await Api.getSyncKeys();\n            const syncKeys = new Set(await db.getSyncKeys());\n            \n            const toSend = difference(syncKeys, new Set(serverKeys));\n            const toFetch = difference(new Set(serverKeys), syncKeys);\n\n            if (toSend.size || toFetch.size) {\n                this.status = SyncStatus.Syncing;\n                this.syncListener.trigger(this.status);\n            }\n    \n            for(const key of toSend) {\n                const entities = await db.exportServerEntities([key]);\n                await Api.sendEntity(key, JSON.stringify(entities[0]));\n            }\n    \n            for(const key of toFetch) {\n                const contents = await Api.getEntity(key);\n                const entity: ServerEntity = JSON.parse(contents);\n                await db.importServerEntites([entity]);\n            }\n\n            if(toFetch.size > 0) {\n                const data = await this.loadData();\n                this.dataListener.trigger(data);\n            }\n\n            if (toSend.size > 0) {\n                await Api.syncRemote();\n            }\n\n            this.results.push({ type: 'desktop', startAt, endAt: new Date(), error: null, fetch: toFetch.size, send: toSend.size })\n            this.status = SyncStatus.Idle;\n            this.syncListener.trigger(this.status);            \n        } catch (e) {\n            this.status = SyncStatus.Failed;\n            this.results.push({ type: 'desktop', startAt, endAt: new Date(), error: e && e.message ? e.message : e, fetch: 0, send: 0 });\n            this.syncListener.trigger(this.status);\n        }\n    }\n\n    async runDropboxSync() {\n        const startAt = new Date();\n    \n        function difference<T>(setA: Set<T>, setB: Set<T>): Set<T> {\n            let _difference = new Set(setA);\n            for (const key of setB) {\n                _difference.delete(key);\n            }\n            return _difference;\n        }\n    \n        try {\n            const files = await dropboxApi.listFiles();\n            const syncKeys = new Set(await db.getSyncKeys());\n    \n            const toSend = difference(syncKeys, files);\n            const toFetch = difference(files, syncKeys);\n\n            if (toSend.size || toFetch.size) {\n                this.status = SyncStatus.Syncing;\n                this.syncListener.trigger(this.status);\n            }            \n    \n            for(const key of toSend) {\n                const entities = await db.exportServerEntities([key]);\n                await dropboxApi.uploadFile(key, JSON.stringify(entities[0]));\n            }\n    \n            const limit = pLimit(10);\n            const promises = [];\n    \n            for(const key of toFetch) {\n                promises.push(limit(async () => {\n                    const entity = await dropboxApi.getFile<ServerEntity>(key);\n                    await db.importServerEntites([entity]);\n                }));\n            }\n    \n            await Promise.all(promises);\n    \n            if(toFetch.size > 0) {\n                const data = await this.loadData();\n                this.dataListener.trigger(data);\n            }\n    \n            this.results.push({ type: 'dropbox', startAt, endAt: new Date(), error: null, fetch: toFetch.size, send: toSend.size })\n            this.status = SyncStatus.Idle;\n            this.syncListener.trigger(this.status);\n        } catch (e) {\n            this.status = SyncStatus.Failed;\n            this.results.push({ type: 'dropbox', startAt, endAt: new Date(), error: e && e.message ? e.message : e, fetch: 0, send: 0 });\n            this.syncListener.trigger(this.status);\n        }\n    }\n\n    private async loadData(): Promise<Data> {\n        const contexts = db.contexts.getAll();\n        const tasks = await db.tasks.getAll();\n        const projects = db.projects.getAll();\n        const people = db.people.getAll();\n        const notes = _.orderBy(await db.notes.getAll(), x => x.updatedAt);\n        \n        return new Data(notes, await tasks, await contexts, await projects, await people);\n    }\n}\n\nexport const syncer = new Syncer();\n\n\n\n","import * as React from 'react';\n\nexport function ServiceWorkerUpdate() {\n    const [waitingServiceWorker, setWaitingServiceWorker] = React.useState<ServiceWorker|null>(null);\n\n    React.useEffect(() => {\n        if (!navigator.serviceWorker) {\n            return;\n        }\n\n        async function componentDidMount() {\n            const registration = await navigator.serviceWorker.ready;\n            setWaitingServiceWorker(registration.waiting);\n            registration.addEventListener('updatefound', () => {\n                registration.installing?.addEventListener('statechange', (event: any) => {\n                    if (event.target.state === 'installed') {\n                        setWaitingServiceWorker(event.target);\n                    }\n                })\n            });\n            registration.update();\n        }\n        \n        componentDidMount();\n\n        setInterval(async () => {\n            const registration = await navigator.serviceWorker.ready;\n            registration.update();\n        }, 60 * 60 * 1000)\n    }, [])\n\n    if (!waitingServiceWorker) {\n        return null;\n    }\n\n    const updateServiceWorker = () => {\n        if (!navigator.serviceWorker) {\n            return;\n        }\n\n        waitingServiceWorker.addEventListener('statechange', (event: any) => {\n            if (event.target.state === 'activated') {\n                window.location.reload()\n              }\n        })\n        waitingServiceWorker.postMessage({ type: 'SKIP_WAITING' })\n    };\n\n    return (\n        <div className=\"button\" onClick={updateServiceWorker}>Update</div>\n    );\n}","import {createInstance} from 'localforage';\nimport { EventListener } from '../db/EventListener';\n\nconst themeStore = createInstance({ name: 'theme' });\nconst themeListener = new EventListener<string>();\n\nconst defaultTheme = 'dark-theme';\nlet currentTheme = defaultTheme;\n\nasync function init() {\n    currentTheme = await themeStore.getItem<string>('theme');\n    currentTheme = currentTheme || defaultTheme;\n    themeListener.trigger(currentTheme);\n}\n\ninit();\n\nexport async function setTheme(theme: string) {\n    currentTheme = theme;\n    await themeStore.setItem('theme', currentTheme);\n    themeListener.trigger(currentTheme);\n}\n\nexport function registerThemeListener(listener: (theme: string) => void) {\n    themeListener.register(listener)\n}\n\nexport function getVariable(variable: string) {\n    return getComputedStyle(document.documentElement).getPropertyValue(variable);\n}\n\nexport function isDark() {\n    return currentTheme === defaultTheme;\n}\n\n","import * as React from 'react';\nimport './Layout.scss';\nimport { NavLink } from 'react-router-dom';\nimport { ServiceWorkerInstall } from './ServiceWorkerInstall';\nimport * as styles from '../layout/styles';\nimport { syncer, SyncStatus } from '../db/syncer';\nimport { cx } from 'emotion';\nimport { ServiceWorkerUpdate } from './ServiceWorkerUpdate';\nimport { registerThemeListener } from '../layout/theme';\n\nexport function isMobile() {\n    return window.matchMedia(\"(max-width: 768px)\").matches;\n}\n\nexport const Layout: React.FC<{}> = (props) => {\n    const [sidebar, setSidebar] = React.useState(() => !isMobile())\n    const [count, setCount] = React.useState(0);\n    const [theme, setTheme] = React.useState<string|null>(null);\n\n    React.useEffect(() => {\n        syncer.registerSyncListener(() => setCount(c => c +  1));\n    }, []);\n\n    React.useEffect(() => {\n        registerThemeListener(x => {\n            document.documentElement.className = x;\n            setTheme(x)\n        });\n    }, []);\n\n    function onNavClick() {\n        if(isMobile()) {\n            setSidebar(false);\n        }\n    }\n\n    if (theme == null)\n    {\n        return <></>;\n    }\n\n    return <>\n        <section style={{display: 'flex', overflow: 'hidden', height: '100%'}} className={theme}>\n            <React.Fragment key={count} />\n            <div className={cx('navbar')}>\n                <div className={cx(styles.horizontalSpace('1rem'))}>\n                    {!sidebar && (\n                        <>\n                            <NavLink className={cx('button', 'hover-glow')} to={ '/' } onClick={onNavClick} exact activeClassName='is-active'>Notes</NavLink>\n                            <NavLink className={cx('button', 'hover-glow')} to={ '/tasks' } onClick={onNavClick} exact activeClassName='is-active'>Tasks</NavLink>\n                        </>\n                    )}\n                </div>\n                <div className={cx(styles.horizontalSpace('1rem'))}>\n                    {syncer.status !== SyncStatus.Idle && <NavLink className=\"button\" to=\"/sync\">Sync: {SyncStatus[syncer.status]}</NavLink>}\n                    <ServiceWorkerUpdate />\n                    <ServiceWorkerInstall />\n                    <button className=\"button\" onClick={() => setSidebar(!sidebar)}>\n                        Menu\n                    </button>\n                </div>\n            </div>\n\n            <div className={cx('sidebar', 'list')} style={{overflowY: 'auto', paddingTop: 52, height: '100%', width: sidebar ? undefined : 0, overflowX: 'hidden'}}>\n                <NavLink className={cx('item', 'hover-glow')} to={ '/' } onClick={onNavClick} exact activeClassName='is-active'>Notes</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/notes/daily' } onClick={onNavClick} exact activeClassName='is-active'>Daily Notes</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/tasks' } onClick={onNavClick} exact activeClassName='is-active'>Tasks</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/projects' } onClick={onNavClick} exact activeClassName='is-active'>Projects</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/contexts' } onClick={onNavClick} exact activeClassName='is-active'>Contexts</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/people' } onClick={onNavClick} exact activeClassName='is-active'>People</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/playground' } onClick={onNavClick} exact activeClassName='is-active'>Playground</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/stats' } onClick={onNavClick} exact activeClassName='is-active'>Stats</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/settings' } onClick={onNavClick} exact activeClassName='is-active'>Settings</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/sync' } onClick={onNavClick} exact activeClassName='is-active'>Sync Status</NavLink>\n            </div>\n\n            <div className=\"main\" style={{paddingTop: 52}}>\n                { props.children }\n            </div>\n        </section>\n    </>;\n}\n","import { Entity } from \"./db\";\n\nexport enum ProjectState {\n    Active = 'Active',\n    Incubated = 'Incubated',\n    Completed = 'Completed',\n    Dropped = 'Dropped',\n}\n\nexport interface Project extends Entity {\n    type: 'project',\n    title: string;\n    contextId: string|null;\n    state: ProjectState;\n}","import * as React from 'react';\nimport * as styles from '../layout/styles';\nimport { cx } from 'emotion';\n\nexport const ToolSection: React.SFC<{ verticalAround?: boolean }> = (props) => {\n    let verticalAround = props.verticalAround;\n\n    if (verticalAround === undefined) {\n        verticalAround = true;\n    }\n\n    return (\n        <div className={cx(styles.horizontalSpace('8px', true), styles.verticalSpace('8px', verticalAround))}>{props.children}</div>\n    );\n}","import { Data } from \"../model\";\nimport * as _ from 'lodash';\nimport { Context } from \"../db/context\";\n\nexport interface NestedContexts {\n    topContexts: Context[];\n    nestedContexts: {[id: string]: Context[]};\n    taskCounts: {[id: string]: number};\n}\n\nexport function getNestedContexts(data: Data): NestedContexts {\n    const grouped = _.groupBy(data.contexts, x => x.contextId);\n    const taskCounts = _.countBy(data.tasks.filter(x => x.state === 'active'), x => x.contextId);\n\n    return {\n        topContexts: data.contexts.filter(x => !x.contextId),\n        nestedContexts: grouped,\n        taskCounts\n    };\n}\n\nexport function getFilteredContextIds(contextId: string|null, data: Data) {\n    const contexts = getNestedContexts(data);\n\n    if (contextId) {\n        const contextIds = [contextId];\n        const queue = [contextId];\n\n        while (queue.length) {\n            const next = queue.pop();\n\n            if (!next) {\n                break;\n            }\n\n            for(const nested of contexts.nestedContexts[next] || []) {\n                contextIds.push(nested.id);\n                queue.push(nested.id);\n            }\n        }\n\n        return contextIds;\n    } else {\n        return data.contexts.map(c => c.id);\n    }\n};","import { Entity } from \"./db\";\n\nexport enum ContextState {\n    Active = 'Active',\n    Inactive = 'Inactive',\n}\n\nexport interface Context extends Entity {\n    type: 'context';\n    title: string;\n    contextId: string|null;\n    state: ContextState;\n}","import * as React from \"react\";\n\nexport const useQueryState = (initialValue: string|null, queryParam: string): [string|null, (value: string|null) => void] => {\n    const [rawValue, setRawValue] = React.useState(() => {\n        const urlParams = new URLSearchParams(window.location.search);\n        return urlParams.get(queryParam) || initialValue;\n    });\n\n    const setValue = (value: string|null) => {\n        const urlParams = new URLSearchParams(window.location.search);\n        setRawValue(value);\n        if (!value || value === initialValue) {\n            urlParams.delete(queryParam);\n        } else {\n            urlParams.set(queryParam, value);\n        }\n\n        const queryString = urlParams.toString();\n\n        if (queryString.length) {\n            window.history.replaceState(null, '', `?${queryString}`);\n        } else {\n            window.history.replaceState(null, '', window.location.pathname);\n        }\n\n        window.dispatchEvent(new (window as any).CustomEvent('popstate'));\n    };\n\n    return [rawValue, setValue];\n};\n\nexport const useQueryStateT = <T extends {}>(initialValue: T, queryParam: string, convertTo: (value: string|null) => T, convertFrom: (value: T) => string|null): [T, (value: T) => void] => {\n    const [rawValue, setRawValue] = React.useState<T>(() => {\n        const urlParams = new URLSearchParams(window.location.search);\n        return convertTo(urlParams.get(queryParam)) || initialValue;\n    });\n\n    const setValue = (value: T) => {\n        const urlParams = new URLSearchParams(window.location.search);\n        setRawValue(value);\n        if (!value || value === initialValue) {\n            urlParams.delete(queryParam);\n        } else {\n            const strValue = convertFrom(value);\n            if (strValue) {\n                urlParams.set(queryParam, strValue);\n            } else {\n                urlParams.delete(queryParam);\n            }\n        }\n\n        const queryString = urlParams.toString();\n\n        if (queryString.length) {\n            window.history.replaceState(null, '', `?${queryString}`);\n        } else {\n            window.history.replaceState(null, '', window.location.pathname);\n        }\n\n        window.dispatchEvent(new (window as any).CustomEvent('popstate'));\n    };\n\n    return [rawValue, setValue];\n};\n\nexport const useQueryStateBoolean = (initialValue: boolean, queryParam: string) => {\n    return useQueryStateT<boolean>(initialValue, queryParam, x => x === 'true', x => x === initialValue ? null : x.toString());\n};","import * as React from 'react';\nimport { isMobile } from './Layout';\nimport * as styles from '../layout/styles';\nimport { cx } from 'emotion';\n\nexport const SettingsCompactor : React.FC<{className?: string, alwaysVisible?: () => JSX.Element, mobileOnly?: () => JSX.Element, wideStyle?:React.CSSProperties}> = props => {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const alwaysVisible = props.alwaysVisible ? props.alwaysVisible() : null;\n\n    if(!isMobile()) {\n        return (\n            <div style={{display: 'flex', alignItems: 'center', ...props.wideStyle}} className={styles.horizontalSpace('.3rem')}>\n                {alwaysVisible}\n                {props.children}\n            </div>\n        );\n    }\n\n    const mobileOnly = props.mobileOnly ? props.mobileOnly() : null;\n\n    if(!expanded) {\n        return (\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\n                {alwaysVisible}\n                {mobileOnly}\n                <div className=\"button\" onClick={() => setExpanded(true)}>S</div>\n            </div>\n        );\n    }\n\n    return (\n        <div style={{display: 'flex', flexDirection: 'column'}} className={styles.verticalSpace('.3rem')}>\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\n                {alwaysVisible}\n                <div className=\"button\" onClick={() => setExpanded(false)}>S</div>\n            </div>\n            <div className={cx(styles.verticalSpace('.3rem'), props.className)}>\n                {props.children}\n            </div>\n        </div>\n    );\n};","import * as React from 'react';\nimport { useData } from '../model';\n\nexport const ContextTag: React.FC<{contextId: string|null}> = (props) => {\n    const {data} = useData();\n\n    if (!props.contextId) {\n        return null;\n    }\n\n    const context = data.contexts.find(p => p.id === props.contextId);\n\n    if (!context) {\n        return null;\n    }\n\n    return <div className=\"tag is-context\">{context.title}</div>;\n}","import * as React from 'react';\nimport { useData } from '../model';\nimport { ContextState, Context } from '../db/context';\nimport * as styles from '../layout/styles';\nimport * as ContextActions from '../lib/contextActions';\nimport { cx } from 'emotion';\nimport { getVariable } from '../layout/theme';\n\nexport const ContextBar: React.FC<{contextId: string|null, onChange: (contextId: string|null) => void, showTaskCount?: boolean}> = (props) => {\n    const {data} = useData();\n\n    const nestedContexts = ContextActions.getNestedContexts(data);\n\n    const renderListContext = (context: Context, contexts: ContextActions.NestedContexts, depth = 0) => {\n        if (context.state && context.state === ContextState.Inactive) {\n            return <React.Fragment key={context.id}></React.Fragment>;\n        }\n\n        return (\n            <React.Fragment key={context.id}>\n                <div onClick={() => props.onChange(context.id)} style={{paddingLeft: 10 + depth * 10, background: props.contextId === context.id ? getVariable('--active-context-background') : undefined}} className={cx('item', styles.hoverGlow, styles.cursorPointer)}>\n                    {context.title} {props.showTaskCount && <span style={{color: '#999'}}>{contexts.taskCounts[context.id]}</span>}\n                </div>\n                {contexts.nestedContexts[context.id] && contexts.nestedContexts[context.id].map(c => (\n                    renderListContext(c, contexts, depth + 1)\n                ))}\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <div style={{borderRight: '1px solid #666', width: 200}}>\n            <div className=\"list\">\n                <div className={cx('item', styles.hoverGlow, styles.cursorPointer)} style={{paddingLeft: 10, background: props.contextId === null ? getVariable('--active-context-background') : undefined}} onClick={() => props.onChange(null)}>All</div>\n                {nestedContexts.topContexts.map(i => renderListContext(i, nestedContexts))}\n            </div>\n        </div>\n    )\n}","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as styles from '../layout/styles';\nimport { useData } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport * as ContextActions from '../lib/contextActions';\nimport { isMobile } from '../components/Layout';\nimport { Task } from '../db/task';\nimport { ProjectState, Project } from '../db/project';\nimport { db } from '../db/db';\nimport moment from 'moment';\nimport { useQueryState } from '../lib/UseQueryState';\nimport { SettingsCompactor } from '../components/SettingsCompactor';\nimport { ContextTag } from '../components/ContextTag';\nimport { ContextBar } from '../components/ContextBar';\nimport { cx } from 'emotion';\nimport _ from 'lodash';\nimport { getVariable } from '../layout/theme';\n\ninterface Perspective {\n    id: string;\n    title: string;\n    groupedProject: boolean;\n    groupedContext: boolean;\n}\n\nlet perspectives: Perspective[] = [\n    { id: '1', title: 'All', groupedProject: false, groupedContext: false },\n    { id: '2', title: 'Grouped', groupedProject: false, groupedContext: true },\n    { id: '3', title: 'Grouped Project', groupedProject: true, groupedContext: false }\n]\n\nlet defaultPerspective = perspectives[1];\n\ninterface TaskFilters {\n    showCompleted: boolean;\n    showContextBar: boolean;\n    includeNested: boolean;\n    showDeferred: boolean;\n    showIncubated: boolean;\n}\n\nexport const TaskPage: React.FC<{}> = (props) => {\n    const {data} = useData();\n    const [text, setText] = React.useState('');\n    const [options, setOptions] = React.useState<TaskFilters>({\n        showCompleted: false,\n        showDeferred: false,\n        showIncubated: false,\n        showContextBar: isMobile() ? false : true,\n        includeNested: true,\n    });\n\n    const [contextId, setContextId] = useQueryState(null, 'context');\n    const [projectId, setProjectId] = useQueryState(null, 'project');\n    const [perspectiveId, setPerspectiveId] = useQueryState('2', 'perspective');\n\n    const onKeyPress = async (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter') {\n            await db.tasks.create({\n                title: text,\n                contextId: contextId,\n                projectId: projectId,\n                content: null,\n                state: 'active',\n                stateChangedAt: new Date().toISOString(),\n                noteId: null,\n            });\n\n            setText('');\n        }\n    }\n\n    const onCompleteChange = async (task: Task, e: React.ChangeEvent<HTMLInputElement>) => {\n        task.state = task.state === 'completed' ? 'active' : 'completed';\n        task.stateChangedAt = new Date().toISOString();\n        await db.tasks.save(task);\n    }\n\n    const renderProject = (task: Task) => {\n        const project = data.projects.find(p => p.id === task.projectId);\n\n        if (project) {\n            return <div className=\"tag is-info\">{project.title}</div>;\n        }\n\n        return null;\n    };\n\n    const renderDeferred = (task: Task) => {\n        if (task.deferredUntil && new Date(task.deferredUntil) > new Date()) {\n            return <div className=\"tag is-primary\" title={`${moment(task.deferredUntil).format('YYYY-MM-DD')}`}>deferred {moment(task.deferredUntil).fromNow(true)}</div>;\n        }\n        return null;\n    };\n\n    const renderNote = (task: Task) => {\n        if (task.noteId) {\n            return <div className=\"tag is-primary\" >N</div>;\n        }\n        return null;\n    };\n\n    const renderTitle = (title: string) => {\n        const pattern = /(https?:\\/\\/[^\\s]+)/;\n        return title.split(pattern).map((c, i) => {\n            if (c.match(pattern)) {\n                let title = c.replace(/https?:\\/\\//, '');\n                title = title.replace(/\\/.*/, '/...');\n                return <a key={i} href={c} onClick={e => { e.stopPropagation(); }} target=\"_blank\"  rel=\"noopener noreferrer\" className=\"button is-small is-link\" style={{display: 'inline-block', marginLeft: '5px', marginRight: '5px'}}>{title}</a>;\n            }\n\n            return <span key={i}>{c}</span>;\n        });\n    };\n\n    const filterTasks = (complete: boolean, contexts: ContextActions.NestedContexts) => {\n        let tasks = data.tasks;\n\n        if (complete) {\n            tasks = tasks.filter(t => t.state === 'completed')\n        } else {\n            tasks = tasks.filter(t => t.state !== 'completed')\n        }\n\n        if (projectId) {\n            tasks = tasks.filter(t => t.projectId === projectId);\n        }\n\n        if (!options.showDeferred) {\n            tasks = tasks.filter(t => t.deferredUntil == null || new Date(t.deferredUntil) < new Date());\n        }\n\n        if (!options.showIncubated) {\n            tasks = tasks.filter(t => t.state !== 'incubated');\n\n            const incubatedProjectIds = data.projects.filter(p => p.state === ProjectState.Incubated).map(p => p.id);\n            tasks = tasks.filter(t => !t.projectId || incubatedProjectIds.indexOf(t.projectId) === -1);\n        }\n\n        if (contextId) {\n            const contextIds = ContextActions.getFilteredContextIds(contextId, data);\n            tasks = tasks.filter(t => t.contextId && contextIds.indexOf(t.contextId) !== -1);\n        }\n\n        return tasks.sort((a, b) =>  b.createdAt! < a.createdAt! ?  -1 : b.createdAt! > a.createdAt! ? 1 : 0);\n    }\n\n    const renderTask = (task: Task, skipProjectContext = false) => {\n        let source: string|null = null;\n        if (window.location.search.length) {\n            const urlParams = new URLSearchParams(window.location.search);\n            source = `?source=${encodeURIComponent(`${window.location.pathname}?${urlParams.toString()}`)}`\n        }\n\n        return (\n            <NavLink key={task.id} to={`/tasks/${task.id}${source ? source : ''}`} className={cx('item', 'task', styles.hoverGlow)}>\n                <div className=\"task-checkbox\">\n                    <input type=\"checkbox\" style={{display: 'block', padding: 10}} checked={task.state === 'completed'} onClick={e => e.preventDefault()} onChange={e => onCompleteChange(task, e)}/>\n                </div>\n                <div className=\"task-title\" style={{color: task.state === 'incubated' ? '#999' : undefined}}>\n                    {task.state === 'completed' ? <span style={{textDecoration: 'line-through'}}>{renderTitle(task.title)}</span> : renderTitle(task.title)}\n                    {task.state === 'incubated' ? <span> [Incubated]</span> : null}\n                </div>\n                <div className=\"task-details\">\n                    <div className=\"tags\">\n                        {renderNote(task)}\n                        {renderDeferred(task)}\n                        {!skipProjectContext && <ContextTag contextId={task.contextId} /> }\n                        {!skipProjectContext && renderProject(task)}\n                    </div>\n                </div>\n            </NavLink>\n        );\n    };\n\n    const perspective = perspectives.find(x => x.id === perspectiveId) || defaultPerspective;\n    const nestedContexts = ContextActions.getNestedContexts(data);\n\n    let taskBlock: JSX.Element[] = [];\n\n    if (perspective.groupedContext) {\n        const filteredContextIds: (string|null)[] = ContextActions.getFilteredContextIds(contextId, data);\n\n        if (!contextId) {\n            filteredContextIds.push(null);\n        }\n\n        for (const contextId of filteredContextIds) {\n            const context = data.contexts.find(p => p.id === contextId);\n\n            let tasks = filterTasks(false, nestedContexts);\n\n            if (contextId) {\n                if (!context) {\n                    continue;\n                }\n\n                tasks = tasks.filter(t => t.contextId === contextId);\n\n                if (!tasks.length) {\n                    continue;\n                }\n\n                taskBlock.push(\n                    <div key={contextId} style={{display: 'flex', justifyContent: 'space-between', padding: '.6rem', background: getVariable('--task-context-background'), cursor: 'pointer'}} onClick={() => setContextId(context.id)}>\n                        {context.title}\n                        <NavLink className=\"button small\" to={`/contexts/${context.id}`}>Edit</NavLink>\n                    </div>\n                )\n            } else {\n                tasks = tasks.filter(t => t.contextId === contextId);\n\n                if (!tasks.length) {\n                    continue;\n                }\n\n                taskBlock.push(<div key={'no-context'} style={{padding: '.6rem', background: getVariable('--task-context-background')}}>No Context</div>)\n            }\n\n            let stateOrder = [ProjectState.Active, ProjectState.Incubated, ProjectState.Completed, ProjectState.Dropped];\n    \n            const emptyActiveProjects: Project[] = [];\n    \n            let filteredProjects = data.projects;\n    \n            if (projectId !== null) {\n                filteredProjects = filteredProjects.filter(p => p.id === projectId);\n            }\n    \n            filteredProjects.sort((a, b) => stateOrder.indexOf(a.state) - stateOrder.indexOf(b.state)).forEach(p => {\n                let projectTasks = tasks.filter(t => t.projectId === p.id);\n    \n                if (!projectTasks.length) {\n                    if (p.state === ProjectState.Active) {\n                        if (contextId) {\n                            if (p.contextId && filteredContextIds.indexOf(p.contextId) !== -1) {\n                                emptyActiveProjects.push(p);\n                            }\n                        } else {\n                            emptyActiveProjects.push(p);\n                        }\n                    }\n                    return;\n                }\n    \n                taskBlock.push(\n                    <React.Fragment key={`p-${p.id}`}>\n                        <div className=\"header link\" onClick={() => { setProjectId(p.id); setContextId(p.contextId); }} style={{background: getVariable('--task-project-background')}}>\n                            {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''}\n                            <div style={{display: 'flex'}}>\n                                <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\n                            </div>\n                        </div>\n                        {projectTasks.map(t => renderTask(t, true))}\n                    </React.Fragment>\n                );\n            });\n    \n            const noProjectTasks = tasks.filter(t => t.projectId === null);\n    \n            if (noProjectTasks.length) {\n                taskBlock.push(\n                    <React.Fragment key={`no-p-${contextId}`}>\n                        <div className=\"header\" style={{background: getVariable('--task-project-background')}}>No Project</div>\n                        {noProjectTasks.map(t => renderTask(t, true))}\n                    </React.Fragment>\n                );\n            }\n    \n            for(const p of emptyActiveProjects) {\n                if (p.contextId !== contextId) {\n                    continue;\n                }\n\n                taskBlock.push(\n                    <div key={p.id} className=\"header link\" style={{background: getVariable('--task-project-background')}} onClick={() => { setProjectId(p.id); setContextId(p.contextId); }}>\n                        {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''} [Empty]\n                        <div style={{display: 'flex'}}>\n                            <div className=\"tags\">\n                                <ContextTag contextId={p.contextId} />\n                            </div>\n                            <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\n                        </div>\n                    </div>\n                );\n            }\n        }\n\n        if (options.showCompleted) {\n            taskBlock.push(\n                <React.Fragment key=\"completed\">\n                    <div className=\"header\">Completed</div>\n                    {_.orderBy(filterTasks(true, nestedContexts), x => x.stateChangedAt, 'desc').map(t => renderTask(t))}\n                </React.Fragment>\n            );\n        }\n\n    } else if (perspective.groupedProject) {\n        let tasks = filterTasks(false, nestedContexts);\n\n        let stateOrder = [ProjectState.Active, ProjectState.Incubated, ProjectState.Completed, ProjectState.Dropped];\n\n        const emptyActiveProjects: Project[] = [];\n\n        let filteredProjects = data.projects;\n\n        if (projectId !== null) {\n            filteredProjects = filteredProjects.filter(p => p.id === projectId);\n        }\n\n        const filteredContextIds = ContextActions.getFilteredContextIds(contextId, data);\n\n        filteredProjects.sort((a, b) => stateOrder.indexOf(a.state) - stateOrder.indexOf(b.state)).forEach(p => {\n            let projectTasks = tasks.filter(t => t.projectId === p.id);\n\n            if (!projectTasks.length) {\n                if (p.state === ProjectState.Active) {\n                    if (contextId) {\n                        if (p.contextId && filteredContextIds.indexOf(p.contextId) !== -1) {\n                            emptyActiveProjects.push(p);\n                        }\n                    } else {\n                        emptyActiveProjects.push(p);\n                    }\n                }\n                return;\n            }\n\n            taskBlock.push(\n                <React.Fragment key={`p-${p.id}`}>\n                    <div className=\"header link\" onClick={() => { setProjectId(p.id); setContextId(p.contextId); }}>\n                        {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''}\n                        <div style={{display: 'flex'}}>\n                            <div className=\"tags\">\n                                <ContextTag contextId={p.contextId} />\n                            </div>\n                            <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\n                        </div>\n                    </div>\n                    {projectTasks.map(t => renderTask(t))}\n                </React.Fragment>\n            );\n        });\n\n        const noProjectTasks = tasks.filter(t => t.projectId === null);\n\n        if (noProjectTasks.length) {\n            taskBlock.push(\n                <React.Fragment key=\"no-p\">\n                    <div className=\"header\">No Project</div>\n                    {noProjectTasks.map(t => renderTask(t))}\n                </React.Fragment>\n            );\n        }\n\n        for(const p of emptyActiveProjects) {\n            taskBlock.push(\n                <React.Fragment key={`p-${p.id}`}>\n                    <div className=\"header link\" onClick={() => { setProjectId(p.id); setContextId(p.contextId); }}>\n                        {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''} [Empty]\n                        <div style={{display: 'flex'}}>\n                            <div className=\"tags\">\n                                <ContextTag contextId={p.contextId} />\n                            </div>\n                            <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\n                        </div>\n                    </div>\n                </React.Fragment>\n            );\n        }\n\n        if (options.showCompleted) {\n            taskBlock.push(\n                <React.Fragment key=\"completed\">\n                    <div className=\"header\">Completed</div>\n                    {filterTasks(true, nestedContexts).map(t => renderTask(t))}\n                </React.Fragment>\n            );\n        }\n    } else {\n        taskBlock.push(\n            <React.Fragment key=\"tasks\">\n                {filterTasks(false, nestedContexts).map(t => renderTask(t))}\n                {options.showCompleted && <>\n                    <div className=\"header\">Completed</div>\n                    {filterTasks(true, nestedContexts).map(t => renderTask(t))}\n                </>}\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <div style={{display: 'flex', height: '100%'}}>\n            {options.showContextBar && <ContextBar contextId={contextId} onChange={setContextId} showTaskCount={true} />}\n            <div style={{width: '100%'}}>\n                <ToolSection>\n                    <SettingsCompactor alwaysVisible={() => (\n                        <div className=\"button\" onClick={() => { setContextId(null); setProjectId(null); }}>R</div>\n                    )} mobileOnly={() => (\n                        <div className=\"button\" style={{marginLeft: 'auto', marginRight: 8}} onClick={() => setOptions({ ...options, showContextBar: !options.showContextBar })}>C</div>\n                    )}>\n                        <select style={{padding: '0.3rem', display: 'block'}} value={contextId || ''} onChange={e => setContextId(e.target.value === '' ? null : e.target.value) }>\n                            <option value=\"\">All contexts</option>\n                            {data.contexts.map(c => (\n                                <option key={c.id} value={c.id}>{c.title}</option>\n                            ))}\n                        </select>\n                        <select style={{padding: '0.3rem', display: 'block'}} value={projectId || ''} onChange={e => setProjectId(e.target.value === '' ? null : e.target.value)}>\n                            <option value=\"\">All projects</option>\n                            {data.projects.filter(c => c.state === ProjectState.Active).map(c => (\n                                <option key={c.id} value={c.id}>{c.title}</option>\n                            ))}\n                        </select>\n                        <select style={{padding: '0.3rem', display: 'block'}} value={perspectiveId || ''} onChange={e => setPerspectiveId(e.target.value === '' ? null : e.target.value)}>\n                            <option value=\"\">Select Perspective</option>\n                            {perspectives.map(c => (\n                                <option key={c.id} value={c.id}>{c.title}</option>\n                            ))}\n                        </select>\n                        <div>\n                            <input id=\"completed-box\" type=\"checkbox\" checked={options.showCompleted} onChange={() => setOptions({ ...options, showCompleted: !options.showCompleted })} />\n                            <label htmlFor=\"completed-box\">Show completed</label>\n                        </div>\n                        <div>\n                            <input id=\"deferred-box\" type=\"checkbox\" checked={options.showDeferred} onChange={() => setOptions({ ...options, showDeferred: !options.showDeferred })} />\n                            <label htmlFor=\"deferred-box\">Show deferred</label>\n                        </div>\n                        <div>\n                            <input id=\"incubated-box\" type=\"checkbox\" checked={options.showIncubated} onChange={() => setOptions({ ...options, showIncubated: !options.showIncubated })} />\n                            <label htmlFor=\"incubated-box\">Show incubated</label>\n                        </div>\n                        <div>\n                            <input id=\"context-box\" type=\"checkbox\" checked={options.showContextBar} onChange={() => setOptions({ ...options, showContextBar: !options.showContextBar })} />\n                            <label htmlFor=\"context-box\">Show context bar</label>\n                        </div>\n                        <div>\n                            <input id=\"include-nested-box\" type=\"checkbox\" checked={options.includeNested} onChange={() => setOptions({ ...options, includeNested: !options.includeNested })} />\n                            <label htmlFor=\"include-nested-box\">Include nested contexts</label>\n                        </div>\n                    </SettingsCompactor>\n                    <input type=\"text\" className=\"input is-large is-wide\" placeholder=\"Add task...\" value={text} onChange={e => setText(e.target.value)} onKeyPress={onKeyPress} />\n                </ToolSection>\n                <div className=\"list\">\n                    {taskBlock}\n                </div>\n            </div>\n        </div>\n    );\n};\n","import { Entity } from \"./db\";\nimport moment from \"moment\";\n\nexport type NoteMode = 'markdown'|'tree';\n\nexport interface Note extends Entity {\n    type: 'note',\n    mode: NoteMode|null;\n    title: string;\n    tags: string;\n    content: string;\n    contextId: string|null;\n    noteFor: Reference|null;\n    dailyDate: string|null;\n};\n\nexport interface Reference {\n    type: string;\n    id: string;\n};\n\nexport interface HasNote extends Entity {\n    noteId: string|null;\n}\n\nexport function getNoteTitle(note: Pick<Note, 'dailyDate'|'title'|'content'>) {\n    if (note.dailyDate) {\n        return `Daily - ${moment(note.dailyDate).format('MMMM Do, YYYY')}`;\n    }\n\n    if (note.title && note.title.length) {\n        return note.title;\n    }\n\n    const parsedTitle = /# (.+)/.exec(note.content);\n\n    if (parsedTitle && parsedTitle.length > 1) {\n        return parsedTitle[1];\n    }\n\n    return '';\n}\n\nexport function getNoteTitleType(note: Note): 'daily'|'title'|'parsed'|'none' {\n    if (note.dailyDate) {\n        return 'daily';\n    }\n\n    if (note.title && note.title.length) {\n        return 'title';\n    }\n\n    const parsedTitle = /# (.+)/.exec(note.content);\n\n    if (parsedTitle && parsedTitle.length > 1) {\n        return 'parsed';\n    }\n\n    return 'none';\n}\n\nexport const noteReferenceRegex = /\\[\\[([^\\]]+)\\]\\]/ig;\n\nfunction escapeRegExp(str: string) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nexport function getNoteContextTitlePrefixRegExp(contextTitle: string) {\n    return new RegExp(`^${escapeRegExp(contextTitle)}/`, 'i')\n}\n\nexport function getNoteTitleMatchRegExp(reference: string) {\n    return new RegExp(`^${escapeRegExp(reference)}$`, 'i')\n}\n\nexport function getNoteReferenceMatchRegExp(reference: string) {\n    return new RegExp(`\\\\[\\\\[${escapeRegExp(reference)}\\\\]\\\\]`, 'i')\n}\n\nexport function getNoteAliasReferenceMatchRegExp(alias: string) {\n    return new RegExp(`\\\\B@${escapeRegExp(alias)}`, 'i')\n}\n\nexport function extractReferences(text: string) {\n    if(!text) {\n        return [];\n    }\n\n    const regex = /\\[\\[([^\\]]+)\\]\\]/ig;\n    const results = [];\n    for(const match of text.matchAll(regex)) {\n        results.push(match[1])\n    }\n\n    return results;\n}\n\nexport function extractAllReferences(notes: Note[]) {\n    const results: { [reference: string]: { title: string, contextId: string|null, updatedAt: Date } } = {};\n\n    function getKey(title: string, contextId: string|null) {\n        return `${contextId}-${title.toLowerCase()}`\n    }\n\n    const existing = new Set<string>(notes.filter(n => n.title).map(n => getKey(n.title, n.contextId)));\n\n    for(const note of notes) {\n        const references = extractReferences(note.content);\n\n        for(const reference of references) {\n            const key = getKey(reference, note.contextId);\n            \n            if (existing.has(key)) {\n                continue;\n            }\n            \n            const existingResult = results[key];\n\n            if (existingResult && existingResult.updatedAt > new Date(note.updatedAt)) {\n                continue;\n            }\n\n            results[key] = {\n                title: reference,\n                contextId: note.contextId,\n                updatedAt: new Date(note.updatedAt)\n            };\n        }\n    }\n\n    return Object.values(results);\n}","import { Entity } from \"./db\";\nimport { HasNote } from \"./note\";\n\nexport interface Person extends Entity, HasNote {\n    type: 'person';\n    name: string;\n    alias: string|null;\n    birthday: string|null;\n}\n\nexport const mentionRegex = /\\B(@[^\\s()[\\].,!:]+)/g;\n\nexport function convertNameToAlias(name: string) {\n    if(!name) {\n        return null;\n    }\n\n    return name.toLowerCase().replace(/ /g, '_');\n}\n\nexport function getAlias(person: Person) {\n    return `${person.alias || convertNameToAlias(person.name)}`;\n}","import * as React from 'react';\nimport marked from 'marked';\nimport '../github-markdown.css';\nimport { useData } from '../model';\nimport { getNoteTitleMatchRegExp, getNoteContextTitlePrefixRegExp, noteReferenceRegex } from '../db/note';\nimport {useHistory} from 'react-router-dom';\nimport { mentionRegex, getAlias } from '../db/person';\n\n\nexport const MarkedViewer: React.FC<{ markdown: string; contextId: string|null }> = props => {\n    const history = useHistory();\n    const {data} = useData();\n\n    (window as any).lifeNavigate = function(url: string) {\n        history.push(url);\n        return false;\n    };\n\n    let markdown = props.markdown.replace(noteReferenceRegex, (_, group1) => {\n        let matchContextId = props.contextId;\n        let matchTitle = group1;\n\n        const prefixContext = data.contexts.find(x => getNoteContextTitlePrefixRegExp(x.title).test(group1));\n        if (prefixContext) {\n            matchTitle = matchTitle.substring(prefixContext.title.length + 1);\n            matchContextId = prefixContext.id;\n        }\n\n        const referenceRegExp = getNoteTitleMatchRegExp(matchTitle);\n        const note = data.notes.find(x => x.contextId === matchContextId && referenceRegExp.test(x.title));\n\n        if (note) {\n            const url = `/notes/${note.id}`;\n            return `<span style=\"color: #444\">[[ </span><a onclick=\"return lifeNavigate('${url}')\" href=\"${url}\">${group1}</a><span style=\"color: #444\"> ]]</span>`;\n        }\n\n        const url = `/notes/virtual?title=${encodeURIComponent(group1)}${props.contextId ? `&context=${props.contextId}` : ''}&source=${encodeURIComponent(`${window.location.pathname}`)}`;\n        return `<span style=\"color: #444\">[[ </span><a onclick=\"return lifeNavigate('${url}')\" href=\"${url}\">${group1}</a><span style=\"color: #444\"> ? ]]</span>`;\n    });\n\n    markdown = markdown.replace(mentionRegex, (_, group1) => {\n        const person = data.people.find(x => `@${getAlias(x)}` === group1);\n\n        if (person) {\n            const url = `/people/${person.id}?source=${encodeURIComponent(`${window.location.pathname}`)}`;\n            return `<a onclick=\"return lifeNavigate('${url}')\" href=\"${url}\" style=\"background: #333; padding: 0px 4px; border-radius: 4px\">${person.name}</a>`;\n        }\n\n        const url = `/people/virtual?alias=${encodeURIComponent(group1)}&source=${encodeURIComponent(`${window.location.pathname}`)}`;\n        return `<a onclick=\"return lifeNavigate('${url}')\" href=\"${url}\" style=\"background: #333; padding: 0px 4px; border-radius: 4px\">${group1}</a><span style=\"color: #444\"> ?</span>`;\n    });\n\n    const html = marked(markdown);\n    return (\n        <div className=\"marked-viewer note markdown-body\" dangerouslySetInnerHTML={{ __html: html }}></div>\n    );\n};","import * as React from 'react';\nimport { MarkedViewer } from './MarkedViewer';\nimport * as styles from '../layout/styles';\nimport { NoteMode } from '../db/note';\n\nimport AceEditor from \"react-ace\";\nimport {textCompleter, snippetCompleter, keyWordCompleter} from \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/mode-markdown\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/theme-textmate\";\nimport { Data } from '../model';\nimport { cx } from 'emotion';\nimport { isDark } from '../layout/theme';\n\nexport enum SplitMode {\n    Split,\n    Editor,\n    Preview\n}\n\nexport const NoteModeSelector: React.SFC<{mode: NoteMode, onModeChange: (mode: NoteMode) => void}> = props => (\n    <div className={cx(styles.horizontalSpace('.5rem'))}>\n        <button className=\"button\" style={{background: !props.mode || props.mode !== 'markdown' ? '#444' : undefined}} onClick={() => props.onModeChange('markdown')}>Markdown</button>\n        <button className=\"button\" style={{background: props.mode !== 'tree' ? '#444' : undefined}} onClick={() => props.onModeChange('tree')}>Tree</button>\n    </div>\n);\n\n\nexport const SplitModeSelector: React.SFC<{mode: SplitMode, onModeChange: (mode: SplitMode) => void}> = props => (\n    <div className={cx(styles.horizontalSpace('.5rem'))}>\n        <button className=\"button\" style={{background: props.mode !== SplitMode.Split ? '#444' : undefined}} onClick={() => props.onModeChange(SplitMode.Split)}>Split</button>\n        <button className=\"button\" style={{background: props.mode !== SplitMode.Editor ? '#444' : undefined}} onClick={() => props.onModeChange(SplitMode.Editor)}>Editor</button>\n        <button className=\"button\" style={{background: props.mode !== SplitMode.Preview ? '#444' : undefined}} onClick={() => props.onModeChange(SplitMode.Preview)}>Preview</button>\n    </div>\n);\n\nexport class SimpleSplitEditor extends React.Component<{ text: string, onTextChanged: (text: string) => void, expand?: boolean, mode: SplitMode, data: Data, contextId: string|null }, {}> {\n\n    render() {\n        const style: React.CSSProperties = {};\n\n        if(this.props.expand) {\n            style.width = '100%';\n            style.height = '100%';\n            style.zIndex = 100;\n            style.display = 'flex';\n            style.maxHeight = '100%';\n        }\n\n        const border = '1px solid #666';\n        const components = [];\n\n        let textAreaStyle: React.CSSProperties = {\n            flexGrow: 1, \n            minWidth: '50%', \n            borderTop: border, \n            height: '100%'\n        };\n\n        let markedStyle: React.CSSProperties = {\n            flexGrow: 1, \n            minWidth: '50%', \n            background: 'transparent', \n            padding: '1rem', \n            borderTop: border\n        };\n\n        if (this.props.mode === SplitMode.Split) {\n            textAreaStyle.borderRight = border;\n            markedStyle.overflowY = 'scroll';\n        }\n\n        if (this.props.mode === SplitMode.Editor || this.props.mode === SplitMode.Split) {\n            components.push(\n                    <AceEditor \n                        key=\"editor\"\n                        value={this.props.text} \n                        fontSize={18}\n                        style={textAreaStyle}\n                        onChange={e => this.props.onTextChanged(e)} \n                        mode=\"markdown\"\n                        theme={isDark() ? \"monokai\" : 'textmate'}\n                        showGutter={false} \n                        showPrintMargin={false}\n                        wrapEnabled={true}\n                        enableBasicAutocompletion={[snippetCompleter, textCompleter, keyWordCompleter] as any}\n                        enableLiveAutocompletion={true}\n                        enableSnippets={true}\n                    />\n            );\n        }\n\n        if (this.props.mode === SplitMode.Preview || this.props.mode === SplitMode.Split) {\n            components.push(\n                <div key=\"2\" style={markedStyle}>\n                    <MarkedViewer markdown={this.props.text} contextId={this.props.contextId} />\n                </div>\n            );\n        }\n\n        return (\n            <div style={style}>\n                {components}\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { useState, useRef } from 'react';\nimport { horizontalSpace, hoverGlow } from '../layout/styles';\nimport { MarkedViewer } from './MarkedViewer';\nimport AceEditor, { ICommand } from \"react-ace\";\nimport copy from 'copy-to-clipboard';\nimport {textCompleter, snippetCompleter, keyWordCompleter} from \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/mode-markdown\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/theme-textmate\";\nimport ReactAce from 'react-ace/lib/ace';\nimport { Loader } from './Loader';\nimport { extractReferences } from '../db/note';\nimport { useData } from '../model';\nimport { cx } from 'emotion';\nimport { getAlias } from '../db/person';\nimport { isDark, getVariable } from '../layout/theme';\n\nexport interface Node {\n    text: string;\n    nodes: Node[];\n}\n\nexport const TreeEditor: React.FC<{text: string, onTextChanged: (text: string) => void, contextId: string|null}> = (props) => {\n    const {data} = useData();\n    const [invalid] = useState(() => {\n        if (!props.text || props.text === '') {\n            return false;\n        }\n        try {\n            JSON.parse(props.text);\n            return false;\n        } catch {\n            return true;\n        }\n    })\n\n    // const [mouseDown, setMouseDown] = useState<Node|null>();\n    // const [mouseOver, setMouseOver] = useState<Node|null>();\n    const [selectMode, setSelectMode] = useState(false);\n    const [selectedNodes, setSelectedNodes] = useState<Node[]>([]);\n\n    const [nodes, setNodes] = useState<Node[]>(() => {\n        if (invalid) {\n            return [];\n        }\n\n        if (!props.text || props.text === '') {\n            return [\n                { text: '', nodes: [] }\n            ];\n        }\n\n        return JSON.parse(props.text);\n    });\n\n    const inputRef = useRef<ReactAce>(null);\n    const [active, setActive] = useState(nodes[0]);\n\n    const [noteTitles, setNoteTitles] = React.useState<{ title: string; context: string|null }[]>();\n\n    React.useEffect(() => {\n        const noteCompletions  = data.notes.map(n => {\n            let titles = extractReferences(n.content);\n\n            if (n.title && n.title.length) {\n                titles.push(n.title);\n            }\n\n            const context = data.contexts.find(c => c.id === n.contextId)?.title || null;\n\n            return titles.map(t => ({ title: t, context }));\n        }).flat().filter(t => t.title !== null);\n\n        setNoteTitles(noteCompletions);\n    }, [props.contextId, data.contexts, data.notes]);\n\n    const [peopleAliases, setPeopleAliases] = React.useState<string[]>();\n\n    React.useEffect(() => {\n        const aliases  = data.people.map(n => getAlias(n)).filter(t => t !== null);\n        setPeopleAliases(aliases);\n    }, [data.people]);\n\n    if (invalid) {\n        return (\n            <div>Invalid tree content (not valid JSON).</div>\n        )\n    }\n\n    if (!noteTitles || !peopleAliases) {\n        return <Loader />;\n    }\n\n    const updateText = () => {\n        props.onTextChanged(JSON.stringify(nodes));\n    }\n\n    const onInputChanged = (node: Node, value: string) => {\n        node.text = value;\n        setNodes([...nodes]);\n        updateText();\n    };\n\n    const getParentNode = (targetNode: Node, searchNodes: Node[] = nodes, parentNode: Node|null = null): Node|null => {\n      for(const node of searchNodes) {\n          if (node === targetNode) {\n              return parentNode;\n          }\n\n          const childResult = getParentNode(targetNode, node.nodes, node);\n          if (childResult) {\n              return childResult;\n          }\n      }\n\n      return null;\n    };\n\n    const preorderTraversal = () => {\n        const result: Node[] = [];\n        const stack = [...nodes].reverse();\n\n        while(stack.length) {\n            let node = stack.pop();\n\n            if (!node) {\n                return result;\n            }\n\n            result.push(node);\n\n            for(let childNode of [...node.nodes].reverse()) {\n                stack.push(childNode);\n            }\n\n        }\n\n        return result;\n    };\n\n    \n    function visitNodes(visit: (n: Node, depth: number, index: number) => void) {\n        const stack = nodes.map((node, index) => ({ node, depth: 0, index })).reverse();\n\n        while(stack.length) {\n            let next = stack.pop();\n\n            if (!next) {\n                return;\n            }\n\n            visit(next.node, next.depth, next.index)\n\n            const depth = next.depth;\n            for(const childNode of next.node.nodes.map((node, index) => ({ node, depth: depth + 1, index })).reverse()) {\n                stack.push(childNode);\n            }\n        }\n    }\n\n    const insertNode = (afterNode: Node, above = false) => {\n        const parentNode = getParentNode(afterNode);\n        const searchNodes = parentNode ? parentNode.nodes : nodes;\n        const nodeIndex = searchNodes.findIndex(x => x === afterNode);\n        const node: Node = { text: '', nodes: [] };\n        searchNodes.splice(nodeIndex + (above ? 0 : 1), 0, node);\n        setNodes([...nodes]);\n        return node;\n    };\n\n    const removeNode = (node: Node) => {\n        const parentNode = getParentNode(node);\n        const searchNodes = parentNode ? parentNode.nodes : nodes;\n        const nodeIndex = searchNodes.findIndex(x => x === node);\n        searchNodes.splice(nodeIndex, 1);\n        setNodes([...nodes]);\n        return node;\n    };\n\n    const removeNodeIfEmpty = (node: Node) => {\n        if (node.text.length || node.nodes.length) {\n            return;\n        }\n        removeNode(node);\n    };\n\n    const indentNode = (node: Node) => {\n        const parentNode = getParentNode(node);\n        const searchNodes = parentNode ? parentNode.nodes : nodes;\n        const nodeIndex = searchNodes.findIndex(x => x === node);\n\n        if (nodeIndex === 0) {\n            return;\n        } else {\n            searchNodes.splice(nodeIndex, 1);\n            searchNodes[nodeIndex - 1].nodes.push(node);\n            setNodes([...nodes]);\n        }\n    };\n\n    const unindentNode = (node: Node) => {\n        const parentNode = getParentNode(node);\n\n        if(parentNode === null) {\n            return;\n        }\n\n        const parentParentNode = getParentNode(parentNode);\n        const targetNodes = parentParentNode ? parentParentNode.nodes : nodes;\n        const parentNodeIndex = targetNodes.findIndex(x => x === parentNode);\n        targetNodes.splice(parentNodeIndex + 1, 0, node);\n        const nodeIndex = parentNode.nodes.findIndex(x => x === node);\n        parentNode.nodes.splice(nodeIndex, 1);\n\n        setNodes([...nodes]);\n    };\n\n    const commands: ICommand[] = [\n        { name: 'indent', bindKey: { win: 'tab', mac: 'tab' }, exec: () => {\n            setTimeout(() => {\n                indentNode(active);\n            }, 0);\n            return true;\n        }},\n        { name: 'unindent', bindKey: { win: 'shift+tab', mac: 'shift+tab' }, exec: () => {\n            setTimeout(() => {\n                unindentNode(active);\n            }, 0);\n            return true;\n        }},\n        { name: 'enter', bindKey: { win: 'enter', mac: 'enter' }, exec: () => {\n            if (active.text === '') {\n                return;\n            }\n            const above = inputRef.current && inputRef.current.editor.getCursorPosition().row === 0 && inputRef.current.editor.getCursorPosition().column === 0;\n            setTimeout(() => {\n                const newNode = insertNode(active, !!above);\n                setActive(newNode);\n            }, 0);\n            return true;\n        }},\n        { name: 'up', bindKey: { win: 'up', mac: 'up' }, exec: () => {\n            const onFirstRow = inputRef.current && inputRef.current.editor.getCursorPosition().row === 0;\n            if (!onFirstRow) {\n                return false;\n            }\n            const searchNodes = preorderTraversal();\n            let activeIndex = searchNodes.findIndex(x => x === active);\n            activeIndex = Math.max(0, activeIndex - 1);\n            setTimeout(() => {\n                setActive(searchNodes[activeIndex]);\n                removeNodeIfEmpty(active);\n            }, 0);\n            return true;\n        }},\n        { name: 'down', bindKey: { win: 'down', mac: 'down' }, exec: () => {\n            const onLastRow = inputRef.current && inputRef.current.editor.getCursorPosition().row + 1 === inputRef.current.editor.getSession().doc.getLength();\n            if(!onLastRow) {\n                return false;\n            }\n            const searchNodes = preorderTraversal();\n            let activeIndex = searchNodes.findIndex(x => x === active);\n            activeIndex = Math.min(searchNodes.length - 1, activeIndex + 1);\n            setTimeout(() => {\n                setActive(searchNodes[activeIndex]);\n                removeNodeIfEmpty(active);\n            }, 0);\n            return true;\n        }},\n        { name: 'space', bindKey: { win: 'space', mac: 'space' }, exec: () => {\n            const atStart = inputRef.current && inputRef.current.editor.getCursorPosition().row === 0 && inputRef.current.editor.getCursorPosition().column === 0;\n            if (atStart) {\n                setTimeout(() => {\n                    indentNode(active);\n                }, 0);\n                return true;\n            }\n            return false;\n        }},\n        { name: 'backspace', bindKey: { win: 'backspace', mac: 'backspace' }, exec: () => {\n            const atStart = inputRef.current && inputRef.current.editor.getCursorPosition().row === 0 && inputRef.current.editor.getCursorPosition().column === 0;\n            if (atStart) {\n                setTimeout(() => {\n                    unindentNode(active);\n                }, 0);\n                return true;\n            }\n            return false;\n        }}\n    ];\n\n    // Look at https://github.com/ajaxorg/ace/blob/41ac47ec9e26f65fe0ffedeedf14b525a22f5462/lib/ace/ext/language_tools.js#L42-L48\n    const completions = {\n        getCompletions: (editor: any, session: any, pos: any, prefix: any, callback: CompletionCallback) => {\n            // console.log('editor', editor, 'session', session, 'pos', pos, 'prefix', prefix, 'callback', callback);\n            const token = session.getTokenAt(pos.row, pos.column);\n\n            if (!token) {\n                return;\n            }\n            \n            function hasPrefix(requiredPrefix: string) {\n                const strWithPrefix = token.value.substring(pos.column - prefix.length - requiredPrefix.length);\n                return strWithPrefix.startsWith(requiredPrefix);\n            }\n\n            if (hasPrefix('[[')) {\n                const completions = noteTitles.map(n => ({\n                    caption: n.title,\n                    snippet: n.title,\n                    meta: n.context || 'note',\n                }))\n\n                callback(null, completions);\n            } else if (hasPrefix('@')) {\n                const completions = peopleAliases.map(n => ({\n                    caption: n,\n                    snippet: n,\n                    meta: 'person',\n                }))\n\n                callback(null, completions);\n            }\n        }\n    }\n\n    function toggleSelected(node: Node) {\n        if(selectedNodes.includes(node)) {\n            setSelectedNodes(selectedNodes.filter(n => n !== node));\n        } else {\n            setSelectedNodes(selectedNodes.concat(node))\n        }\n    }\n\n    function clickNode(node: Node) {\n        if (selectMode) {\n            toggleSelected(node);\n            return;\n        }\n        \n        if(node !== active) {\n            setActive(node);\n        }\n    }\n\n    const renderNode = (node: Node, index: number, level: number, selectedNodes: Node[]) => {\n        const isActive = node === active;\n        const isSelected = selectedNodes.includes(node);\n        return (\n            <React.Fragment key={`${level}-${index}`}>\n                <div style={{display: 'flex', background: isSelected ? '#003838' : !selectMode && isActive ? getVariable('--active-tree-editor-background') : undefined, padding: '.6rem .8rem'}} className={hoverGlow} onClick={() => clickNode(node)}>\n                    {selectMode && <div style={{lineHeight: 1.5, marginRight: 8}}><input type=\"checkbox\" checked={isSelected} onChange={() => toggleSelected(node)} /></div>}\n                    {!selectMode && <div style={{letterSpacing: '.5rem', color: isActive ? '#078263' : '#777', lineHeight: 1.5}}>•</div>}\n                    {!selectMode && isActive\n                        ? <AceEditor\n                            key=\"editor\"\n                            ref={inputRef}\n                            value={node.text}\n                            fontSize={16}\n                            style={{background: 'transparent', width: '100%', lineHeight: 1.5, marginLeft: -4}}\n                            onChange={e => onInputChanged(node, e)}\n                            mode=\"markdown\"\n                            theme={isDark() ? \"monokai\" : 'textmate'}\n                            focus\n                            highlightActiveLine={false}\n                            showGutter={false}\n                            showPrintMargin={false}\n                            wrapEnabled={true}\n                            maxLines={Infinity}\n                            commands={commands}\n                            enableBasicAutocompletion={[completions, snippetCompleter, textCompleter, keyWordCompleter] as any}\n                            enableLiveAutocompletion={true}\n                            enableSnippets={true}\n                            />\n                        : <MarkedViewer markdown={node.text} contextId={props.contextId} />}\n                </div>\n                <div style={{borderLeft: '1px solid #555', marginLeft: 16, paddingLeft: 16}}>\n                    {node.nodes.map((n, i) => renderNode(n, i, level + 1, selectedNodes))}\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    // function onMouseDown(node: Node) {\n    //     console.log('mouseDown', node);\n    //     setMouseDown(node);\n    // }\n\n    // function onMouseUp(node: Node) {\n    //     console.log('mouseUp', node);\n    //     setMouseDown(null);\n    //     setMouseOver(null);\n    // }\n\n    // function onMouseOver(node: Node) {\n    //     if(mouseDown) {\n    //         console.log('mouseOver', node);\n    //         setMouseOver(node);\n\n    //         const newSelection: Node[] = [];\n\n    //         if (mouseDown && mouseOver && mouseDown !== mouseOver) {\n    //             let count = 0;\n        \n    //             const stack: Node[] = [];\n        \n    //             for(let i=nodes.length-1;i>=0;i--) {\n    //                 stack.push(nodes[i]);\n    //             }\n        \n    //             while (stack.length) {\n    //                 const node = stack.pop();\n        \n    //                 if (!node) {\n    //                     continue;\n    //                 }\n        \n    //                 for(let i=node.nodes.length-1;i>=0;i--) {\n    //                     stack.push(node.nodes[i]);\n    //                 }\n        \n    //                 if (node === mouseDown || node === mouseOver) {\n    //                     count += 1;\n    //                     newSelection.push(node);\n    //                 } else if (count === 1) {\n    //                     newSelection.push(node);\n    //                 }\n    //             }\n\n    //             setSelectedNodes(newSelection);\n    //         }\n    //     }\n    // }\n\n    function toggleSelectMode() {\n        if(selectMode) {\n            setSelectMode(false);\n            setSelectedNodes([]);\n        } else {\n            setSelectMode(true);\n        }\n    }\n\n    function copySelected() {\n        let result = \"\";\n\n        visitNodes((node, depth, index) => {\n            if(!selectedNodes.includes(node)) {\n                return;\n            }\n\n            console.log(node, depth);\n\n            result += `${'  '.repeat(depth)}- ${node.text}\\n`;\n        });\n\n        copy(result);\n    }\n\n    return (\n        <>\n            <div style={{display: 'flex', background: '#444', position: 'fixed', height: 36, bottom: 0, left: 0, right: 0}} className={cx(horizontalSpace('.5rem'))}>\n                    <div className=\"button\" onClick={toggleSelectMode}>Select</div>\n                    {selectMode ? <>\n                        <div className=\"button\" onClick={() => setSelectedNodes(preorderTraversal())}>All</div>\n                        <div className=\"button\" onClick={copySelected}>Copy</div>\n                    </> : <>\n                        <div className=\"button\" onClick={e => { unindentNode(active); inputRef.current && inputRef.current.editor.focus(); }}>&larr;</div>\n                        <div className=\"button\" onClick={e => { indentNode(active); inputRef.current && inputRef.current.editor.focus(); }}>&rarr;</div>\n                        <div className=\"button\" onClick={e => {\n                            if (!inputRef.current) {\n                                return;\n                            }\n                            inputRef.current.editor.session.insert(inputRef.current.editor.getCursorPosition(), '[[');\n                            inputRef.current.editor.focus();\n                        }}>[[</div>\n                        <div className=\"button\" onClick={e => {\n                            if (!inputRef.current) {\n                                return;\n                            }\n                            inputRef.current.editor.session.insert(inputRef.current.editor.getCursorPosition(), ']]');\n                            inputRef.current.editor.focus();\n                        }}>]]</div>\n                    </>}\n\n            </div>\n            <div style={{height: '100%', marginBottom: 36}}>\n                {nodes.map((n, i) => renderNode(n, i, 0, selectedNodes))}\n            </div>\n        </>\n    );\n};\n\ninterface Completion {\n    value?: string;\n    meta: string;\n    type?: string;\n    caption?: string;\n    snippet?: any;\n    score?: number;\n    exactMatch?: number;\n    docHTML?: string;\n}\n\ntype CompletionCallback = (error: Error|null, results: Completion[]) => void;","import * as React from 'react';\nimport { Data } from '../model';\nimport { ContextState } from '../db/context';\nimport _ from 'lodash';\n\nexport const ContextSelector: React.FC<{contextId: string|null, data: Data, onChange: (contextId: string|null) => void}> = (props) => {\n    const activeContexts = _.orderBy(props.data.contexts.filter(x => x.state === ContextState.Active), x => x.title);\n    const inactiveContexts = _.orderBy(props.data.contexts.filter(x => x.state !== ContextState.Active), x => x.title);\n\n    return (\n        <select className=\"input is-large\" value={props.contextId || ''} onChange={e => props.onChange(e.target.value)}>\n            <option value=\"\">Not set</option>\n            {activeContexts.map(c => (<option key={c.id} value={c.id}>{c.title}</option>))}\n            <option value=\"--inactive--\" disabled>-- Inactive</option>\n            {inactiveContexts.map(c => (<option key={c.id} value={c.id}>{c.title}</option>))}\n        </select>\n    );\n}","import * as React from 'react';\n\nexport function TagInput(props: { tags: string; availableTags: string[]; onChange: (tags: string) => void }) {\n    const [focus, setFocus] = React.useState(false)\n\n    const [tagState, setTagState] = React.useState(new TagState(props.availableTags, props.tags && props.tags.length > 0 ? props.tags.split(' ') : []))\n\n    const timeoutId = React.useRef<number|undefined>(undefined);\n    const tagInput = React.useRef<any>();\n\n    function onTextChange(e: React.ChangeEvent<HTMLInputElement>) {\n        onChange(tagState.withText(e.target.value))\n    }\n\n    function onChange(newTagState: TagState) {\n        setTagState(newTagState);\n        props.onChange(newTagState.getTags());\n    }\n\n    function onKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'ArrowUp') {\n            onChange(tagState.decrementIndex());\n        } else if (e.key === 'ArrowDown') {\n            onChange(tagState.incrementIndex());\n        } else if (e.key === 'Enter') {\n            if (tagState.text === '') {\n                onChange(tagState.addSelectedTag());\n            } else {\n                onChange(tagState.addText());\n            }\n        } else if (e.key === 'Tab') {\n            onChange(tagState.addSelectedTag());\n            e.preventDefault();\n        } else if (e.key === 'Backspace') {\n            if (tagState.text === '') {\n                onChange(tagState.reopenLastTag());\n            }\n        }\n    }\n\n    function onClickTag(tag: string) {\n        onChange(tagState.addTag(tag));\n        tagInput.current.focus();\n    }\n\n    function onFocus() {\n        clearTimeout(timeoutId.current);\n\n        if(focus) {\n            return;\n        }\n\n        setFocus(true);\n    }\n\n    function onBlur() {\n        if(!focus) {\n            return;\n        }\n\n        timeoutId.current = setTimeout(() => {\n            setFocus(false);\n        }, 100) as any;\n    }\n\n    return (\n        <div className=\"tag-input\" onFocus={() => onFocus()} onBlur={() => onBlur()}>\n            <div className=\"tags\">\n                {tagState.selectedTags.map((t, i) => <Tag key={`tag-${t}-${i}`} name={t} />)}\n                <input ref={tagInput} placeholder=\"Tag\" type=\"text\" className=\"\" onChange={e => onTextChange(e)} onKeyDown={e => onKeyPress(e)} value={tagState.text} />\n            </div>\n            {focus && tagState.getFilteredAvailableTags().length > 0 &&\n                <div className=\"panel\">\n                    {tagState.getFilteredAvailableTags().slice(0, 10).map((t, i) => <div key={`available-tag-${t}`} style={tagState.index === i ? { background: '#078263'} : {}} onClick={() => onClickTag(t)}>{t}</div>)}\n                </div>\n            }\n        </div>\n    );\n}\n\nexport class TagState {\n    availableTags: string[];\n    selectedTags: string[];\n    text: string;\n    index: number;\n\n    constructor(availableTags: string[], selectedTags: string[], text = \"\", index = 0) {\n        this.availableTags = availableTags;\n        this.selectedTags = selectedTags;\n        this.text = text;\n        this.index = index;\n    }\n\n    withText(text: string) {\n        return new TagState(this.availableTags, this.selectedTags, text, this.index);\n    }\n\n    withAvailableTags(availableTags: string[]) {\n        return new TagState(availableTags, this.selectedTags, this.text, this.index);\n    }\n\n    withSelectedTags(selectedTags: string[]) {\n        return new TagState(this.availableTags, selectedTags, this.text, this.index);\n    }\n\n    decrementIndex() {\n        return new TagState(this.availableTags, this.selectedTags, this.text, Math.max(0, this.index - 1));\n    }\n\n    incrementIndex() {\n        return new TagState(this.availableTags, this.selectedTags, this.text, Math.max(0, Math.min(this.availableTags.length - 1, this.index + 1)));\n    }\n\n    addSelectedTag() {\n        return new TagState(this.availableTags, this.selectedTags.concat([this.getFilteredAvailableTags()[this.index]]), '', 0);\n    }\n\n    addTag(tag: string) {\n        return new TagState(this.availableTags, this.selectedTags.concat([tag]), '', 0);\n    }\n\n    addText() {\n        return new TagState(this.availableTags, this.selectedTags.concat([this.text]), '', 0);\n    }\n\n    reopenLastTag() {\n        const lastTag = this.selectedTags[this.selectedTags.length - 1];\n        return new TagState(this.availableTags, this.selectedTags.slice(0, this.selectedTags.length - 1), lastTag, 0);\n    }\n\n    getFilteredAvailableTags() {\n        return this.availableTags.filter(t => this.selectedTags.indexOf(t) === -1).filter(t => t.toLowerCase().indexOf(this.text) !== -1);\n    }\n\n    getTags() {\n        return this.selectedTags.join(' ');\n    }\n}\n\nexport const Tag: React.FC<{ name: string }> = props => {\n    return (\n        <div className=\"tag is-dark\">{props.name}</div>\n    );\n}\n\nexport const TagList: React.FC<{tags: string}> = props => {\n    return (\n        <div className=\"tags\" style={{marginBottom: 0}}>{props.tags && props.tags.split(' ').map((t, i) => <Tag key={i} name={t} />)}</div>\n    );\n}","import * as React from 'react';\nimport { ToolSection } from '../framework/ToolSection';\nimport { SimpleSplitEditor, SplitMode, SplitModeSelector, NoteModeSelector } from './SimpleSplitEditor';\nimport { isMobile } from './Layout';\nimport { getNoteTitle, Note } from '../db/note';\nimport { TreeEditor } from './TreeEditor';\nimport { SettingsCompactor } from './SettingsCompactor';\nimport './NoteEditor.scss';\nimport { ContextSelector } from '../components/ContextSelector';\nimport { Data } from '../model';\nimport moment from 'moment';\nimport { TagInput } from './TagInput';\n\nexport function NoteEditor(props: {note: Note, updateNote: (props: Partial<Note>) => void, onNoteAdded: () => void, availableTags: string[], data: Data}) {\n    const [splitMode, setSplitMode] = React.useState(isMobile() ? SplitMode.Editor : SplitMode.Split)\n\n    const updateDailyDate = (value: string) => {\n        if (value === '') {\n            props.updateNote({ dailyDate: null });\n        } else {\n            props.updateNote({ dailyDate: new Date(value).toISOString() });\n        }\n    }\n\n    return (\n        <div style={{width: '100%', flex: 1, display: 'flex', flexDirection: 'column'}}>\n            <ToolSection verticalAround={false}>\n                <SettingsCompactor wideStyle={{justifyContent: 'space-between'}} alwaysVisible={() => (\n                    <>\n                        <ContextSelector contextId={props.note.contextId} data={props.data} onChange={contextId => props.updateNote({ contextId })} />\n                        <input type=\"date\" className=\"input is-large\" value={(props.note.dailyDate && moment(props.note.dailyDate).format('YYYY-MM-DD')) || ''} onChange={e => updateDailyDate(e.target.value)} />\n                    </>\n                )}>\n                    <NoteModeSelector mode={props.note.mode || 'tree'} onModeChange={mode => props.updateNote({ mode })} />\n                    <SplitModeSelector mode={splitMode} onModeChange={splitMode => setSplitMode(splitMode)} />\n                </SettingsCompactor>\n            </ToolSection>\n            <ToolSection>\n                {!props.note.noteFor && !props.note.dailyDate && (\n                    <>\n                        <input type=\"text\" placeholder=\"Title\" className=\"input is-large is-wide\" value={props.note.title} onChange={e => props.updateNote({ title: e.target.value })} />\n                        <TagInput availableTags={props.availableTags} tags={props.note.tags} onChange={tags => props.updateNote({ tags })} />\n                    </>\n                )}\n                {props.note.dailyDate && (\n                    <h1>{getNoteTitle({ dailyDate: props.note.dailyDate, title: props.note.title, content: props.note.content })}</h1>\n                )}\n            </ToolSection>\n            <div style={{flex: 1}}>\n                {props.note.mode === 'markdown' ? (\n                    <SimpleSplitEditor text={props.note.content} expand={true} onTextChanged={content => props.updateNote({ content })} mode={splitMode} data={props.data} contextId={props.note.contextId} />\n                ) : (\n                    <TreeEditor text={props.note.content} onTextChanged={content => props.updateNote({ content })} contextId={props.note.contextId} />\n                )}\n            </div>\n        </div>\n    );\n}","import {history} from '../index';\nimport { Note } from './note';\nimport { db } from './db';\nimport {createInstance} from 'localforage';\n\nlet registered = false;\n\nfunction ensureRegister() {\n    if (registered) {\n        return;\n    }\n\n    history.listen(onNavigate);\n    registered = true;\n}\n\nconst store = createInstance({ name: `staging-note` });\n\nasync function processQueue() {\n    for(const key of await store.keys()) {\n        const note = await store.getItem<Note>(key);\n        await db.notes.save(note);\n        await store.removeItem(note.id);\n    }\n}\n\nprocessQueue();\n\nlet queuedPath: string|null = null;\nlet queuedNote: Note|null = null;\n\nasync function onNavigate(location: { pathname: string }, action: string) {\n    if (!queuedNote) {\n        return;\n    }\n\n    if (queuedPath === location.pathname) {\n        return;\n    }\n\n    await db.notes.save(queuedNote);\n    await store.removeItem(queuedNote.id);\n    queuedNote = null;\n}\n\nexport async function register(note: Note, hasChanges: boolean) {\n    ensureRegister();\n    if(hasChanges) {\n        queuedNote = note;\n        queuedPath = window.location.pathname;\n        await store.setItem(note.id, note);\n    } else {\n        queuedNote = null;\n        queuedPath = null;\n        await store.removeItem(note.id);\n    }\n};","import * as React from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { NoteEditor } from '../../components/NoteEditor';\nimport { useData } from '../../model';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { useQueryState } from '../../lib/UseQueryState';\nimport * as styles from '../../layout/styles';\nimport { cx } from 'emotion';\nimport { Note } from '../../db/note';\nimport { db } from '../../db/db';\nimport { register } from '../../db/stagingArea';\nimport moment from 'moment';\n\nfunction useNote(pristineNote: Note): [Note, (props: Partial<Note>) => void, boolean] {\n    const [pristine] = React.useState(pristineNote);\n    const [note, setNote] = React.useState<Note>({...pristineNote});\n    const [hasChanges, setHasChanges] = React.useState(false);\n\n    function updateNote(props: Partial<Note>) {\n        const newNote = {...note, ...props};\n        const newHasChanges = JSON.stringify(pristine) !== JSON.stringify(newNote);\n        setHasChanges(newHasChanges);\n        setNote(newNote);\n        register(newNote, newHasChanges);\n    }\n\n    return [note, updateNote, hasChanges];\n}\n\nexport const EditNotePage: React.FC<{id?: string }> = props => {\n    const {data} = useData();\n    let tags: {[key: string]: number} = {};\n    const [goBack, setGoBack] = React.useState(false);\n    const [source] = useQueryState(null, 'source');\n\n    const urlParams = new URLSearchParams(window.location.search);\n    const title = urlParams.get('title');\n    const contextId = urlParams.get('context');\n    const daily = urlParams.has('daily');\n\n    const [note, updateNote] = useNote(data.notes.find(x => x.id === props.id) || db.notes.createUnsaved({ title: title || '', content: '', mode: 'tree', contextId, dailyDate: (daily && moment().format('YYYY-MM-DD')) || null, noteFor: null, tags: '' }));\n\n    if (goBack) {\n        return <Redirect to={source ? decodeURIComponent(source) : '/'} />;\n    }\n\n    for (const note of data.notes || []) {\n        if(!note.tags || !note.tags.length) {\n            continue;\n        }\n\n        for(const tag of note.tags.split(' ')) {\n            if(!tags[tag]) {\n                tags[tag] = 0;\n            }\n\n            tags[tag] += 1;\n        }\n    }\n\n    const availableTags = Object.keys(tags).sort((a, b) => tags[b] - tags[a]);\n\n    if (props.id) {\n        return (\n            <>\n                <div style={{height: '100%', display: 'flex', flexDirection: 'column'}}>\n                    <ToolSection>\n                        <div className={cx(styles.horizontalSpace('.5rem'))}>\n                            <NavLink to={source ? decodeURIComponent(source) : '/'} className=\"button\">Back</NavLink>\n                            {!note.noteFor && <NavLink to={`/notes/${note.id}`} className=\"button\">Show</NavLink>}\n                        </div>\n                    </ToolSection>\n                    <NoteEditor note={note} updateNote={updateNote} {...note} data={data} availableTags={availableTags} onNoteAdded={() => { setGoBack(true); }} />\n                </div>\n            </>\n        );\n    }\n\n    return (\n        <>\n            <div style={{height: '100%', display: 'flex', flexDirection: 'column'}} >\n                <ToolSection>\n                    <NavLink to={`/`} className=\"button\">Back</NavLink>\n                </ToolSection>\n                <NoteEditor note={note} updateNote={updateNote} availableTags={availableTags} data={data} onNoteAdded={() => { setGoBack(true); }} />\n            </div>\n        </>\n    );\n}","import * as React from 'react';\nimport { useState } from 'react';\nimport { MarkedViewer } from './MarkedViewer';\n\nimport \"ace-builds/src-noconflict/mode-markdown\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport { Loader } from './Loader';\nimport { getNoteReferenceMatchRegExp, getNoteAliasReferenceMatchRegExp } from '../db/note';\n\ninterface Node {\n    text: string;\n    nodes: Node[];\n}\n\nexport const TreeViewer: React.FC<{ json: string, contextId: string|null, referenceTitle?: string, personAlias?: string }> = (props) => {\n    const [nodes, setNodes] = useState<Node[]|null>(null);\n    const [invalid, setInvalid] = useState(false);\n\n    React.useEffect(() => {\n        try {\n            let nodes = [];\n            if (props.json) {\n                nodes = JSON.parse(props.json)\n            }\n            setNodes(nodes);\n        } catch {\n            setInvalid(true);\n        }\n    }, [props.json]);\n\n    if (invalid) {\n        return <div>Invalid json</div>;\n    }\n\n    if (!nodes) {\n        return <Loader />;\n    }\n\n    const renderNode = (node: Node, index: number, level: number, filter: RegExp|null) => {\n        const extra: JSX.Element[] = [];\n        if (filter) {\n            if (filter.test(node.text)) {\n                filter = null;\n                if (level > 0) {\n                    extra.push(<div key={`extra-${index}-${level}`} style={{paddingTop: 8, color: '#aaa'}}>{'... > '.repeat(level)}</div>)\n                }\n            } else {\n                return (\n                    <React.Fragment key={`${level}-${index}`}>\n                        {node.nodes.map((n, i) => renderNode(n, i, level + 1, filter))}\n                    </React.Fragment>\n                );\n            }\n        }\n\n        return (\n            <React.Fragment key={`${level}-${index}`}>\n                {extra}\n                <div style={{display: 'flex', padding: '.6rem .8rem'}}>\n                    <div style={{letterSpacing: '.5rem', color: '#777', lineHeight: 1.5}}>•</div>\n                    <MarkedViewer markdown={node.text} contextId={props.contextId} />\n                </div>\n                <div style={{borderLeft: '1px solid #555', paddingLeft: 16, marginLeft: 16}}>\n                    {node.nodes.map((n, i) => renderNode(n, i, level + 1, filter))}\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    let referenceRegExp = props.referenceTitle ? getNoteReferenceMatchRegExp(props.referenceTitle) : null;\n\n    if (props.personAlias) {\n        referenceRegExp = getNoteAliasReferenceMatchRegExp(props.personAlias);\n    }\n\n    return (\n        <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'space-between', height: '100%'}}>\n            <div style={{width: '100%'}}>\n                {nodes.map((n, i) => renderNode(n, i, 0, referenceRegExp))}\n            </div>\n        </div>\n    );\n};","import * as React from 'react';\nimport { useData } from '../model';\nimport { MarkedViewer } from './MarkedViewer';\nimport { getNoteTitle, getNoteReferenceMatchRegExp, getNoteAliasReferenceMatchRegExp } from '../db/note';\nimport { Link } from 'react-router-dom';\nimport * as _ from 'lodash';\nimport { TreeViewer } from './TreeViewer';\n\nexport const ReferenceViewer: React.FC<{ title: string, contextId: string|null }> = (props) => {\n    const {data} = useData();\n    const referenceRegExp = getNoteReferenceMatchRegExp(props.title);\n    const contextNotes = _.orderBy(data.notes.filter(x => x.contextId === props.contextId && referenceRegExp.test(x.content)), x => x.updatedAt, 'desc');\n\n    if (contextNotes.length === 0) {\n        return null;\n    }\n\n    return (\n        <div style={{paddingTop: 32}}>\n            <div style={{fontWeight: 'bold'}}>{contextNotes.length} linked references for \"{props.title}\"</div>\n            {contextNotes.map(note => (\n                <div key={note.id} style={{marginTop: 16}}>\n                    <Link to={`/notes/${note.id}`} style={{color: '#078263'}}>{getNoteTitle(note)}</Link>\n                    <div style={{paddingLeft: 16, background: '#222', marginTop: 8}}>\n                        {note.mode === 'markdown' \n                        ? <MarkedViewer markdown={note.content} contextId={note.contextId} /> \n                        : <TreeViewer json={note.content} contextId={note.contextId} referenceTitle={props.title} />}\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport const PersonReferenceViewer: React.FC<{ alias: string }> = (props) => {\n    const {data} = useData();\n    const referenceRegExp = getNoteAliasReferenceMatchRegExp(props.alias);\n    const matchingNotes = _.orderBy(data.notes.filter(x => referenceRegExp.test(x.content)), x => x.updatedAt, 'desc');\n\n    if (matchingNotes.length === 0) {\n        return null;\n    }\n\n    return (\n        <div style={{paddingTop: 32}}>\n            <div style={{fontWeight: 'bold'}}>{matchingNotes.length} linked references for \"{props.alias}\"</div>\n            {matchingNotes.map(note => (\n                <div key={note.id} style={{marginTop: 16}}>\n                    <Link to={`/notes/${note.id}`} style={{color: '#078263'}}>{getNoteTitle(note)}</Link>\n                    <div style={{paddingLeft: 16, background: '#222', marginTop: 8}}>\n                        {note.mode === 'markdown' \n                        ? <MarkedViewer markdown={note.content} contextId={note.contextId} /> \n                        : <TreeViewer json={note.content} contextId={note.contextId} personAlias={props.alias} />}\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { MarkedViewer } from '../../components/MarkedViewer';\nimport { ReferenceViewer } from '../../components/ReferenceViewer';\nimport { useData } from '../../model';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { useQueryState } from '../../lib/UseQueryState';\nimport { TagList } from '../../components/TagInput';\nimport { ContextTag } from '../../components/ContextTag';\nimport { getNoteTitle } from '../../db/note';\nimport { TreeViewer } from '../../components/TreeViewer';\n\nexport const ShowNotePage: React.SFC<{id: string}> = (props) => {\n    const {data} = useData();\n    const [source] = useQueryState(null, 'source');\n    const note = data.notes.find(x => x.id === props.id);\n\n    if (!note) {\n        return <div>Note not found.</div>\n    }\n\n    let viewer = null;\n\n    if (!note.mode || note.mode === 'markdown') {\n        viewer = <MarkedViewer markdown={note.content} contextId={note.contextId} />;\n    } else {\n        viewer = <TreeViewer json={note.content} contextId={note.contextId} />;\n    }\n\n    return (\n        <>\n            <ToolSection>\n                <NavLink to={source ? decodeURIComponent(source) : '/'} className=\"button\">Back</NavLink>\n                <NavLink to={`/notes/${note.id}/edit`} className=\"button\">Edit</NavLink>\n            </ToolSection>\n            <div className=\"panel\">\n                <div className=\"content\" style={{padding: '1rem'}}>\n                    <h1>{getNoteTitle(note)}</h1>\n                    <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                        <TagList tags={note.tags} />\n                        <ContextTag contextId={note.contextId} />\n                    </div>\n                    {viewer}\n                    <ReferenceViewer title={getNoteTitle(note)} contextId={note.contextId} />\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport const ShowVirtualNotePage: React.SFC<{}> = (props) => {\n    const [source] = useQueryState(null, 'source');\n\n    const urlParams = new URLSearchParams(window.location.search);\n    const title = urlParams.get('title');\n    const contextId = urlParams.get('context');\n\n    if(!title) {\n        return <div>Note not found.</div>\n    }\n\n    return (\n        <>\n            <ToolSection>\n                <NavLink to={source ? decodeURIComponent(source) : '/'} className=\"button\">Back</NavLink>\n                <NavLink to={`/notes/new?title=${encodeURIComponent(title)}${contextId ? `&context=${contextId}` : ''}&source=${encodeURIComponent(`${window.location.pathname}`)}`} className=\"button\">Create</NavLink>\n            </ToolSection>\n            <div className=\"panel\">\n                <div className=\"content\" style={{padding: '1rem'}}>\n                    <h1>{title}</h1>\n                    <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                        <ContextTag contextId={contextId} />\n                    </div>\n                    <ReferenceViewer title={title} contextId={contextId} />\n                </div>\n            </div>\n        </>\n    );\n}","import * as React from 'react';\n\ninterface ListProps<T> {\n    renderItem: (item: T) => JSX.Element;\n    items: T[];\n}\n\nexport function List<T>(props: ListProps<T>) {\n    return (\n        <div className=\"list\">\n            {props.items.map(props.renderItem)}\n        </div>\n    );\n}","import * as React from 'react';\nimport moment from 'moment';\nimport { TagList } from '../../components/TagInput';\nimport { NavLink } from 'react-router-dom';\nimport lunr from 'lunr';\nimport { debounce } from 'throttle-debounce';\nimport { useData } from '../../model';\nimport * as styles from '../../layout/styles';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { getNoteTitle, extractAllReferences } from '../../db/note';\nimport { List } from '../../framework/List';\nimport { isMobile } from '../../components/Layout';\nimport { useQueryState, useQueryStateT, useQueryStateBoolean } from '../../lib/UseQueryState';\nimport { SettingsCompactor } from '../../components/SettingsCompactor';\nimport { ContextTag } from '../../components/ContextTag';\nimport _ from 'lodash';\nimport { Loader } from '../../components/Loader';\nimport { cx } from 'emotion';\nimport { ContextState } from '../../db/context';\n\nexport function NotePage() {\n    const {data} = useData();\n    const [text, setText] = useQueryState(null, 'search');\n    const [filterTags, setFilterTags] = useQueryStateT<string[]>([], 'tags', s => s !== null ? s.split('|') : [], a => a.join('|'));\n    const [showTagsBar, setShowTagsBar] = React.useState(!isMobile());\n    const [searchResult, setSearchResult] = React.useState<{ id: string, score: number }[]|null>(null);\n    const [searchIndex, setSearchIndex] = React.useState<lunr.Index|null>(null);\n    const [showNotesFor, setShowNotesFor] = React.useState(false);\n    const [showNoContext, setShowNoContext] = useQueryStateBoolean(false, 'no-context');\n    const [virtualReferences, setVirtualReferences] = React.useState<{ title: string, contextId: string|null, updatedAt: Date }[]>();\n    const [inactiveContexts, setInactiveContexts] = React.useState<string[]>([]);\n\n    React.useEffect(() => {\n        const refs = extractAllReferences(data.notes);\n        setVirtualReferences(refs);\n    }, [data.notes]);\n\n    React.useEffect(() => {\n        setInactiveContexts(data.contexts.filter(c => c.state === ContextState.Inactive).map(c => c.id));\n    }, [data.contexts]);\n\n    const onSearch = (text: string) => {\n        if (!text || !text.length) {\n            setSearchResult(null);\n            return;\n        }\n\n        if (searchIndex === null) {\n            const idx = lunr(function() {\n                this.field('title');\n                this.field('text');\n    \n                for(let note of data.notes) {\n                    this.add({\n                        id: note.id,\n                        title: note.title,\n                        text: note.content\n                    });\n                }\n            });\n\n            setSearchIndex(idx);\n            const result = idx.search(text);\n            setSearchResult(result.map(r => { return { id: r.ref, score: r.score }; }));\n            return;\n        }\n\n        const result = searchIndex.search(text);\n        setSearchResult(result.map(r => { return { id: r.ref, score: r.score }; }));\n    };\n\n    const debouncedSearch = debounce(100, onSearch);\n\n    const toggleTag = (tag: string) => {\n        if (filterTags.indexOf(tag) === -1) {\n            setFilterTags(filterTags.concat([ tag ]));\n        } else {\n            setFilterTags(filterTags.filter(x => x !== tag));\n        }\n    }\n\n    let notes = data.notes || [];\n    let tags: {[key: string]: number} = {};\n\n    for(const tag of filterTags) {\n        notes = notes.filter(x => x.tags.split(' ').indexOf(tag) !== -1);\n    }\n\n    if (!showNotesFor) {\n        notes = notes.filter(x => !x.noteFor);\n    }\n\n    if (showNoContext) {\n        notes = notes.filter(x => !x.contextId);\n    }\n\n    notes = notes.filter(x => !x.contextId || inactiveContexts.indexOf(x.contextId) === -1)\n\n    if (searchResult) {\n        notes = searchResult.map(r => {\n            let idx =  notes.findIndex(n => n.id === r.id);\n            return notes[idx];\n        }).filter(n => n);\n    }\n\n    for (const note of notes) {\n\n        if(!note.tags) {\n            continue;\n        }\n\n        for(const tag of note.tags.split(' ')) {\n            if(!tags[tag]) {\n                tags[tag] = 0;\n            }\n\n            tags[tag] += 1;\n        }\n    }\n\n    const tagCounts = Object.keys(tags).map(k => { return { key: k, count: tags[k], active: filterTags.indexOf(k) !== -1 }; }).sort((a, b) => b.count - a.count);\n\n    let source: string|null = null;\n    if (window.location.search.length) {\n        const urlParams = new URLSearchParams(window.location.search);\n        source = `?source=${encodeURIComponent(`${window.location.pathname}?${urlParams.toString()}`)}`\n    }\n\n    if(!virtualReferences) {\n        return <Loader />;\n    }\n\n    interface NoteOutput {\n        id: string|null;\n        title: string;\n        tags: string|null;\n        contextId: string|null;\n        updatedAt: Date;\n        url: string;\n        isRef: boolean;\n    }\n\n    const notesOutput: NoteOutput[] = notes.map(n => ({\n        id: n.id,\n        title: getNoteTitle(n),\n        tags: n.tags,\n        contextId: n.contextId,\n        updatedAt: new Date(n.updatedAt),\n        url: `/notes/${n.id}${source ? source : ''}`,\n        isRef: false\n    }));\n\n    let virtualReferencesOutput: NoteOutput[] = [];\n    \n    if(!searchResult) {\n        virtualReferencesOutput = virtualReferences.map(v => ({\n            id: null,\n            title: v.title,\n            tags: null,\n            contextId: v.contextId,\n            updatedAt: v.updatedAt,\n            url: `/notes/virtual?title=${encodeURIComponent(v.title)}${v.contextId ? `&context=${v.contextId}` : ''}&source=${encodeURIComponent(`${window.location.pathname}`)}`,\n            isRef: true\n        }));\n    }\n\n    virtualReferencesOutput = virtualReferencesOutput.filter(x => !x.contextId || inactiveContexts.indexOf(x.contextId) === -1)\n\n    const output = _.orderBy(notesOutput.concat(virtualReferencesOutput), o => o.updatedAt, 'desc');\n\n    return (\n        <div style={{display: 'flex', height: '100%'}}>\n            {showTagsBar && <div style={{borderRight: '1px solid #666', width: 200}}>\n                <List<{key: string, count: Number, active: boolean}> items={tagCounts} renderItem={i => {\n                    return (\n                        <div key={i.key} style={{background: i.active ? '#444' : undefined}} onClick={() => toggleTag(i.key)} className={cx('item', styles.hoverGlow)}>{i.key} <span style={{color: '#999'}}>{i.count}</span></div>\n                    );\n                }} />\n            </div>}\n            <div style={{width: '100%'}}>\n                <ToolSection>\n                    <SettingsCompactor alwaysVisible={() => (\n                        <>\n                            <NavLink to={`/notes/new`} className=\"button\">New Note</NavLink>\n                        </>\n                    )}>\n                        <div>\n                            <input id=\"tags-box\" type=\"checkbox\" checked={showTagsBar} onChange={() =>setShowTagsBar(!showTagsBar)} />\n                            <label htmlFor=\"tags-box\">Show tags bar</label>\n                        </div>\n                        <div>\n                            <input id=\"show-notes-for-box\" type=\"checkbox\" checked={showNotesFor} onChange={() =>setShowNotesFor(!showNotesFor)} />\n                            <label htmlFor=\"show-notes-for-box\">Show notes for</label>\n                        </div>\n                        <div>\n                            <input id=\"show-no-context-box\" type=\"checkbox\" checked={showNoContext} onChange={() =>setShowNoContext(!showNoContext)} />\n                            <label htmlFor=\"show-no-context-box\">Show no context</label>\n                        </div>\n                    </SettingsCompactor>\n                    <input style={{fontSize: 16, padding: '.3rem', width: '100%'}} placeholder=\"Search...\" type=\"text\" value={text || ''} onChange={e => { setText(e.target.value); debouncedSearch(e.target.value); }}/>\n                </ToolSection>\n                <div className=\"list\">\n                    {output.map((n, i) => (\n                        <React.Fragment key={i}>\n                            <NavLink to={n.url} className={cx('item', 'note', styles.hoverGlow)} style={{color: n.isRef ? '#aaa' : undefined}}>\n                                <div className=\"note-title\">\n                                    <div>{n.title}</div>\n                                </div> \n                                <div className=\"note-details\">\n                                    <TagList tags={n.tags || ''} />\n                                    <div className=\"tags\">\n                                        <ContextTag contextId={n.contextId} />\n                                    </div>\n                                    <div className=\"note-date\">{moment(n.updatedAt).format('ddd MMM Do HH:mm')}</div>\n                                </div>\n                            </NavLink>\n                        </React.Fragment>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n","import * as React from 'react';\nimport { ToolSection } from '../framework/ToolSection';\nimport { extractAllReferences } from '../db/note';\nimport { useData } from '../model';\n\nexport const PlaygroundPage: React.FC<{}> = () => {\n    \n    const {data} = useData();\n\n    console.log(extractAllReferences(data.notes));\n    \n    return (\n        <div style={{height: '100%'}}>\n            <ToolSection>\n            </ToolSection>\n        </div>\n    );\n}","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as styles from '../layout/styles';\nimport { ToolSection } from '../framework/ToolSection';\nimport { Context, ContextState } from '../db/context';\nimport { db } from '../db/db';\nimport { useData } from '../model';\nimport { cx } from 'emotion';\nimport { getVariable } from '../layout/theme';\n\nexport const ContextPage: React.FC<{ }> = props => {\n    const {data} = useData();\n\n    const [text, setText] = React.useState('');\n\n    async function onKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            await db.contexts.create({\n                title: text,\n                state: ContextState.Active,\n                contextId: null\n            });\n\n            setText('');\n        }\n    }\n\n    function renderTarget(target: Context) {\n        return (\n            <NavLink key={target.id} to={`/contexts/${target.id}`} className={cx('item', styles.hoverGlow)}>\n                <div>\n                    {target.title}\n                </div>\n            </NavLink>\n        );\n    }\n\n    return (\n        <>\n            <ToolSection>\n                <input type=\"text\" className=\"input is-large is-wide\" placeholder=\"Add context...\" value={text} onChange={e => setText(e.target.value)} onKeyPress={onKeyPress} />\n            </ToolSection>\n\n            <div className=\"list\">\n                <div className=\"header\" style={{background: getVariable('--task-context-background')}}>Active</div>\n                {data.contexts.filter(p => !p.state || p.state === ContextState.Active).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => renderTarget(t))}\n                <div className=\"header\" style={{background: getVariable('--task-context-background')}}>Not Active</div>\n                {data.contexts.filter(p => p.state === ContextState.Inactive).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => renderTarget(t))}\n            </div>\n        </>\n    );\n}\n","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as styles from '../layout/styles';\nimport { Data } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport { ProjectState, Project } from '../db/project';\nimport { db } from '../db/db';\nimport { ContextTag } from '../components/ContextTag';\nimport { cx } from 'emotion';\nimport { getVariable } from '../layout/theme';\n\nexport class ProjectPage extends React.Component<{ data: Data, refreshData: () => void }, { text: string }> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            text: ''\n        };\n    } \n    \n    async onKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            await db.projects.create({\n                title: this.state.text,\n                state: ProjectState.Active,\n                contextId: null\n            });\n            this.setState({ text: '' }, this.props.refreshData);\n        }\n    }\n\n    renderProject(target: Project) {\n        return (\n            <NavLink key={target.id} to={`/projects/${target.id}`} className={cx('item', styles.hoverGlow)}>\n                <div>\n                    {target.title}\n                </div>\n                <div className=\"tags\">\n                    <div className=\"tag\">{target.state}</div>\n                    <ContextTag contextId={target.contextId} />\n                </div>\n            </NavLink>\n        );\n    }\n\n    render() {\n        return (\n            <>\n                <ToolSection>\n                    <input type=\"text\" className=\"input is-large is-wide\" placeholder=\"Add project...\" value={this.state.text} onChange={e => this.setState({ text: e.target.value })} onKeyPress={this.onKeyPress.bind(this)} />\n                </ToolSection>\n\n                <div className=\"list\">\n                    <div className=\"header\" style={{background: getVariable('--task-project-background')}}>Active</div>\n                    {this.props.data.projects.filter(p => !p.state || p.state === ProjectState.Active).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => this.renderProject(t))}\n                    <div className=\"header\"  style={{background: getVariable('--task-project-background')}}>Incubated</div>\n                    {this.props.data.projects.filter(p => !p.state || p.state === ProjectState.Incubated).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => this.renderProject(t))}\n                    <div className=\"header\"  style={{background: getVariable('--task-project-background')}}>Not Active</div>\n                    {this.props.data.projects.filter(p => p.state !== ProjectState.Active && p.state !== ProjectState.Incubated).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => this.renderProject(t))}\n                </div>\n            </>\n        );\n    }\n}\n","import * as React from 'react';\nimport { useData } from '../model';\nimport { db } from '../db/db';\nimport { Person } from '../db/person';\nimport { NavLink } from 'react-router-dom';\nimport { MarkedViewer } from './MarkedViewer';\nimport { Task } from '../db/task';\nimport { HasNote } from '../db/note';\nimport { TreeViewer } from './TreeViewer';\n\nexport const EmbeddedNoteEdit: React.FC<{ targetEntity: Person|Task|null }> = (props) => {\n    const {data} = useData();\n\n    if (!props.targetEntity) {\n        return null;\n    }\n\n    const {noteId} = props.targetEntity;\n\n    const addNode = async () => {\n        if (!props.targetEntity) {\n            return;\n        }\n\n        const note = await db.notes.create({\n            title: '',\n            content: '',\n            tags: '',\n            contextId: null,\n            noteFor: {\n                type: props.targetEntity.type,\n                id: props.targetEntity.id,\n            },\n            mode: 'tree',\n            dailyDate: null\n        });\n\n        if (props.targetEntity.type === 'person') {\n            props.targetEntity.noteId = note.id;\n            await db.people.save(props.targetEntity);\n        }\n\n        if (props.targetEntity.type === 'task') {\n            props.targetEntity.noteId = note.id;\n            await db.tasks.save(props.targetEntity);\n        }\n    };\n\n    if (!noteId) {\n        return (\n            <div>\n                <div className=\"button\" onClick={addNode}>Add note</div>\n            </div>\n        );\n    }\n\n    const note = data.notes.find(x => x.id === noteId);\n\n    if (!note) {\n        return null;\n    }\n\n    return (\n        <div>\n            <NavLink to={`/notes/${note.id}/edit?source=${encodeURIComponent(`${window.location.pathname}`)}`} className=\"button\">Edit note</NavLink>\n            {!note.mode || note.mode === 'markdown' ? (\n                <MarkedViewer markdown={note.content} contextId={note.contextId} />\n            ) : (\n                <TreeViewer json={note.content} contextId={note.contextId} />\n            )}\n        </div>\n    )\n};\n\nexport const EmbeddedNoteShow: React.FC<{ targetEntity: HasNote|null }> = (props) => {\n    const {data} = useData();\n\n    if (!props.targetEntity) {\n        return null;\n    }\n\n    const {noteId} = props.targetEntity;\n    if (!noteId) {\n        return null;\n    }\n\n    const note = data.notes.find(x => x.id === noteId);\n\n    if (!note) {\n        return null;\n    }\n\n    return (\n        <div>\n            {!note.mode || note.mode === 'markdown' ? (\n                <MarkedViewer markdown={note.content} contextId={note.contextId} />\n            ) : (\n                <TreeViewer json={note.content} contextId={note.contextId} />\n            )}\n        </div>\n    )\n};","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Data } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport { Task, TaskState } from '../db/task';\nimport { db } from '../db/db';\nimport { ProjectState } from '../db/project';\nimport moment from 'moment';\nimport * as styles from '../layout/styles';\nimport { EmbeddedNoteEdit } from '../components/EmbeddedNote';\nimport { cx } from 'emotion';\n\nexport class ShowTaskPage extends React.Component<{ data: Data, id: string, refreshData(): void }, { title: string, source: string }> {\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            title: '',\n            source: '/tasks'\n        }\n    }\n\n    componentDidMount() {\n        const urlParams = new URLSearchParams(window.location.search);\n\n        let task = this.props.data.tasks.find(x => x.id === this.props.id);\n        this.setState({ title: task!.title }, () => {\n            if (urlParams.has('source')) {\n                this.setState({ source: decodeURIComponent(urlParams.get('source')!)});\n            }\n        });\n    }\n\n    async setContext(task: Task, event: React.ChangeEvent<HTMLSelectElement>) {\n        let contextId: string|null = event.target.value;\n\n        if (contextId === '') {\n            contextId = null;\n        }\n\n        task.contextId = contextId;\n        await db.tasks.save(task);\n        this.props.refreshData();\n    }\n\n    async setProject(task: Task, event: React.ChangeEvent<HTMLSelectElement>) {\n        let projectId: string|null = event.target.value;\n\n        if (projectId === '') {\n            projectId = null;\n        }\n\n        task.projectId = projectId;\n        await db.tasks.save(task);\n        this.props.refreshData();\n    }\n\n    async setDefer(task: Task, event: React.ChangeEvent<HTMLInputElement>) {\n        let value: string|null = event.target.value;\n\n        if (value === '') {\n            task.deferredUntil = null;\n        } else {\n            task.deferredUntil = new Date(value).toISOString();\n        }\n\n        await db.tasks.save(task);\n        this.props.refreshData();\n    }\n\n    async onKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            let task = this.props.data.tasks.find(x => x.id === this.props.id);\n\n            if (!task) {\n                return;\n            }\n\n            if (task.title !== this.state.title) {\n                task.title = this.state.title;\n                await db.tasks.save(task);\n                this.props.refreshData();\n            }\n        }\n    }\n\n    async setTaskState(state: TaskState) {\n        const task = this.props.data.tasks.find(x => x.id === this.props.id);\n\n        if (!task) {\n            return;\n        }\n\n        if (task.state === state) {\n            return;\n        }\n\n        task.state = state;\n        task.stateChangedAt = new Date().toISOString();\n        await db.tasks.save(task);\n        this.props.refreshData();\n    }\n\n    render() {\n        let task = this.props.data.tasks.find(x => x.id === this.props.id);\n\n        if (!task) {\n            return <div>Task not found.</div>\n        }\n\n        let isDirty = false;\n\n        if (task.title !== this.state.title) {\n            isDirty = true;\n        }\n\n        return (\n            <>\n                <ToolSection>\n                    <NavLink to={this.state.source} className=\"button\">Back</NavLink>\n                    {/* <NavLink to={`/tasks/${task.id}/edit`} className=\"button\">Edit</NavLink> */}\n                </ToolSection>\n\n                <ToolSection>\n                    <div>Task</div>\n                    <input type=\"text\" className=\"input is-large is-wide\" style={{border: isDirty ? '2px solid orange' : undefined}} value={this.state.title} onKeyDown={e => this.onKeyDown(e)} onChange={e => this.setState({ title: e.target.value })} />\n\n                    <div>State</div>\n                    <div className={cx(styles.horizontalSpace('.5rem'))}>\n                        <div className={cx('button', task.state !== 'active' ? 'inactive' : null)} onClick={() => this.setTaskState('active')}>Active</div>\n                        <div className={cx('button', task.state !== 'incubated' ? 'inactive' : null)} onClick={() => this.setTaskState('incubated')}>Incubated</div>\n                        <div className={cx('button', task.state !== 'completed' ? 'inactive' : null)} onClick={() => this.setTaskState('completed')}>Completed</div>\n                    </div>\n\n                    <div>Context</div>\n                    <select className=\"input is-large\" value={task.contextId || ''} onChange={e => this.setContext(task!, e)}>\n                        <option value=\"\">Not set</option>\n                        {this.props.data.contexts.map(c => (\n                            <option key={c.id} value={c.id}>{c.title}</option>\n                        ))}\n                    </select>\n\n                    <div>Project</div>\n                    <select className=\"input is-large\" value={task.projectId || ''} onChange={e => this.setProject(task!, e)}>\n                        <option value=\"\">Not set</option>\n                        {this.props.data.projects.filter(p => p.state === ProjectState.Active || p.id === task!.projectId).map(c => (\n                            <option key={c.id} value={c.id}>{c.title}</option>\n                        ))}\n                    </select>\n\n                    <div>Defer</div>\n                    <input type=\"date\" className=\"input is-large\" value={(task.deferredUntil && moment(task.deferredUntil).format('YYYY-MM-DD')) || ''} onChange={e => this.setDefer(task!, e)} />\n                </ToolSection>\n\n                <ToolSection>\n                    <EmbeddedNoteEdit targetEntity={task} {...this.props} />\n                </ToolSection>\n            </>\n        );\n    }\n}","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Data } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport { Project, ProjectState } from '../db/project';\nimport { db } from '../db/db';\nimport { Loader } from '../components/Loader';\nimport { ContextSelector } from '../components/ContextSelector';\n\nexport class ShowProjectPage extends React.Component<{ data: Data, refreshData: () => void, id: string }, { title: string }> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            title: '',\n        }\n    }\n\n    componentDidMount() {\n        let target = this.props.data.projects.find(x => x.id === this.props.id);\n        this.setState({title: target!.title});\n    }\n\n    async setContext(target: Project, contextId: string|null) {\n        if (contextId === '') {\n            contextId = null;\n        }\n\n        target.contextId = contextId;\n        await db.projects.save(target);\n        this.props.refreshData();\n    }\n\n    async setProjectState(target: Project, event: React.ChangeEvent<HTMLSelectElement>) {\n        let projectState: ProjectState = event.target.value as ProjectState;\n\n        target.state = projectState;\n        await db.projects.save(target);\n        this.props.refreshData();\n    }\n\n    async onKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            let target = this.props.data!.projects.find(x => x.id === this.props.id);\n\n            if (!target) {\n                return;\n            }\n\n            if (target.title !== this.state.title) {\n                target.title = this.state.title;\n                await db.projects.save(target);\n                this.props.refreshData();\n            }\n        }\n    }\n\n    render() {\n        if (this.props.data === null) {\n            return <Loader />;\n        }\n\n        let target = this.props.data.projects.find(x => x.id === this.props.id);\n\n        if (!target) {\n            return <div>Project not found.</div>\n        }\n\n        let isDirty = false;\n\n        if (target.title !== this.state.title) {\n            isDirty = true;\n        }\n\n        return (\n            <>\n                <ToolSection>\n                    <NavLink to={`/projects`} className=\"button\">Back</NavLink>\n                </ToolSection>\n\n                <ToolSection>\n                    <div>Project</div>\n                    <input type=\"text\" className=\"input is-large is-wide\" style={{border: isDirty ? '2px solid orange' : undefined}} value={this.state.title} onKeyDown={e => this.onKeyDown(e)} onChange={e => this.setState({ title: e.target.value })} />\n                    \n                    <div>Context</div>\n                    <ContextSelector contextId={target.contextId} onChange={e => this.setContext(target!, e)} data={this.props.data} />\n                    <div>State</div>\n                    <select className=\"input is-large\" value={target.state || ProjectState.Active} onChange={e => this.setProjectState(target!, e)}>\n                        {Object.keys(ProjectState).map(c => (\n                            <option key={c} value={c}>{c}</option>\n                        ))}\n                    </select>\n\n                </ToolSection>\n\n            </>\n        );\n    }\n}","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Data } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport { Context, ContextState } from '../db/context';\nimport { db } from '../db/db';\n\nexport class ShowContextPage extends React.Component<{id: string, data: Data, refreshData(): void }, { title: string }> {\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            title: '',\n        }\n    }\n\n    componentDidMount() {\n        let target = this.props.data.contexts.find(x => x.id === this.props.id);\n        this.setState({ title: target!.title })\n    }\n\n    async onKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            const target = this.props.data.contexts.find(x => x.id === this.props.id);\n\n            if (!target) {\n                return;\n            }\n\n            if (target.title !== this.state.title) {\n                target.title = this.state.title;\n                await db.contexts.save(target);\n                this.props.refreshData();\n            }\n        }\n    }\n\n    async setContext(target: Context, event: React.ChangeEvent<HTMLSelectElement>) {\n        let contextId: string|null = event.target.value;\n\n        if (contextId === '') {\n            contextId = null;\n        }\n\n        target.contextId = contextId;\n        await db.contexts.save(target);\n        this.props.refreshData();\n    }\n\n    async setContextState(target: Context, event: React.ChangeEvent<HTMLSelectElement>) {\n        let contextState: ContextState = event.target.value as ContextState;\n\n        target.state = contextState;\n        await db.contexts.save(target);\n        this.props.refreshData();\n    }\n\n    render() {\n        let target = this.props.data.contexts.find(x => x.id === this.props.id);\n\n        if (!target) {\n            return <div>Context not found.</div>\n        }\n\n        let isDirty = false;\n\n        if (target.title !== this.state.title) {\n            isDirty = true;\n        }\n\n        return (\n            <>\n                <ToolSection>\n                    <NavLink to={`/contexts`} className=\"button\">Back</NavLink>\n                </ToolSection>\n\n                <ToolSection>\n                    <div>Context</div>\n                    <input type=\"text\" className=\"input is-large is-wide\" style={{border: isDirty ? '2px solid orange' : undefined}} value={this.state.title} onKeyDown={e => this.onKeyDown(e)} onChange={e => this.setState({ title: e.target.value })} />\n\n                    <div>Parent Context</div>\n                    <select className=\"input is-large\" value={target.contextId || ''} onChange={e => this.setContext(target!, e)}>\n                        <option value=\"\">Not set</option>\n                        {this.props.data.contexts.filter(c => c.id !== target!.id).map(c => (\n                            <option key={c.id} value={c.id}>{c.title}</option>\n                        ))}\n                    </select>\n\n                    <div>State</div>\n                    <select className=\"input is-large\" value={target.state || ContextState.Active} onChange={e => this.setContextState(target!, e)}>\n                        {Object.keys(ContextState).map(c => (\n                            <option key={c} value={c}>{c}</option>\n                        ))}\n                    </select>\n                </ToolSection>\n            </>\n        );\n    }\n}","import * as React from 'react';\nimport { Data } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport { syncer } from '../db/syncer';\nimport { Loader } from '../components/Loader';\n\ninterface DataPageProps {\n    data: Data;\n    refreshData(): void;\n}\n\nexport class DataPage extends React.Component<{ render: (props: DataPageProps)=>React.ReactNode }, { data: Data|null, error: string|null }> {\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            error: null,\n            data: null\n        };\n\n        this.refreshData = this.refreshData.bind(this);\n    }\n\n    async componentDidMount() {\n        syncer.registerDataListener(data => this.setState({ data }));\n        this.setState({ data: await syncer.getData() }, async () => {\n            await syncer.startServerSync();\n            await syncer.ensureServerSyncEnqueued();\n        });\n    }\n\n    async refreshData() {\n        this.setState({ data: await syncer.getData() });\n    }\n\n    render() {\n        if (this.state.error) {\n            return (\n                <>\n                    <div>{this.state.error}</div>\n                    <ToolSection>\n                        <div className=\"button\" onClick={() => this.refreshData()}>Retry</div>\n                        <div className=\"button\" onClick={() => window.location.reload()}>Reload</div>\n                        <div className=\"button\" onClick={() => window.location.reload(true)}>Force Reload</div>\n                        <a className=\"button\" href=\"/login\" >Login</a>\n                    </ToolSection>\n                </>\n            );\n        }      \n        \n        if (!this.state.data) {\n            return <Loader />;\n        }\n\n        return this.props.render({ data: this.state.data, refreshData: this.refreshData });\n    }\n}","import {createInstance} from 'localforage';\nimport * as md5 from 'js-md5';\n\nconst lifeKeyStore = createInstance({ name: 'lifekeystore' });\nconst privateKeyStore = createInstance({ name: 'privatekeystore' });\n\nexport interface LifeKey {\n    fingerprint: string;\n    publicKey: string;\n    createdAt: string;\n}\n\nconst rsaSettings = {\n    name: \"RSA-OAEP\",\n    modulusLength: 2048,\n    publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n    hash: {name: \"SHA-256\"},\n};\n\nconst aesSettings = { name: 'AES-GCM', length: 256 };\n\nexport async function generateRsaKey() {\n    try {\n        const keyPair = await crypto.subtle.generateKey(\n            rsaSettings,\n            true,\n            ['encrypt', 'decrypt']\n        );\n\n        const rawPrivateKey = await crypto.subtle.exportKey('pkcs8', keyPair.privateKey);\n        const privateKeyBase64 = arrayBufferToBase64(rawPrivateKey);\n\n        const rawPublicKey = await crypto.subtle.exportKey('spki', keyPair.publicKey);\n        const publicKeyBase64 = arrayBufferToBase64(rawPublicKey);\n        const publicKeyFingerprint = md5.hex(rawPublicKey);\n\n        return { fingerprint: publicKeyFingerprint, privateKey: privateKeyBase64, publicKey: publicKeyBase64 };\n    } catch (error) {\n        console.error('generateKey', error, error.message)\n        throw error;\n    }\n}\n\nexport async function derivePublicRsaKey(privateKey: CryptoKey) {\n    const jwk = await crypto.subtle.exportKey(\"jwk\", privateKey);\n\n    delete jwk.d;\n    delete jwk.dp;\n    delete jwk.dq;\n    delete jwk.q;\n    delete jwk.qi;\n    jwk.key_ops = [\"encrypt\", \"wrapKey\"];\n    \n    const publicKey = await crypto.subtle.importKey(\"jwk\", jwk, rsaSettings, true, [\"encrypt\", \"wrapKey\"]);\n    return publicKey;\n}\n\nexport async function importLifeKey(privateKeyBase64: string) {\n    const importedPrivateKey = base64ToArrayBuffer(privateKeyBase64);\n    const extractablePrivateKey = await crypto.subtle.importKey('pkcs8', importedPrivateKey, rsaSettings, true, ['decrypt', 'unwrapKey']);\n    \n    const publicKey = await derivePublicRsaKey(extractablePrivateKey);\n    const rawPublicKey = await crypto.subtle.exportKey('spki', publicKey);\n    const publicKeyBase64 = arrayBufferToBase64(rawPublicKey);\n    const publicKeyFingerprint = md5.hex(rawPublicKey);\n\n    const privateKey = await crypto.subtle.importKey('pkcs8', importedPrivateKey, rsaSettings, false, ['decrypt', 'unwrapKey']);\n    privateKeyStore.setItem(publicKeyFingerprint, privateKey);\n\n    const lifeKey: LifeKey = {\n        fingerprint: publicKeyFingerprint,\n        publicKey: publicKeyBase64,\n        createdAt: new Date().toISOString(),\n    };\n\n    lifeKeyStore.setItem(lifeKey.fingerprint, lifeKey);\n}\n\nexport async function encryptAndWrap(fingerprint: string, data: string) {\n    try {\n        const lifeKey = await lifeKeyStore.getItem(fingerprint) as LifeKey;\n        if (!lifeKey) {\n            throw new Error(`Key with fingerprint ${fingerprint} not found`);\n        }        \n        const importedPublicKeyBuffer = base64ToArrayBuffer(lifeKey.publicKey);\n        const publicKey = await crypto.subtle.importKey('spki', importedPublicKeyBuffer, rsaSettings, true, ['encrypt', 'wrapKey']);\n    \n        const aesKey = await generateAesKey();\n        const iv = crypto.getRandomValues(new Uint8Array(12));\n    \n        const encryptedData = await crypto.subtle.encrypt({ \n            name: 'AES-GCM', \n            length: 256,\n            iv\n        }, aesKey, strToArrayBuffer(data));\n    \n        const encryptedDataBase64 = arrayBufferToBase64(encryptedData);\n    \n        const wrappedAesKey = await crypto.subtle.wrapKey('raw', aesKey, publicKey, rsaSettings);\n        const wrappedAesKeyBase64 = arrayBufferToBase64(wrappedAesKey);\n    \n        const ivBase64 = arrayBufferToBase64(iv);\n    \n        const result = {\n            payload: encryptedDataBase64,\n            key: wrappedAesKeyBase64,\n            fingerprint: fingerprint,\n            iv: ivBase64\n        };\n    \n        return result;\n    } catch (error) {\n        console.error('encryptAndWrap', error, error.message)\n        throw error;\n    }\n}\n\nexport async function unwrapAndDecrypt(fingerprint: string, wrappedKeyBase64: string, dataBase64: string, ivBase64: string) {\n    try {\n        const privateKey = await privateKeyStore.getItem(fingerprint) as CryptoKey;\n        if (!privateKey) {\n            throw new Error(`Key with fingerprint ${fingerprint} not found`);\n        }\n\n        const aesKey = await crypto.subtle.unwrapKey('raw', base64ToArrayBuffer(wrappedKeyBase64), privateKey, rsaSettings, aesSettings, false, ['decrypt'])\n        const unencryptedDataBuffer = await crypto.subtle.decrypt({ \n            name: 'AES-GCM', \n            length: 256,\n            iv: base64ToArrayBuffer(ivBase64)\n        }, aesKey, base64ToArrayBuffer(dataBase64));\n        return arrayBufferToString(unencryptedDataBuffer);\n    } catch (error) {\n        console.error('unwrapAndDecrypt', error, error.message)\n        throw error;\n    }\n}\n\nexport async function generateAesKey(): Promise<any> {\n    try {\n        const key = await crypto.subtle.generateKey(aesSettings, true, ['encrypt', 'decrypt']);\n        return key;\n    } catch (error) {\n        console.error('generateKey', error, error.message)\n        throw error;\n    }\n}\n\nexport async function getCurrentKey() {\n    const keys = await lifeKeyStore.keys();\n\n    if (keys.length === 0) {\n        throw new Error('No key found');\n    }\n\n    if (keys.length > 1) {\n        throw new Error('More than 1 key found!');\n    }\n\n    return (await lifeKeyStore.getItem(keys[0])) as LifeKey;\n}\n\n\nfunction arrayBufferToBase64( buffer: ArrayBuffer ) {\n    var binary = '';\n    var bytes = new Uint8Array(buffer);\n    var len = bytes.byteLength;\n    for (var i = 0; i < len; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa( binary );\n}\n\nfunction base64ToArrayBuffer(base64: string) {\n    var binary_string =  window.atob(base64);\n    var len = binary_string.length;\n    var bytes = new Uint8Array(len);\n    for (var i = 0; i < len; i++)        {\n        bytes[i] = binary_string.charCodeAt(i);\n    }\n    return bytes.buffer;\n}\n\n// function webSafe64(base64: string) {\n//     return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n// }\n\n// // Convert from web-safe to normal, add trailing \"=\"s\n// function normal64(base64: string) {\n//     return base64.replace(/\\-/g, '+').replace(/_/g, '/') + '=='.substring(0, (3*base64.length)%4);\n// }\n\nfunction strToArrayBuffer(str: string) {\n    var buf = new ArrayBuffer(str.length * 2);\n    var bufView = new Uint16Array(buf);\n    for (var i = 0, strLen = str.length; i < strLen; i++) {\n      bufView[i] = str.charCodeAt(i);\n    }\n    return buf;\n}\n\nfunction arrayBufferToString(buf: ArrayBuffer) {\n    return String.fromCharCode.apply(null, new Uint16Array(buf) as any);\n}","import * as React from 'react';\nimport { ToolSection } from '../framework/ToolSection';\nimport { db } from '../db/db';\nimport { getCurrentKey, generateRsaKey, importLifeKey, LifeKey } from '../db/crypt';\nimport * as dropboxApi from '../lib/dropboxApi';\nimport { setTheme, getVariable } from '../layout/theme';\nimport { getNoteTitle, getNoteTitleType, Note } from '../db/note';\nimport { Node } from '../components/TreeEditor'\nimport {createInstance} from 'localforage';\nimport moment from 'moment';\nimport { getAlias, mentionRegex } from '../db/person';\n\nconst fileSystemInstance = createInstance({ name: 'filesystem' });\nlet dirHandle: FileSystemDirectoryHandle|null = null;\nlet perms: boolean|null = null;\n\nfileSystemInstance.getItem('directory').then(async h => {\n    dirHandle = h as FileSystemDirectoryHandle;\n    if (!dirHandle) {\n        return;\n    }\n    perms = await permissionStatus(dirHandle, true);\n});\n\nasync function permissionStatus(fileHandle: FileSystemDirectoryHandle, readWrite: boolean) {\n    const options: FileSystemHandlePermissionDescriptor = {};\n    if (readWrite) {\n        options.mode = 'readwrite';\n    }\n    // Check if permission was already granted. If so, return true.\n    if ((await fileHandle.queryPermission(options)) === 'granted') {\n        return true;\n    }\n    // The user didn't grant permission, so return false.\n    return false;\n}\n\nexport const SettingsPage: React.FC<{}> = () => {\n    // const [pushSubscribed, setPushSubscribed] = React.useState<boolean|null>(null);\n    const [currentKey, setCurrentKey] = React.useState<LifeKey|null>(null);\n\n    const [serviceWorkerState, setServiceWorkerState] = React.useState('none');\n    const [generatedKey, setGeneratedKey] = React.useState<string|null>(null);\n    const [privateKey, setPrivateKey] = React.useState<string|null>(null);\n\n    async function clearEntities() {\n        if(!window.confirm('Clear all local data?')) {\n            return;\n        }\n\n        db.contexts.dropInstance();\n        db.tasks.dropInstance();\n        db.notes.dropInstance();\n        db.projects.dropInstance();\n        db.people.dropInstance();\n    }\n\n    const [dropboxConnected, setDropboxConnected] = React.useState<boolean|null>(null);\n    React.useEffect(() => {\n        dropboxApi.isSignedIn().then(status => {\n            setDropboxConnected(status);\n        });\n    }, [])\n\n    React.useEffect(() => {\n        async function componentDidMount() {\n            if(navigator.serviceWorker) {\n                const registration = await navigator.serviceWorker.ready;\n                const state = [registration.active ? 'active' : null, registration.waiting ? 'waiting' : null, registration.installing ? 'installing' : null];\n                setServiceWorkerState(state.filter(x => x != null).join(', '))\n            }\n    \n            await refreshKeys();\n        }\n        componentDidMount() \n    }, [])\n\n    async function refreshKeys() {\n        try {\n            const newCurrentKey = await getCurrentKey();\n            setCurrentKey(newCurrentKey)\n        } catch(err) {\n        }\n    }\n\n    function clearServiceWorker() {\n        if (!navigator.serviceWorker) {\n            return;\n        }\n        \n        navigator.serviceWorker.ready.then(async (registration) => {\n            await registration.update();\n        });\n    }\n\n\n    function writeNode(node: Node, output: string, indent = ''): string {\n        output += `${indent}- ${node.text}\\n`;\n\n        if (node.nodes) {\n            for(const childNode of node.nodes) {\n                output = writeNode(childNode, output, indent + '\\t');\n            }\n        }\n\n        return output;\n    }\n\n    async function formatContent(note: Note) {\n        const people = await db.people.getAll();\n\n\n        if(note.mode === 'tree' && note.content) {\n            const nodes = JSON.parse(note.content) as Node[];\n            let content = '';\n\n            for(const node of nodes) {\n                content = writeNode(node, content);\n            }\n\n            content = content.replace(mentionRegex, (_, group1) => {\n                const person = people.find(x => `@${getAlias(x)}` === group1);\n\n                if(person) {\n                    return `[[${person.name}]]`;\n                }\n\n                return `[[Missing Person]]: ${group1}`;\n            });\n\n            return content;\n        }\n\n        return note.content;\n    }\n    \n    async function exportToObsidian() {\n        if (!dirHandle) {\n            dirHandle = await window.showDirectoryPicker();\n            fileSystemInstance.setItem('directory', dirHandle);\n        }\n\n        if(!await verifyPermission(dirHandle, true)) {\n            perms = false;\n            console.error('permission denied');\n        }\n        perms = true;\n        \n        const vaultHandle = await dirHandle.getDirectoryHandle(\"dump-test\", { create: true });\n\n        for(const note of await db.notes.getAll()) {\n            if(note.noteFor) {\n                continue;\n            }\n\n            const title = getNoteTitle(note);\n            let fileName = `${title}.md`;\n            let dir = vaultHandle;\n\n            if (note.contextId) {\n                const context = await db.contexts.get(note.contextId);\n                if (context) {\n                    // metadata.push(`context: ${context.title}`);\n                    dir = await dir.getDirectoryHandle(context.title, { create: true });\n                }\n            }\n\n            if(note.dailyDate) {\n                dir = await dir.getDirectoryHandle('Daily', { create: true });\n                fileName = `${moment(note.dailyDate).format('YYYY-MM-DD')}.md`;\n            }\n\n            console.log('writing ', fileName);\n            const file = await dir.getFileHandle(fileName, { create: true });\n            const writable = await file.createWritable({ keepExistingData: false });\n\n            const metadata: string[] = [\n            //     `id: ${note.id}`,\n            //     `updated: ${note.updatedAt}`,\n            //     `created: ${note.createdAt}`\n            ];\n\n            // if(note.mode) {\n            //     metadata.push(`mode: ${note.mode}`);\n            // }\n\n            if (getNoteTitleType(note) === 'title') {\n                metadata.push(`# ${note.title}`);\n            }\n\n            if (note.tags && note.tags.length) {\n                metadata.push(`tags: ${note.tags.split(' ').map(t => `#${t}`).join(', ')}`);\n            }\n\n            if (metadata.length) {\n                metadata.push('');\n            }\n\n            await writable.write(\n`${metadata.join('\\n')}\n${await formatContent(note)}`);\n\n            await writable.close();\n        }\n\n        const peopleHandle = await vaultHandle.getDirectoryHandle(\"People\", { create: true });\n\n        for(const person of await db.people.getAll()) {\n            let fileName = `${person.name}.md`;\n\n            console.log('writing ', fileName);\n            const file = await peopleHandle.getFileHandle(fileName, { create: true });\n            const writable = await file.createWritable({ keepExistingData: false });\n\n            const metadata: string[] = [];\n\n            if (person.birthday) {\n                metadata.push(`birthday: ${moment(person.birthday).format(`YYYY-MM-DD`)}`);\n            }\n\n            if (metadata.length) {\n                metadata.push('');\n            }\n\n            if (person.noteId) {\n                const note = await db.notes.get(person.noteId);\n                if(note) {\n                    metadata.push(await formatContent(note))\n                }\n            }\n\n            await writable.write(metadata.join('\\n'));\n            await writable.close();\n        }\n    }\n\n    async function verifyPermission(fileHandle: FileSystemDirectoryHandle, readWrite: boolean) {\n        const options: FileSystemHandlePermissionDescriptor = {};\n        if (readWrite) {\n            options.mode = 'readwrite';\n        }\n        // Check if permission was already granted. If so, return true.\n        if ((await fileHandle.queryPermission(options)) === 'granted') {\n            return true;\n        }\n\n        // Request permission. If the user grants permission, return true.\n        if ((await fileHandle.requestPermission(options)) === 'granted') {\n            return true;\n        }\n        // The user didn't grant permission, so return false.\n        return false;\n    }\n\n    return (\n        <>\n            <ToolSection>\n                <div className=\"button\" onClick={() => setTheme('dark-theme')}>Dark theme</div>\n                <div className=\"button\" onClick={() => setTheme('light-theme')}>Light theme</div>\n            </ToolSection>\n\n            <ToolSection>\n                <div className=\"button\" onClick={() => window.location.reload()}>Reload</div>\n                <div className=\"button\" onClick={() => window.location.reload(true)}>Force Reload</div>\n            </ToolSection>\n            <ToolSection>\n                <div className=\"button\" onClick={exportToObsidian}>Export to Obsidian</div>\n                {dirHandle && \n                    <div style={{display: 'inline-block', background: getVariable('--settings-info-background'), padding: '.5rem'}}>{dirHandle.name} - Access Status: {perms ? 'granted' : 'not granted'}</div>\n                }\n            </ToolSection>\n            <ToolSection>\n                {dropboxConnected ? (\n                    <>\n                        <div className=\"button\" onClick={async () => { await dropboxApi.disconnect(); }}>Disconnect Dropbox</div>\n                        <div className=\"button\" onClick={async () => { await dropboxApi.refreshDropbox(); }}>Refresh Dropbox</div>\n                    </>\n                ) : (\n                    <div className=\"button\" onClick={async () => { await dropboxApi.signIn(); setDropboxConnected(await dropboxApi.isSignedIn()) }}>Connect Dropbox</div>\n                )}\n                <div style={{display: 'inline-block', background: getVariable('--settings-info-background'), padding: '.5rem'}}>Status: {dropboxConnected === null ? 'unknown' : dropboxConnected ? 'connected' : 'not connected'}</div>\n                {dropboxApi.isLocalMode && <div style={{display: 'inline-block', background: getVariable('--settings-info-background'), padding: '.5rem'}}>Local [ {window.location.host} ]</div>}\n                \n            </ToolSection>\n            <ToolSection>\n                <div className=\"button\" onClick={async () => await clearEntities()}>Clear Entities</div>\n                <div className=\"button\" onClick={() => clearServiceWorker()}>Update Service Worker</div>\n                <div style={{display: 'inline-block', background: getVariable('--settings-info-background'), padding: '.5rem'}}>Service Workers [ {serviceWorkerState} ]</div>\n            </ToolSection>\n            {/* <ToolSection>\n                {pushSubscribed === true && <div className=\"button\" onClick={async () => await unsubscribePush()}>Unsubscribe Push</div>}\n                {pushSubscribed === false && <div className=\"button\" onClick={async () => await subscribePush()}>Subscribe Push</div>}\n            </ToolSection> */}\n            {false && <ToolSection>\n                <h2>Encryption</h2>\n                {!currentKey && (\n                    <>\n                        <div>\n                            <textarea style={{width: '100%'}} onChange={e => setPrivateKey(e.target.value)} />\n                        </div>\n                        <button className=\"button\" onClick={async () => { await importLifeKey(privateKey!); await refreshKeys(); }}>Set private key</button>\n                        <h4>Generate key</h4>\n                        <div className=\"button\" onClick={async () => setGeneratedKey((await generateRsaKey()).privateKey)}>Generate</div>\n                        <textarea style={{width: '100%', background: '#555', color: '#ddd'}} readOnly value={generatedKey || ''} />\n                    </>\n                )}\n                <h4>Keys</h4>\n                <div className=\"list\">\n                    {!currentKey && <div>No keys</div>}\n                    {currentKey && (\n                        <div className=\"item\">\n                            {currentKey!.fingerprint}\n                        </div>\n                    )}\n                </div>\n            </ToolSection>}\n        </>\n    );\n}","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as styles from '../../layout/styles';\nimport { useData } from '../../model';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { Person } from '../../db/person';\nimport { cx } from 'emotion';\n\nexport const PeoplePage: React.FC<{}> = props => {\n    const {data} = useData();\n\n    const renderTarget = (target: Person) => {\n        return (\n            <NavLink key={target.id} to={`/people/${target.id}`} className={cx('item', styles.hoverGlow)}>\n                <div>\n                    {target.name}\n                </div>\n            </NavLink>\n        );\n    };\n\n    return (\n        <>\n            <ToolSection>\n                <NavLink to={`/people/new`} className=\"button\">New Person</NavLink>\n            </ToolSection>\n\n            <div className=\"list\">\n                {data.people.sort((a, b) => a.name.localeCompare(b.name)).map(t => renderTarget(t))}\n            </div>\n        </>\n    );\n};\n","import * as React from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { db } from '../../db/db';\nimport { useState } from 'react';\nimport { EmbeddedNoteEdit } from '../../components/EmbeddedNote';\nimport { useData } from '../../model';\n\nconst useForm = <T extends {}>(initialState: ()=>T) => {\n    const [values, setValues] = useState<T>(initialState);\n    \n    const handleChange = (event: any) => {\n        event.persist();\n        setValues((values) => ({ ...values, [event.target.name]: event.target.value }));\n    };\n\n    return {\n        values,\n        handleChange\n    };\n};\n\nexport const EditPersonPage: React.FC<{id?: string }> = (props) => {\n    const {data} = useData();\n    const [goBack, setGoBack] = useState<string|null>(null);\n\n    const {values, handleChange} = useForm(() => {\n        const person = props.id ? data.people.find(x => x.id === props.id) : null;\n        return {\n            name:  person ? person.name : '',\n            alias: person ? person.alias : '',\n            birthday: person ? person.birthday : null\n        }\n    });\n\n    const onSave = async () => {\n        const id = props.id || null;\n\n        if (id) {\n            let person = await db.people.get(id)!;\n\n            if (person === null) {\n                throw new Error('Person is null?');\n            }\n\n            person.name = values.name;\n            person.alias = (values.alias?.length && values.alias) || null;\n            person.birthday = values.birthday;\n\n            await db.people.save(person);\n            setGoBack(person.id);\n        } else {\n            const person = await db.people.create({\n                name: values.name,\n                alias: (values.alias?.length && values.alias) || null,\n                birthday: values.birthday,\n                noteId: null,\n            });\n\n            setGoBack(person.id);\n        }\n    };\n\n    const person = props.id ? data.people.find(x => x.id === props.id) || null : null;\n\n    return (\n        <>\n            {goBack && <Redirect to={`/people/${goBack}`} />}\n            <div style={{height: '100%', display: 'flex', flexDirection: 'column'}} >\n                <ToolSection>\n                    <NavLink to={`/people`} className=\"button\">Back</NavLink>\n                    {props.id && <NavLink to={`/people/${props.id}`} className=\"button\">Show</NavLink>}\n                </ToolSection>\n                <ToolSection>\n                    {props.id === undefined ?\n                            <button type=\"button\" className=\"button is-primary\" onClick={onSave}>Add person</button> :\n                            <button type=\"button\" className=\"button is-primary\" onClick={onSave}>Update person</button>}\n                </ToolSection>\n                <ToolSection>\n                    <div>Name</div>\n                    <input type=\"text\" name=\"name\" className=\"input is-large is-wide\" value={values.name} onChange={handleChange} />\n                    <div>Alias</div>\n                    <input type=\"text\" name=\"alias\" className=\"input is-large is-wide\" value={values.alias || ''} onChange={handleChange} />\n                    <div>Birthday</div>\n                    <input type=\"date\" name=\"birthday\" className=\"input is-large\" value={values.birthday || ''} onChange={handleChange} />\n                </ToolSection>\n                <ToolSection>\n                    <EmbeddedNoteEdit targetEntity={person} />\n                </ToolSection>\n            </div>\n        </>\n    );\n};","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useData } from '../../model';\nimport { ToolSection } from '../../framework/ToolSection';\nimport moment from 'moment';\nimport { EmbeddedNoteShow } from '../../components/EmbeddedNote';\nimport { getAlias } from '../../db/person';\nimport { PersonReferenceViewer } from '../../components/ReferenceViewer';\n\nexport const ShowPersonPage: React.FC<{id: string}> = (props) => {\n    const {data} = useData();\n    const person = data.people.find(x => x.id === props.id);\n\n    if (!person) {\n        return <div>Person not found.</div>\n    }\n\n    return (\n        <>\n            <ToolSection>\n                <NavLink to={`/people`} className=\"button\">Back</NavLink>\n                <NavLink to={`/people/${person.id}/edit`} className=\"button\">Edit</NavLink>\n            </ToolSection>\n            <div className=\"panel\">\n                <div className=\"content\" style={{padding: '1rem'}}>\n                    <h1>{person.name} (@{getAlias(person)})</h1>\n                    {person.birthday && <div>Birthday: {moment(person.birthday).format('YYYY-MM-DD')}</div>}\n                    <EmbeddedNoteShow targetEntity={person} {...props} />\n                    <PersonReferenceViewer alias={getAlias(person)} />\n                </div>\n            </div>\n        </>\n    );\n}; ","import * as React from 'react';\nimport { ToolSection } from '../framework/ToolSection';\nimport { db } from '../db/db';\nimport { useData } from '../model';\n\nexport const StatsPage: React.SFC<{}> = (props) => {\n    const {data} = useData();\n    const [noteTotalCount, setNoteTotalCount] = React.useState<number|null>(null);\n    const [taskTotalCount, setTaskTotalCount] = React.useState<number|null>(null);\n    const [peopleTotalCount, setPeopleTotalCount] = React.useState<number|null>(null);\n    const [projectTotalCount, setProjectTotalCount] = React.useState<number|null>(null);\n    const [contextTotalCount, setContextTotalCount] = React.useState<number|null>(null);\n    \n    React.useEffect(() => {\n        db.notes.getSyncKeys().then(c => setNoteTotalCount(c.length));\n        db.tasks.getSyncKeys().then(c => setTaskTotalCount(c.length));\n        db.people.getSyncKeys().then(c => setPeopleTotalCount(c.length));\n        db.projects.getSyncKeys().then(c => setProjectTotalCount(c.length));\n        db.contexts.getSyncKeys().then(c => setContextTotalCount(c.length));\n    });\n\n    return (\n        <>\n            <ToolSection>\n            </ToolSection>\n            <div className=\"panel\">\n                <div className=\"content\" style={{padding: '1rem'}}>\n                    <h1>Stats</h1>\n                    <ul>\n                        <li>Notes: {data.notes.length}, versions: {noteTotalCount ? noteTotalCount : '...'}</li>\n                        <li>Tasks: {data.tasks.length}, versions: {taskTotalCount ? taskTotalCount : '...'}</li>\n                        <li>People: {data.people.length}, versions: {peopleTotalCount ? peopleTotalCount : '...'}</li>\n                        <li>Projects: {data.projects.length}, versions: {projectTotalCount ? projectTotalCount : '...'}</li>\n                        <li>Contexts: {data.contexts.length}, versions: {contextTotalCount ? contextTotalCount : '...'}</li>\n                    </ul>\n                </div>\n            </div>\n        </>\n    );\n}","import * as React from 'react';\nimport { ContextBar } from '../../components/ContextBar';\nimport { useQueryState } from '../../lib/UseQueryState';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { useData } from '../../model';\nimport moment from 'moment';\nimport { getNoteTitle, Note } from '../../db/note';\nimport { ContextTag } from '../../components/ContextTag';\nimport { MarkedViewer } from '../../components/MarkedViewer';\nimport _ from 'lodash';\nimport * as ContextActions from '../../lib/contextActions';\nimport { TreeViewer } from '../../components/TreeViewer';\nimport { NavLink } from 'react-router-dom';\nimport { horizontalSpace } from '../../layout/styles';\n\nexport const DailyNotePage: React.SFC<{ }> = (props) => {\n    const [contextId, setContextId] = useQueryState(null, 'context');\n    const {data} = useData();\n\n    const oneMonthAgo = moment().add(-30,'d');\n    \n    const filteredContexts = ContextActions.getFilteredContextIds(contextId, data);\n    const dailyNotes = _.orderBy(data.notes.filter(x => x.dailyDate && moment(x.dailyDate) > oneMonthAgo && (!contextId || filteredContexts.indexOf(x.contextId!) !== -1)), n => n.dailyDate,  'desc');\n\n    function renderViewer(note: Note) {\n        if (!note.mode || note.mode === 'markdown') {\n            return <MarkedViewer markdown={note.content} contextId={note.contextId} />;\n        } \n          \n        return <TreeViewer json={note.content} contextId={note.contextId} />;\n    }\n\n    const contextCounts = _.countBy(data.notes.filter(n => n.dailyDate), x  => x.contextId);\n    const contexts = _.orderBy(Object.keys(contextCounts).map(k => ({ contextId: k, count: contextCounts[k], context: data.contexts.find(x => x.id === k) })), x => x.count, 'desc');\n\n    const urlParams = new URLSearchParams(window.location.search);\n    const source = `?source=${encodeURIComponent(`${window.location.pathname}?${urlParams.toString()}`)}`\n\n    return (\n        <div style={{display: 'flex', height: '100%'}}>\n            <ContextBar contextId={contextId} onChange={setContextId} />\n            <div style={{width: '100%'}}>\n                <ToolSection>\n                    {contexts.map(c => (\n                        <NavLink key={c.contextId} to={`/notes/new?context=${c.contextId}&daily`} className=\"button\">New Note{c.context ? ` - ${c.context.title}` : ''}</NavLink>\n                    ))}\n                </ToolSection>\n                <div className=\"panel\">\n                    {dailyNotes.map(n => (\n                        <div key={n.id} className=\"content\" style={{padding: '1rem'}}>\n                            <h1>{getNoteTitle(n)}</h1>\n                            <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                                <div className={horizontalSpace('8px')}>\n                                    <a className=\"button small\" href={`/notes/${n.id}${source}`}>Show</a>\n                                    <a className=\"button small\" href={`/notes/${n.id}/edit${source}`}>Edit</a>\n                                </div>\n                                <ContextTag contextId={n.contextId} />\n                            </div>\n                            {renderViewer(n)}\n                        </div>))}\n                </div>\n            </div>\n        </div>\n    )\n};\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Layout } from './components/Layout';\nimport { TaskPage } from './pages/TaskPage';\nimport { EditNotePage } from './pages/notes/EditNotePage';\nimport { ShowNotePage, ShowVirtualNotePage } from './pages/notes/ShowNotePage';\nimport { NotePage } from './pages/notes/NotePage';\nimport { PlaygroundPage } from './pages/PlaygroundPage';\nimport { ContextPage } from './pages/ContextPage';\nimport { ProjectPage } from './pages/ProjectPage';\nimport { ShowTaskPage } from './pages/ShowTaskPage';\nimport { ShowProjectPage } from './pages/ShowProjectPage';\nimport { ShowContextPage } from './pages/ShowContextPage';\nimport { DataPage } from './pages/DataPage';\nimport { SyncPage } from './pages/SyncPage';\nimport { SettingsPage } from './pages/SettingsPage';\nimport { PeoplePage } from './pages/people/PeoplePage';\nimport { EditPersonPage } from './pages/people/EditPersonPage';\nimport { ShowPersonPage } from './pages/people/ShowPersonPage';\nimport { StatsPage } from './pages/StatsPage';\nimport {DataProvider} from './model';\nimport { DailyNotePage } from './pages/notes/DailyNotes';\nimport './theme.scss';\n\nexport const routes = <Layout>\n    <DataProvider>\n        <Switch>\n            <Route exact path='/' render={routeProps => <NotePage />} />\n            <Route exact path='/notes/new' render={routeProps => <EditNotePage />} />\n            <Route exact path='/notes/daily' render={routeProps => <DailyNotePage />} />\n            <Route exact path='/notes/virtual' render={routeProps => <ShowVirtualNotePage />} />\n            <Route exact path='/notes/:id' render={routeProps => <ShowNotePage id={routeProps.match.params.id} />} />\n            <Route exact path='/notes/:id/edit' render={routeProps => <EditNotePage id={routeProps.match.params.id} />} />\n            <Route exact path='/tasks' render={routeProps => <TaskPage />} />\n            <Route exact path='/tasks/:id' render={routeProps => <DataPage render={(props) => <ShowTaskPage {...props} id={routeProps.match.params.id} />} />} />\n            <Route exact path='/contexts' render={routeProps => <ContextPage />} />\n            <Route exact path='/contexts/:id' render={routeProps => <DataPage render={(props) => <ShowContextPage {...props} id={routeProps.match.params.id} />} />} />\n            <Route exact path='/projects' render={routeProps => <DataPage render={(props) => <ProjectPage {...props} />} />} />\n            <Route exact path='/projects/:id' render={routeProps => <DataPage render={(props) => <ShowProjectPage {...props} id={routeProps.match.params.id} />} />} />\n            <Route exact path='/people' render={routeProps => <PeoplePage />} />} />\n            <Route exact path='/people/new' render={routeProps => <EditPersonPage />} />\n            <Route exact path='/people/:id' render={routeProps => <ShowPersonPage id={routeProps.match.params.id} />} />\n            <Route exact path='/people/:id/edit' render={routeProps => <EditPersonPage id={routeProps.match.params.id} />} />\n            <Route path='/playground' component={PlaygroundPage} />\n            <Route path='/sync' component={SyncPage} />\n            <Route path='/stats' render={routeProps => <StatsPage />} />\n            <Route path='/settings' component={SettingsPage} />\n        </Switch>\n    </DataProvider>\n</Layout>;\n","import React from 'react';\nimport { ToolSection } from '../framework/ToolSection';\nimport { syncer, SyncStatus } from '../db/syncer';\nimport moment from 'moment';\n\nexport const SyncPage: React.FC<{}> = props => {\n    const [count, setCount] = React.useState(0);\n\n    React.useEffect(() => {\n        syncer.registerSyncListener(() => {\n            setCount(c => c + 1);\n        });\n    }, []);\n   \n    return (\n        <>\n            <React.Fragment key={count}></React.Fragment>\n            <ToolSection>\n                <div>Status: {SyncStatus[syncer.status]}</div>\n                <div className=\"button\" onClick={() => syncer.startServerSync()}>Sync Now</div>\n            </ToolSection>\n            <div className=\"list\">\n                {syncer.getResults().slice(0).reverse().map((result, i) =>\n                    <React.Fragment key={i}>\n                        <div className=\"item\">{result.type} - {result.endAt.getTime() - result.startAt.getTime()} ms - start: {moment(result.startAt).format('HH:mm:ss')}, end: {moment(result.endAt).format('HH:mm:ss')}, fetch: {result.fetch}, send: {result.send}{result.error ? `, error: ${result.error}` : null}</div>\n                    </React.Fragment>)}\n            </div>\n        </>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { Router } from 'react-router-dom';\nimport { routes } from './routes';\nimport {createBrowserHistory} from 'history';\nimport 'whatwg-fetch';\n\nexport const history = createBrowserHistory()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router children={routes} history={history} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();"],"sourceRoot":""}