{"version":3,"sources":["components/Layout.scss","serviceWorker.ts","components/ServiceWorkerInstall.tsx","layout/styles.ts","db/crypt.ts","db/EventListener.ts","db/db.ts","components/Loader.tsx","model.tsx","lib/dropboxApi.ts","db/syncer.ts","components/Layout.tsx","db/project.ts","framework/ToolSection.tsx","lib/contextActions.ts","db/context.ts","lib/UseQueryState.ts","components/SettingsCompactor.tsx","components/ContextTag.tsx","components/ContextBar.tsx","pages/TaskPage.tsx","draftStorage.ts","components/TagInput.tsx","db/note.ts","db/person.ts","components/MarkedViewer.tsx","components/SimpleSplitEditor.tsx","components/TreeEditor.tsx","components/ContextSelector.tsx","components/NoteEditor.tsx","pages/notes/EditNotePage.tsx","components/TreeViewer.tsx","components/ReferenceViewer.tsx","pages/notes/ShowNotePage.tsx","framework/List.tsx","pages/notes/NotePage.tsx","pages/ContextPage.tsx","pages/ProjectPage.tsx","components/EmbeddedNote.tsx","pages/ShowTaskPage.tsx","pages/ShowProjectPage.tsx","pages/ShowContextPage.tsx","pages/DataPage.tsx","pages/people/PeoplePage.tsx","pages/people/EditPersonPage.tsx","pages/people/ShowPersonPage.tsx","pages/StatsPage.tsx","pages/notes/DailyNotes.tsx","routes.tsx","pages/PlaygroundPage.tsx","pages/SyncPage.tsx","pages/SettingsPage.tsx","index.tsx"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ServiceWorkerInstall","props","installEvent","addEventListener","e","preventDefault","setState","this","prompt","userChoice","choiceResult","outcome","className","onClick","onInstallClick","React","hoverGlow","css","background","cursorPointer","cursor","display","alignItems","horizontalSpace","width","around","paddingLeft","undefined","paddingRight","marginLeft","marginRight","verticalSpace","height","paddingTop","paddingBottom","marginBottom","lifeKeyStore","createInstance","name","privateKeyStore","rsaSettings","modulusLength","publicExponent","Uint8Array","hash","aesSettings","length","generateRsaKey","a","crypto","subtle","generateKey","keyPair","exportKey","privateKey","rawPrivateKey","privateKeyBase64","arrayBufferToBase64","publicKey","rawPublicKey","publicKeyBase64","publicKeyFingerprint","md5","fingerprint","message","derivePublicRsaKey","jwk","d","dp","dq","q","qi","key_ops","importKey","importLifeKey","importedPrivateKey","base64ToArrayBuffer","extractablePrivateKey","setItem","lifeKey","createdAt","Date","toISOString","encryptAndWrap","data","getItem","Error","importedPublicKeyBuffer","generateAesKey","aesKey","iv","getRandomValues","encrypt","strToArrayBuffer","encryptedData","encryptedDataBase64","wrapKey","wrappedAesKey","wrappedAesKeyBase64","ivBase64","result","payload","key","unwrapAndDecrypt","wrappedKeyBase64","dataBase64","unwrapKey","decrypt","unencryptedDataBuffer","arrayBufferToString","getCurrentKey","keys","buffer","binary","bytes","len","byteLength","i","String","fromCharCode","btoa","base64","binary_string","atob","charCodeAt","str","buf","ArrayBuffer","bufView","Uint16Array","strLen","apply","EventListener","listeners","listener","push","filter","x","arg","LocalForageStore","type","store","changeListener","entityProps","now","entity","id","uuid","versionId","parentVersionIds","updatedAt","getKey","trigger","parentVersionId1","getLeafNodes","leafNodes","warn","map","node","_","getKeysPrefixed","prefix","k","startsWith","split","objs","parts","parentVersionId2","groups","o","leafNodeArrays","Object","group","parents","leafObjs","dropInstance","join","replace","c","r","Math","random","toString","contexts","tasks","notes","projects","people","getSyncKeys","getBySyncKey","syncKey","get","entities","import","serverEntities","serverEntity","encryption","JSON","parse","unencryptedData","syncKeys","entityData","stringify","encryptionResult","encryptionJson","db","importEntites","importServerEntites","exportServerEntities","Loader","style","justifyContent","border","padding","Data","DataContext","createContext","refreshData","DataProvider","useState","setData","useEffect","syncer","registerDataListener","getData","startServerSync","ensureServerSyncEnqueued","init","value","useCallback","Provider","children","useData","useContext","isLocalMode","host","clientId","signIn","dropbox","Dropbox","fetch","assign","getAuthenticationUrl","isSignedIn","getStateSnapshot","snapshot","files","Set","setStateSnapshot","removeItem","listFiles","useSnapshot","getAccessToken","accessToken","hasMore","filesListFolderContinue","fileListResult","results","entries","path_lower","substring","p","file","add","has_more","filesListFolder","path","recursive","getAccessTokenFromUrl","ret","trim","forEach","param","shift","val","decodeURIComponent","retVal","Array","isArray","parseAuthFromHash","access_token","uploadFile","contents","filesUpload","getFile","filesDownload","response","Promise","resolve","blob","fileBlob","reader","FileReader","json","readAsText","tryStoreAccessKey","SyncStatus","status","Idle","intervalHandle","syncListener","dataListener","note","concat","task","context","project","person","loadData","setInterval","difference","setA","setB","_difference","delete","Syncing","dropboxApi","startAt","toSend","toFetch","limit","pLimit","promises","all","endAt","size","send","Failed","getAll","orderBy","isMobile","matchMedia","matches","ProjectState","Layout","sidebar","setSidebar","count","setCount","onNavClick","registerSyncListener","overflow","cx","styles","to","exact","activeClassName","overflowY","overflowX","ToolSection","verticalAround","getNestedContexts","grouped","contextId","taskCounts","topContexts","nestedContexts","getFilteredContextIds","contextIds","queue","next","pop","nested","ContextState","useQueryState","initialValue","queryParam","URLSearchParams","search","rawValue","setRawValue","urlParams","set","queryString","history","replaceState","pathname","dispatchEvent","CustomEvent","useQueryStateT","convertTo","convertFrom","strValue","SettingsCompactor","expanded","setExpanded","alwaysVisible","wideStyle","mobileOnly","flexDirection","ContextTag","find","title","ContextBar","ContextActions","borderRight","onChange","renderListContext","depth","Inactive","showTaskCount","color","perspectives","groupedProject","groupedContext","defaultPerspective","TaskPage","text","setText","showCompleted","showDeferred","showIncubated","showContextBar","includeNested","options","setOptions","setContextId","projectId","setProjectId","perspectiveId","setPerspectiveId","onKeyPress","create","content","stateChangedAt","noteId","onCompleteChange","save","renderProject","renderDeferred","deferredUntil","moment","format","fromNow","renderNote","renderTitle","pattern","href","stopPropagation","target","rel","filterTasks","complete","t","incubatedProjectIds","Incubated","indexOf","sort","b","renderTask","skipProjectContext","source","encodeURIComponent","checked","textDecoration","perspective","taskBlock","filteredContextIds","stateOrder","Active","Completed","Dropped","emptyActiveProjects","filteredProjects","projectTasks","noProjectTasks","htmlFor","placeholder","draftStore","getDraftKey","getDraft","clearDraft","TagInput","focus","setFocus","timeoutId","tagInput","onFocus","clearTimeout","current","onBlur","setTimeout","tagState","selectedTags","ref","withText","onTextChange","onKeyDown","decrementIndex","incrementIndex","addSelectedTag","addText","reopenLastTag","getFilteredAvailableTags","slice","index","tag","addTag","TagState","availableTags","max","min","lastTag","toLowerCase","Tag","TagList","tags","getNoteTitle","dailyDate","parsedTitle","exec","noteReferenceRegex","escapeRegExp","getNoteReferenceMatchRegExp","reference","RegExp","getNoteAliasReferenceMatchRegExp","alias","extractReferences","matchAll","extractAllReferences","existing","n","references","has","existingResult","values","mentionRegex","getAlias","SplitMode","MarkedViewer","useHistory","lifeNavigate","url","markdown","group1","matchContextId","matchTitle","prefixContext","contextTitle","test","referenceRegExp","html","marked","dangerouslySetInnerHTML","__html","NoteModeSelector","mode","onModeChange","SplitModeSelector","Split","Editor","Preview","SimpleSplitEditor","expand","zIndex","maxHeight","components","textAreaStyle","flexGrow","minWidth","borderTop","markedStyle","fontSize","onTextChanged","theme","showGutter","showPrintMargin","wrapEnabled","enableBasicAutocompletion","snippetCompleter","textCompleter","keyWordCompleter","enableLiveAutocompletion","enableSnippets","TreeEditor","invalid","nodes","setNodes","inputRef","useRef","active","setActive","noteTitles","setNoteTitles","noteCompletions","flat","peopleAliases","setPeopleAliases","aliases","onInputChanged","getParentNode","targetNode","searchNodes","parentNode","childResult","preorderTraversal","stack","reverse","childNode","removeNodeIfEmpty","nodeIndex","findIndex","splice","removeNode","indentNode","unindentNode","parentParentNode","targetNodes","parentNodeIndex","commands","bindKey","win","mac","above","editor","getCursorPosition","row","column","newNode","afterNode","insertNode","activeIndex","completions","getCompletions","session","pos","callback","token","getTokenAt","hasPrefix","caption","snippet","meta","requiredPrefix","position","bottom","left","right","insert","renderNode","level","isActive","letterSpacing","lineHeight","highlightActiveLine","maxLines","Infinity","borderLeft","ContextSelector","activeContexts","inactiveContexts","disabled","NoteEditor","loaded","splitMode","noteMode","bind","onSave","draftStorage","draft","withAvailableTags","withSelectedTags","getTags","noteFor","onNoteAdded","flex","onTitleChanged","s","EditNotePage","goBack","setGoBack","TreeViewer","setInvalid","referenceTitle","personAlias","extra","repeat","ReferenceViewer","contextNotes","fontWeight","marginTop","PersonReferenceViewer","matchingNotes","ShowNotePage","viewer","ShowVirtualNotePage","List","items","renderItem","NotePage","filterTags","setFilterTags","showTagsBar","setShowTagsBar","searchResult","setSearchResult","searchIndex","setSearchIndex","showNotesFor","setShowNotesFor","draftIds","setDraftIds","showNoContext","setShowNoContext","virtualReferences","setVirtualReferences","refs","debouncedSearch","debounce","score","idx","lunr","field","tagCounts","notesOutput","isRef","virtualReferencesOutput","v","output","toggleTag","ContextPage","renderTarget","ProjectPage","EmbeddedNoteEdit","targetEntity","addNode","EmbeddedNoteShow","ShowTaskPage","event","isDirty","setTaskState","setContext","setProject","setDefer","ShowProjectPage","projectState","setProjectState","ShowContextPage","contextState","setContextState","DataPage","reload","render","PeoplePage","localeCompare","EditPersonPage","initialState","setValues","handleChange","persist","useForm","birthday","ShowPersonPage","StatsPage","noteTotalCount","setNoteTotalCount","taskTotalCount","setTaskTotalCount","peopleTotalCount","setPeopleTotalCount","projectTotalCount","setProjectTotalCount","contextTotalCount","setContextTotalCount","DailyNotePage","oneWeekAgo","filteredContexts","dailyNotes","routes","routeProps","params","component","Fragment","getResults","getTime","pushSubscribed","setPushSubscribed","currentKey","setCurrentKey","swState","setSwState","generatedKey","setGeneratedKey","setPrivateKey","clearEntities","confirm","dropboxConnected","setDropboxConnected","refreshKeys","newCurrentKey","ready","pushManager","getSubscription","subscription","componentDidMount","update","unregister","unsubscribe","applicationServerKey","userVisibleOnly","subscribe","readOnly","ReactDOM","StrictMode","document","getElementById","URL","process","origin","headers","contentType","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b96624f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"#078263\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as React from 'react';\n\nexport class ServiceWorkerInstall extends React.Component<{ }, { installEvent: any }> {\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            installEvent: null\n        };\n    }\n\n    componentDidMount() {\n        window.addEventListener('beforeinstallprompt', (e: any) => {\n            // Prevent Chrome 67 and earlier from automatically showing the prompt\n            e.preventDefault();\n            this.setState({ installEvent: e });\n        });\n    }\n\n    onInstallClick() {\n        if (this.state.installEvent === null) {\n            return;\n        }\n        \n        this.state.installEvent.prompt();\n    \n        // Wait for the user to respond to the prompt\n        this.state.installEvent.userChoice.then((choiceResult: any) => {\n            if (choiceResult.outcome === 'accepted') {\n                console.log('User accepted the A2HS prompt');\n            } else {\n                console.log('User dismissed the A2HS prompt');\n            }\n        });\n    }\n\n    render() {\n        if (!this.state.installEvent) {\n            return null;\n        }\n\n        return (\n            <div className=\"button\" onClick={() => this.onInstallClick()}>Install app</div>\n        );\n    }\n}","import {css} from 'emotion';\n\nexport const hoverGlow = css({\n    '&': {\n        '&:hover': {\n            background: '#3f3f3f'\n        }\n    }\n});\n\nexport const cursorPointer = css({\n    cursor: 'pointer'\n});\n\nexport const verticalCenter = css({\n    display: 'flex',\n    alignItems: 'center'\n});\n\nexport function horizontalSpace(width = '.3rem', around = false) {\n    return css({\n        paddingLeft: around ? width : undefined,\n        paddingRight: around ? width : undefined,\n        '&': {\n            '& > *:first-child': {\n                marginLeft: 0\n            },\n            '& > *': {\n                marginRight: width\n            },\n            '& > *:last-child': {\n                marginRight: 0\n            }\n        }\n    });\n}\n\nexport function verticalSpace(height = '.3rem', around = false) {\n    return css({\n        paddingTop: around ? height : undefined,\n        paddingBottom: around ? height : undefined,\n        '&': {\n            '& > *': {\n                marginBottom: height\n            },\n            '& > *:last-child': {\n                marginBottom: 0\n            }\n        }\n    });\n}","import {createInstance} from 'localforage';\nimport * as md5 from 'js-md5';\n\nconst lifeKeyStore = createInstance({ name: 'lifekeystore' });\nconst privateKeyStore = createInstance({ name: 'privatekeystore' });\n\nexport interface LifeKey {\n    fingerprint: string;\n    publicKey: string;\n    createdAt: string;\n}\n\nconst rsaSettings = {\n    name: \"RSA-OAEP\",\n    modulusLength: 2048,\n    publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n    hash: {name: \"SHA-256\"},\n};\n\nconst aesSettings = { name: 'AES-GCM', length: 256 };\n\nexport async function generateRsaKey() {\n    try {\n        const keyPair = await crypto.subtle.generateKey(\n            rsaSettings,\n            true,\n            ['encrypt', 'decrypt']\n        );\n\n        const rawPrivateKey = await crypto.subtle.exportKey('pkcs8', keyPair.privateKey);\n        const privateKeyBase64 = arrayBufferToBase64(rawPrivateKey);\n\n        const rawPublicKey = await crypto.subtle.exportKey('spki', keyPair.publicKey);\n        const publicKeyBase64 = arrayBufferToBase64(rawPublicKey);\n        const publicKeyFingerprint = md5.hex(rawPublicKey);\n\n        return { fingerprint: publicKeyFingerprint, privateKey: privateKeyBase64, publicKey: publicKeyBase64 };\n    } catch (error) {\n        console.error('generateKey', error, error.message)\n        throw error;\n    }\n}\n\nexport async function derivePublicRsaKey(privateKey: CryptoKey) {\n    const jwk = await crypto.subtle.exportKey(\"jwk\", privateKey);\n\n    delete jwk.d;\n    delete jwk.dp;\n    delete jwk.dq;\n    delete jwk.q;\n    delete jwk.qi;\n    jwk.key_ops = [\"encrypt\", \"wrapKey\"];\n    \n    const publicKey = await crypto.subtle.importKey(\"jwk\", jwk, rsaSettings, true, [\"encrypt\", \"wrapKey\"]);\n    return publicKey;\n}\n\nexport async function importLifeKey(privateKeyBase64: string) {\n    const importedPrivateKey = base64ToArrayBuffer(privateKeyBase64);\n    const extractablePrivateKey = await crypto.subtle.importKey('pkcs8', importedPrivateKey, rsaSettings, true, ['decrypt', 'unwrapKey']);\n    \n    const publicKey = await derivePublicRsaKey(extractablePrivateKey);\n    const rawPublicKey = await crypto.subtle.exportKey('spki', publicKey);\n    const publicKeyBase64 = arrayBufferToBase64(rawPublicKey);\n    const publicKeyFingerprint = md5.hex(rawPublicKey);\n\n    const privateKey = await crypto.subtle.importKey('pkcs8', importedPrivateKey, rsaSettings, false, ['decrypt', 'unwrapKey']);\n    privateKeyStore.setItem(publicKeyFingerprint, privateKey);\n\n    const lifeKey: LifeKey = {\n        fingerprint: publicKeyFingerprint,\n        publicKey: publicKeyBase64,\n        createdAt: new Date().toISOString(),\n    };\n\n    lifeKeyStore.setItem(lifeKey.fingerprint, lifeKey);\n}\n\nexport async function encryptAndWrap(fingerprint: string, data: string) {\n    try {\n        const lifeKey = await lifeKeyStore.getItem(fingerprint) as LifeKey;\n        if (!lifeKey) {\n            throw new Error(`Key with fingerprint ${fingerprint} not found`);\n        }        \n        const importedPublicKeyBuffer = base64ToArrayBuffer(lifeKey.publicKey);\n        const publicKey = await crypto.subtle.importKey('spki', importedPublicKeyBuffer, rsaSettings, true, ['encrypt', 'wrapKey']);\n    \n        const aesKey = await generateAesKey();\n        const iv = crypto.getRandomValues(new Uint8Array(12));\n    \n        const encryptedData = await crypto.subtle.encrypt({ \n            name: 'AES-GCM', \n            length: 256,\n            iv\n        }, aesKey, strToArrayBuffer(data));\n    \n        const encryptedDataBase64 = arrayBufferToBase64(encryptedData);\n    \n        const wrappedAesKey = await crypto.subtle.wrapKey('raw', aesKey, publicKey, rsaSettings);\n        const wrappedAesKeyBase64 = arrayBufferToBase64(wrappedAesKey);\n    \n        const ivBase64 = arrayBufferToBase64(iv);\n    \n        const result = {\n            payload: encryptedDataBase64,\n            key: wrappedAesKeyBase64,\n            fingerprint: fingerprint,\n            iv: ivBase64\n        };\n    \n        return result;\n    } catch (error) {\n        console.error('encryptAndWrap', error, error.message)\n        throw error;\n    }\n}\n\nexport async function unwrapAndDecrypt(fingerprint: string, wrappedKeyBase64: string, dataBase64: string, ivBase64: string) {\n    try {\n        const privateKey = await privateKeyStore.getItem(fingerprint) as CryptoKey;\n        if (!privateKey) {\n            throw new Error(`Key with fingerprint ${fingerprint} not found`);\n        }\n\n        const aesKey = await crypto.subtle.unwrapKey('raw', base64ToArrayBuffer(wrappedKeyBase64), privateKey, rsaSettings, aesSettings, false, ['decrypt'])\n        const unencryptedDataBuffer = await crypto.subtle.decrypt({ \n            name: 'AES-GCM', \n            length: 256,\n            iv: base64ToArrayBuffer(ivBase64)\n        }, aesKey, base64ToArrayBuffer(dataBase64));\n        return arrayBufferToString(unencryptedDataBuffer);\n    } catch (error) {\n        console.error('unwrapAndDecrypt', error, error.message)\n        throw error;\n    }\n}\n\nexport async function generateAesKey(): Promise<any> {\n    try {\n        const key = await crypto.subtle.generateKey(aesSettings, true, ['encrypt', 'decrypt']);\n        return key;\n    } catch (error) {\n        console.error('generateKey', error, error.message)\n        throw error;\n    }\n}\n\nexport async function getCurrentKey() {\n    const keys = await lifeKeyStore.keys();\n\n    if (keys.length === 0) {\n        throw new Error('No key found');\n    }\n\n    if (keys.length > 1) {\n        throw new Error('More than 1 key found!');\n    }\n\n    return (await lifeKeyStore.getItem(keys[0])) as LifeKey;\n}\n\n\nfunction arrayBufferToBase64( buffer: ArrayBuffer ) {\n    var binary = '';\n    var bytes = new Uint8Array(buffer);\n    var len = bytes.byteLength;\n    for (var i = 0; i < len; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa( binary );\n}\n\nfunction base64ToArrayBuffer(base64: string) {\n    var binary_string =  window.atob(base64);\n    var len = binary_string.length;\n    var bytes = new Uint8Array(len);\n    for (var i = 0; i < len; i++)        {\n        bytes[i] = binary_string.charCodeAt(i);\n    }\n    return bytes.buffer;\n}\n\n// function webSafe64(base64: string) {\n//     return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n// }\n\n// // Convert from web-safe to normal, add trailing \"=\"s\n// function normal64(base64: string) {\n//     return base64.replace(/\\-/g, '+').replace(/_/g, '/') + '=='.substring(0, (3*base64.length)%4);\n// }\n\nfunction strToArrayBuffer(str: string) {\n    var buf = new ArrayBuffer(str.length * 2);\n    var bufView = new Uint16Array(buf);\n    for (var i = 0, strLen = str.length; i < strLen; i++) {\n      bufView[i] = str.charCodeAt(i);\n    }\n    return buf;\n}\n\nfunction arrayBufferToString(buf: ArrayBuffer) {\n    return String.fromCharCode.apply(null, new Uint16Array(buf) as any);\n}","export class EventListener<T> {\n    listeners: ((arg: T) => void)[] = [];\n\n    register(listener: (arg: T) => void) {\n        this.listeners.push(listener);\n        return () =>  {\n            this.listeners = this.listeners.filter(x => x !== listener);\n        };\n    }\n\n    trigger(arg: T) {\n        for(const listener of this.listeners) {\n            listener(arg);\n        }\n    }\n}","import {createInstance} from 'localforage';\nimport {Context} from './context';\nimport { Project } from './project';\nimport { Task } from './task';\nimport { Note } from './note';\nimport * as _ from 'lodash';\nimport { Person } from './person';\nimport { unwrapAndDecrypt, encryptAndWrap, getCurrentKey } from './crypt';\nimport { EventListener } from './EventListener';\n\ninterface Store<T extends Entity> {\n    getAll(): Promise<T[]>;\n    get(id: string, revision?: string): Promise<T|null>;\n    save(entity: T): void;\n}\n\nexport type EntityType = 'note' | 'task' | 'project' | 'context' | 'person';\n\nexport interface Entity {\n    id: string;\n    versionId: string;\n    parentVersionId1: string|null;\n    parentVersionId2: string|null;\n    type: EntityType;\n    createdAt: string;\n    updatedAt: string;\n    deferredUntil: string|null;\n}\n\n// type EntityProperty = keyof Entity;\n\n// const sampleEntity: Entity = {\n//     id: 'test',\n//     versionId: 'test',\n//     parentVersionId1: null,\n//     parentVersionId2: null,\n//     type: 'task',\n//     createdAt: 'now',\n//     updatedAt: 'now',\n//     deferredUntil: null\n// };\n\n// const entityProperties: EntityProperty[] = Object.keys(sampleEntity) as EntityProperty[];\n\nexport interface ServerEntity {\n    id: string;\n    versionId: string;\n    data: string;\n    encryption: string;\n    parentVersionId1: string|null;\n    parentVersionId2: string|null;\n    type: EntityType;\n    createdAt: string;\n    updatedAt: string;\n}\n\nexport interface ServerEntityEncryption {\n    key: string;\n    fingerprint: string;\n    iv: string;\n}\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>\n\nclass LocalForageStore<T extends Entity> implements Store<T> {\n    store: LocalForage;\n    type: EntityType;\n    changeListener: EventListener<T>;\n\n    constructor(type: EntityType) {\n        this.type = type;\n        this.store = createInstance({\n            name: `store-${type}`\n        });\n        this.changeListener = new EventListener<T>();\n    }\n\n    async create(entityProps: Omit<T, keyof Entity>): Promise<T> {\n        const now = new Date().toISOString();\n        let entity = {\n            id: this.uuid(),\n            versionId: this.uuid(),\n            type: this.type,\n            parentVersionIds: [] as string[],\n            createdAt: now,\n            updatedAt: now,\n            ...entityProps as any,\n        } as T;\n        await this.store.setItem(this.getKey(entity), entity);\n        this.changeListener && this.changeListener.trigger(entity);\n        return entity;\n    }\n\n    save(entity: T): void {\n        if (!entity.id) {\n            entity.id = this.uuid();\n        }\n\n        if (entity.type !== this.type) {\n            throw new Error(`Invalid type: ${entity.type} - expected ${this.type}`);\n        }\n\n        const now = new Date().toISOString();\n\n        if (!entity.createdAt) {\n            entity.createdAt = now;\n        }\n\n        entity.updatedAt = now;\n\n        if(entity.versionId) {\n            entity.parentVersionId1 = entity.versionId;\n        }\n\n        entity.versionId = this.uuid();\n        this.store.setItem(this.getKey(entity), entity);\n        this.changeListener && this.changeListener.trigger(entity);\n    }\n\n    import(entity: T) {\n        if (entity.type !== this.type) {\n            throw new Error(`Invalid type ${entity.type} - expected ${this.type}`);\n        }\n\n        this.store.setItem(this.getKey(entity), entity);\n        this.changeListener && this.changeListener.trigger(entity);\n    }\n\n    async get(id: string, versionId?: string): Promise<T|null> {\n        if (versionId === undefined) {\n            const leafNodes = await this.getLeafNodes(`${id}/`);\n\n            if (leafNodes.length > 1) {\n                console.warn(`Found ${leafNodes.length} leaf nodes for entity ${this.type}/${id} - expected 1: ${leafNodes.map(x => x.versionId)}`);\n\n                for(const node of leafNodes) {\n                    console.log('leaf node', node);\n                }\n                \n                // throw `Found ${leafNodes.length} leaf nodes for entity ${this.type}/${id} - expected 1: ${leafNodes.map(x => x.versionId)}`;\n                return _.orderBy(leafNodes, x => x.updatedAt, 'desc')[0];\n            }\n\n            if (leafNodes.length === 0) {\n                return null;\n            }\n\n            return leafNodes[0];\n        } else {\n            const keys = await this.getKeysPrefixed(`${id}/${versionId}`);\n            return await this.store.getItem(keys[0]) as T;\n        }\n    }\n\n    async getAll(): Promise<T[]> {\n        return await this.getLeafNodes();\n    }\n\n    async getKeysPrefixed(prefix: string) {\n        const keys = await this.store.keys();\n        return keys.filter(k => k.startsWith(prefix));\n    }\n\n    async getSyncKeys(): Promise<string[]> {\n        const keys = await this.store.keys();\n        return keys.map(x => `${this.type}/${x.split('/')[0]}/${x.split('/')[1]}`)\n    }\n\n    private async getLeafNodes(prefix = '') {\n        const keys = await this.getKeysPrefixed(prefix);\n\n        const objs = keys.map(k => {\n            const parts = k.split('/');\n\n            let parentVersionId1 = null;\n            let parentVersionId2 = null;\n\n            if (parts[2].length > 0) {\n                const parentVersionIds = parts[2].split('+');\n\n                if (parentVersionIds.length > 2) {\n                    throw new Error(\"ParentVersionIds length > 2\");\n                }\n\n                parentVersionId1 = parentVersionIds[0];\n                parentVersionId2 = parentVersionIds.length > 1 ? parentVersionIds[1] : null;\n            }\n\n            return {\n                id: parts[0],\n                versionId: parts[1],\n                parentVersionId1: parentVersionId1,\n                parentVersionId2: parentVersionId2,\n            }\n        });\n\n        const groups = _.groupBy(objs, o => o.id);\n\n        const leafNodeArrays = Object.keys(groups).map(k => {\n            const group = groups[k];\n            const parents: { [key: string]: boolean } = {};\n\n            for(const o of group) {\n                if (o.parentVersionId1) {\n                    parents[o.parentVersionId1] = true;\n                }\n                if (o.parentVersionId2) {\n                    parents[o.parentVersionId2] = true;\n                }\n            }\n\n            const leafNodes = group.filter(o => {\n                const isLeaf = !parents[o.versionId];\n                return isLeaf;\n            });\n\n            return leafNodes;\n        });\n\n        const result: T[] = [];\n\n        for(let leafNodes of leafNodeArrays) {\n            const leafObjs: T[] = [];\n            for(let node of leafNodes) {\n                leafObjs.push(await (this.store.getItem(this.getKey(node))) as T);\n            }\n\n            if(leafObjs.length !== 1) {\n                console.warn(`Found ${leafObjs.length} leaf nodes for entity ${this.type}/${leafNodes[0].id} - expected 1: ${leafObjs.map(x => x.versionId)}`);\n    \n                for(const node of leafObjs) {\n                    console.log('leaf node', node);\n                }\n    \n                result.push(_.orderBy(leafObjs, x => x.updatedAt, 'desc')[0])\n            } else {\n                result.push(leafObjs[0]);\n            }\n        }\n\n        return result;\n    }\n\n    registerChangeListener(listener: (status: T) => void) {\n        this.changeListener.register(listener)\n    }\n\n    dropInstance() {\n        this.store.dropInstance();\n    }\n\n    private getKey(entity: { id: string, versionId: string, parentVersionId1: string|null, parentVersionId2: string|null }) {\n        let parentVersionIds = [];\n\n        if (entity.parentVersionId1) {\n            parentVersionIds.push(entity.parentVersionId1);\n        }\n\n        if (entity.parentVersionId2) {\n            parentVersionIds.push(entity.parentVersionId2);\n        }\n\n\n        return `${entity.id}/${entity.versionId}/${parentVersionIds.join('+')}`;\n    }\n\n    private uuid() {\n        return 'xxxxxxxx-xxxx-xxxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            const r = Math.random() * 16 | 0, v = c === 'x' ? r : ((r & 0x3) | 0x8);\n            return v.toString(16);\n        });\n    }\n}\n\nconst contexts = new LocalForageStore<Context>(\"context\");\nconst tasks = new LocalForageStore<Task>(\"task\");\nconst notes = new LocalForageStore<Note>(\"note\");\nconst projects = new LocalForageStore<Project>(\"project\");\nconst people = new LocalForageStore<Person>(\"person\");\n\nasync function getSyncKeys() {\n    const keys: string[] = [\n        ...(await contexts.getSyncKeys()),\n        ...(await tasks.getSyncKeys()),\n        ...(await notes.getSyncKeys()),\n        ...(await projects.getSyncKeys()),\n        ...(await people.getSyncKeys()),\n    ];\n\n    return keys;\n}\n\nasync function getBySyncKey(syncKey: string): Promise<Entity|null> {\n    const [type, id, versionId] = syncKey.split('/');\n\n    switch(type) {\n        case 'context':\n            return contexts.get(id, versionId);\n        case 'task':\n            return tasks.get(id, versionId);\n        case 'note':\n            return notes.get(id, versionId);\n        case 'project':\n            return projects.get(id, versionId);\n        case 'person':\n            return people.get(id, versionId);\n        default:\n            throw new Error('Unknown type: ' + type);\n    }\n}\n\nasync function importEntites(entities: Entity[]) {\n    for(const entity of entities) {\n        switch(entity.type) {\n            case 'context':\n                contexts.import(entity as Context);\n                break;\n            case 'task':\n                tasks.import(entity as Task);\n                break;\n            case 'note':\n                notes.import(entity as Note);\n                break;\n            case 'project':\n                projects.import(entity as Project);\n                break;\n            case 'person':\n                people.import(entity as Person);\n                break;\n            default:\n                throw new Error('Unknown type: ' + entity.type);\n        }\n    }\n}\n\nasync function importServerEntites(serverEntities: ServerEntity[]) {\n    for(const serverEntity of serverEntities) {\n        const encryption = JSON.parse(serverEntity.encryption) as ServerEntityEncryption;\n        const unencryptedData = await unwrapAndDecrypt(encryption.fingerprint, encryption.key, serverEntity.data, encryption.iv);\n        let entity = JSON.parse(unencryptedData) as Entity;\n\n        entity.id = serverEntity.id;\n        entity.versionId = serverEntity.versionId;\n        entity.type = serverEntity.type;\n        entity.parentVersionId1 = serverEntity.parentVersionId1;\n        entity.parentVersionId2 = serverEntity.parentVersionId2;\n        entity.createdAt = serverEntity.createdAt;\n        entity.updatedAt = serverEntity.updatedAt;\n\n        switch(serverEntity.type) {\n            case 'context':\n                contexts.import(entity as Context);\n                break;\n            case 'task':\n                tasks.import(entity as Task);\n                break;\n            case 'note':\n                notes.import(entity as Note);\n                break;\n            case 'project':\n                projects.import(entity as Project);\n                break;\n            case 'person':\n                people.import(entity as Person);\n                break;\n            default:\n                throw new Error('Unknown type: ' + entity.type);\n        }\n    }\n}\n\nasync function exportServerEntities(syncKeys: string[]): Promise<ServerEntity[]> {\n    const result: ServerEntity[] = [];\n\n    for (const syncKey of syncKeys) {\n        const entity = await getBySyncKey(syncKey);\n\n        if (entity === null) {\n            console.warn(\"Entity with key not found: \" + syncKey)\n            continue;\n        }\n\n        const entityData = {...entity};\n\n        delete entityData.createdAt;\n        delete entityData.updatedAt;\n        delete entityData.id;\n        delete entityData.versionId;\n        delete entityData.type;\n        delete entityData.parentVersionId1;\n        delete entityData.parentVersionId2;\n\n        const unencryptedData = JSON.stringify(entityData);\n        const encryptionResult = await encryptAndWrap((await getCurrentKey()).fingerprint, unencryptedData);\n        const encryption: ServerEntityEncryption = { \n            fingerprint: encryptionResult.fingerprint, \n            key: encryptionResult.key,\n            iv: encryptionResult.iv\n        };\n        const encryptionJson = JSON.stringify(encryption);\n\n        const serverEntity: ServerEntity = {\n            id: entity.id,\n            versionId: entity.versionId,\n            type: entity.type,\n            parentVersionId1: entity.parentVersionId1,\n            parentVersionId2: entity.parentVersionId2,\n            createdAt: entity.createdAt,\n            updatedAt: entity.updatedAt,\n            data: encryptionResult.payload,\n            encryption: encryptionJson\n        };\n\n        result.push(serverEntity);\n    }\n\n    return result;\n}\n\nexport const db = {\n    contexts,\n    tasks,\n    notes,\n    projects,\n    people,\n    getSyncKeys,\n    importEntites,\n    importServerEntites,\n    exportServerEntities\n};","import * as React from 'react';\n\nexport const Loader: React.FC = (props) => {\n    return (\n        <div style={{display: 'flex', height: '100%', justifyContent: 'center', alignItems: 'center'}}>\n            <div style={{border: '1px solid #555', padding: '1rem 2rem', background: '#2e2e2e'}}>Loading...</div>\n        </div>\n    );\n}","import { Note } from \"./db/note\";\nimport { Task } from \"./db/task\";\nimport { Context } from \"./db/context\";\nimport { Project } from \"./db/project\";\nimport { Person } from \"./db/person\";\nimport React, { useContext, useEffect } from \"react\";\nimport { syncer } from \"./db/syncer\";\nimport { Loader } from \"./components/Loader\";\n\nexport class Data {\n    constructor(notes: Note[], tasks: Task[], contexts: Context[], projects: Project[], people: Person[]) {\n        this.notes = notes;\n        this.tasks = tasks;\n        this.contexts = contexts;\n        this.projects = projects;\n        this.people = people;\n    }\n\n    readonly notes: Note[];\n    readonly tasks: Task[];\n    readonly contexts: Context[];\n    readonly projects: Project[];\n    readonly people: Person[];\n};\n\ninterface DataContextState {\n    data: Data;\n    refreshData: () => void;\n}\n\nconst DataContext = React.createContext<DataContextState>({\n    data: null as any,\n    refreshData: () => {}\n});\n\nexport const DataProvider: React.FC = props => {\n    const [data, setData] = React.useState<Data>(null as any);\n\n    useEffect(() => {\n        async function init() {\n            syncer.registerDataListener(data => setData(data));\n            setData(await syncer.getData());\n            await syncer.startServerSync();\n            await syncer.ensureServerSyncEnqueued();\n        };\n        init();\n    }, []);\n\n    const refreshData = React.useCallback(async () => {\n        // setData(await syncer.getData());\n        syncer.startServerSync();\n    }, []);\n\n    const value: DataContextState = {\n        data,\n        refreshData\n    };\n\n    if (!data) {\n        return <Loader />;\n    }\n\n    return (\n      <DataContext.Provider value={value}>\n        {props.children}\n      </DataContext.Provider>\n    );\n};\n\nexport const useData = () => {\n    const value = useContext(DataContext);\n    return value;\n};","import { Dropbox } from 'dropbox';\nimport {createInstance} from 'localforage';\n\nconst store = createInstance({name: 'store-dropbox'})\n\nconst localClientId = 'jh9cnt92wi5e5my';\nconst prodClientId = 'li12ai4q2cs3dkc';\n\nexport const isLocalMode = window.location.host !== 'life.rasmuskl.dk';\n\nconst clientId = isLocalMode ? localClientId : prodClientId;\n\ntryStoreAccessKey();\n\nexport function signIn() {\n    const dropbox = new Dropbox({ clientId, fetch });\n    window.location.assign(dropbox.getAuthenticationUrl(window.location.toString()));\n}\n\nexport async function isSignedIn() {\n    return !!(await store.getItem('token'));\n}\n\ninterface DropboxSnapshot {\n    cursor: string|null;\n    files: Set<string>;\n}\n\nasync function getStateSnapshot() {\n    const snapshot = await store.getItem('snapshot') as DropboxSnapshot|null;\n    return snapshot || { cursor: null, files: new Set<string>() };\n}\n\nasync function setStateSnapshot(snapshot: DropboxSnapshot|null) {\n    if (!snapshot) {\n        await store.removeItem('snapshot');\n    } else {\n        await store.setItem('snapshot', snapshot);\n    }\n}\n\nexport async function listFiles(useSnapshot = true) {\n    if(!await isSignedIn()) {\n        throw new Error('Not authenticated');\n    }\n\n    const dropbox = new Dropbox({ accessToken: await getAccessToken(), fetch });\n    let snapshot: DropboxSnapshot = { cursor: null, files: new Set<string>() };\n\n    if (useSnapshot) {\n        snapshot = await getStateSnapshot();\n    }\n\n    let hasMore = true;\n\n    while(hasMore) {\n        if (snapshot.cursor) {\n            const fileListResult = await dropbox.filesListFolderContinue({ cursor: snapshot.cursor });\n            const results = fileListResult.entries.filter(e => e['.tag'] === 'file').map(e => e.path_lower?.substring(1)).filter(p => p) as string[];\n            snapshot.cursor = fileListResult.cursor;\n            for(const file of results) {\n                snapshot.files.add(file);\n            }\n            hasMore = fileListResult.has_more;\n        } else {\n            const fileListResult = await dropbox.filesListFolder({path: '', recursive: true});\n            const results = fileListResult.entries.filter(e => e['.tag'] === 'file').map(e => e.path_lower?.substring(1)).filter(p => p) as string[];\n            snapshot.cursor = fileListResult.cursor;    \n            for(const file of results) {\n                snapshot.files.add(file);\n            }\n            hasMore = fileListResult.has_more;\n        }\n\n        await setStateSnapshot(snapshot);\n    }\n\n    return snapshot.files;\n}\n\nexport function getAccessTokenFromUrl() {\n    const results = parseAuthFromHash(window.location.hash);\n    return results.access_token;\n}\n\nexport async function tryStoreAccessKey() {\n    const accessToken = getAccessTokenFromUrl();\n\n    if (accessToken) {\n        await store.setItem('token', accessToken);\n    }\n}\n\nexport async function uploadFile(path: string, contents: string) {\n    if(!await isSignedIn()) {\n        throw new Error('Not authenticated');\n    }\n\n    const dropbox = new Dropbox({ accessToken: await getAccessToken(), fetch });\n    await dropbox.filesUpload({\n        path: `/${path}`,\n        contents\n    });\n}\n\nexport async function getFile<T>(path: string) {\n    if(!await isSignedIn()) {\n        throw new Error('Not authenticated');\n    }\n\n    const dropbox = new Dropbox({ accessToken: await getAccessToken(), fetch });\n    const response = await dropbox.filesDownload({path: `/${path}` })\n    return new Promise<T>((resolve) => {\n        const blob: Blob = (response as any).fileBlob;\n        const reader = new FileReader();\n        reader.addEventListener(\"loadend\", function() {\n            const json = reader.result as string;\n            resolve(JSON.parse(json) as T);\n        });\n        reader.readAsText(blob);\n    });\n}\n\n\nasync function getAccessToken() {\n    return await store.getItem('token') as string;\n}\n\nfunction parseAuthFromHash(str: string) {\n    const ret: { [k: string]: string[] | string } = {};\n\n    if (typeof str !== 'string') {\n        return ret;\n    }\n\n    str = str.trim().replace(/^(\\?|#|&)/, '');\n\n    if (!str) {\n        return ret;\n    }\n\n    str.split('&').forEach(function (param) {\n        const parts = param.replace(/\\+/g, ' ').split('=');\n        let key = parts.shift();\n        let val = parts.length > 0 ? parts.join('=') : null;\n\n        key = decodeURIComponent(key!);\n        val = val ? decodeURIComponent(val) : null;\n\n        var retVal = ret[key];\n        if (ret[key] === undefined) {\n            ret[key] = val!;\n        } else if (Array.isArray(retVal)) {\n            retVal.push(val!);\n        } else {\n            ret[key] = [ret[key] as string, val!];\n        }\n    });\n\n    return ret;\n}","import { db, ServerEntity } from \"./db\";\nimport * as _ from \"lodash\";\nimport { Data } from \"../model\";\nimport {EventListener} from './EventListener';\nimport * as dropboxApi from '../lib/dropboxApi';\nimport pLimit from 'p-limit';\n\nexport enum SyncStatus {\n    Idle,\n    Syncing,\n    Failed,\n};\n\nexport interface SyncResult {\n    startAt: Date;\n    endAt: Date;\n    fetch: number;\n    send: number;\n    error: Error|null;\n}\n\nclass Syncer {\n    status = SyncStatus.Idle;\n    results: SyncResult[] = [];\n    data: Data|null = null;\n    intervalHandle: number|null = null;\n\n    syncListener = new EventListener<SyncStatus>();\n    dataListener = new EventListener<Data>();\n\n    constructor() {\n        db.notes.changeListener.register(note => {\n            if(!this.data) {\n                return;\n            }\n\n            const notes = _.orderBy(this.data.notes.filter(x => x.id !== note.id).concat(note), x => x.updatedAt);\n            this.data = new Data(notes, this.data.tasks, this.data.contexts, this.data.projects, this.data.people);\n            this.dataListener.trigger(this.data);\n        });\n\n        db.tasks.changeListener.register(task => {\n            if(!this.data) {\n                return;\n            }\n\n            const tasks = this.data.tasks.filter(x => x.id !== task.id).concat(task);\n            this.data = new Data(this.data.notes, tasks, this.data.contexts, this.data.projects, this.data.people);\n            this.dataListener.trigger(this.data);\n        });\n\n        db.contexts.changeListener.register(context => {\n            if(!this.data) {\n                return;\n            }\n\n            const contexts = this.data.contexts.filter(x => x.id !== context.id).concat(context);\n            this.data = new Data(this.data.notes, this.data.tasks, contexts, this.data.projects, this.data.people);\n            this.dataListener.trigger(this.data);\n        });\n\n        db.projects.changeListener.register(project => {\n            if(!this.data) {\n                return;\n            }\n\n            const projects = this.data.projects.filter(x => x.id !== project.id).concat(project);\n            this.data = new Data(this.data.notes, this.data.tasks, this.data.contexts, projects, this.data.people);\n            this.dataListener.trigger(this.data);\n        });\n\n        db.people.changeListener.register(person => {\n            if(!this.data) {\n                return;\n            }\n\n            const people = this.data.people.filter(x => x.id !== person.id).concat(person);\n            this.data = new Data(this.data.notes, this.data.tasks, this.data.contexts, this.data.projects, people);\n            this.dataListener.trigger(this.data);\n        });\n    }\n\n    registerSyncListener(listener: (status: SyncStatus) => void) {\n        this.syncListener.register(listener)\n    }\n\n    registerDataListener(listener: (status: Data) => void) {\n        this.dataListener.register(listener)\n    }\n\n    getResults() {\n        return this.results;\n    }\n\n    async getData() {\n        if (!this.data) {\n            this.data = await this.loadData();\n        }\n\n        return this.data;\n    }\n\n    async ensureServerSyncEnqueued() {\n        if (this.intervalHandle !== null) {\n            return;\n        }\n\n        this.intervalHandle = setInterval(async () => {\n            await this.startServerSync();\n        }, 60000) as any;\n    }\n\n    async startServerSync() {\n        if (this.status === SyncStatus.Syncing) {\n            return;\n        }\n\n        if(!dropboxApi.isSignedIn()) {\n            return;\n        }\n\n        const startAt = new Date();\n        this.status = SyncStatus.Syncing;\n        this.syncListener.trigger(this.status);\n\n        function difference<T>(setA: Set<T>, setB: Set<T>): Set<T> {\n            let _difference = new Set(setA);\n            for (const key of setB) {\n                _difference.delete(key);\n            }\n            return _difference;\n        }\n\n        try {\n            const files = await dropboxApi.listFiles();\n            const syncKeys = new Set(await db.getSyncKeys());\n    \n            const toSend = difference(syncKeys, files);\n            const toFetch = difference(files, syncKeys);\n    \n            for(const key of toSend) {\n                const entities = await db.exportServerEntities([key]);\n                await dropboxApi.uploadFile(key, JSON.stringify(entities[0]));\n            }\n    \n            const limit = pLimit(10);\n            const promises = [];\n    \n            for(const key of toFetch) {\n                promises.push(limit(async () => {\n                    const entity = await dropboxApi.getFile<ServerEntity>(key);\n                    await db.importServerEntites([entity]);\n                }));\n            }\n    \n            await Promise.all(promises);\n\n            this.results.push({ startAt, endAt: new Date(), error: null, fetch: toFetch.size, send: toSend.size })\n            this.status = SyncStatus.Idle;\n            this.syncListener.trigger(this.status);\n        } catch (e) {\n            this.status = SyncStatus.Failed;\n            this.results.push({ startAt, endAt: new Date(), error: e && e.message ? e.message : e, fetch: 0, send: 0 });\n            this.syncListener.trigger(this.status);\n        }\n    }\n\n    private async loadData(): Promise<Data> {\n        const contexts = db.contexts.getAll();\n        const tasks = await db.tasks.getAll();\n        const projects = db.projects.getAll();\n        const people = db.people.getAll();\n        const notes = _.orderBy(await db.notes.getAll(), x => x.updatedAt);\n        \n        return new Data(notes, await tasks, await contexts, await projects, await people);\n    }\n}\n\nexport const syncer = new Syncer();\n\n","import * as React from 'react';\nimport './Layout.scss';\nimport { NavLink } from 'react-router-dom';\nimport { ServiceWorkerInstall } from './ServiceWorkerInstall';\nimport * as styles from '../layout/styles';\nimport { syncer, SyncStatus } from '../db/syncer';\nimport { cx } from 'emotion';\n\nexport function isMobile() {\n    return window.matchMedia(\"(max-width: 768px)\").matches;\n}\n\nexport const Layout: React.FC<{}> = (props) => {\n    const [sidebar, setSidebar] = React.useState(() => !isMobile())\n    const [count, setCount] = React.useState(0);\n\n    React.useEffect(() => {\n        syncer.registerSyncListener(() => setCount(c => c +  1));\n    }, []);\n\n    function onNavClick() {\n        if(isMobile()) {\n            setSidebar(false);\n        }\n    }\n\n    return <>\n        <section style={{display: 'flex', overflow: 'hidden', height: '100%'}}>\n            <React.Fragment key={count} />\n            <div className={cx('navbar')}>\n                <div className={cx(styles.horizontalSpace('1rem'))}>\n                    {!sidebar && (\n                        <>\n                            <NavLink className={cx('button', styles.hoverGlow)} to={ '/' } onClick={onNavClick} exact activeClassName='is-active'>Notes</NavLink>\n                            <NavLink className={cx('button', styles.hoverGlow)} to={ '/tasks' } onClick={onNavClick} exact activeClassName='is-active'>Tasks</NavLink>\n                        </>\n                    )}\n                </div>\n                <div className={cx(styles.horizontalSpace('1rem'))}>\n                    <NavLink className=\"button\" to=\"/sync\">Sync: {SyncStatus[syncer.status]}</NavLink>\n                    <ServiceWorkerInstall />\n                    <button className=\"button\" onClick={() => setSidebar(!sidebar)}>\n                        Menu\n                    </button>\n                </div>\n            </div>\n\n            <div className={cx('sidebar', 'list')} style={{overflowY: 'auto', paddingTop: 52, height: '100%', width: sidebar ? undefined : 0, overflowX: 'hidden'}}>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/' } onClick={onNavClick} exact activeClassName='is-active'>Notes</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/notes/daily' } onClick={onNavClick} exact activeClassName='is-active'>Daily Notes</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/tasks' } onClick={onNavClick} exact activeClassName='is-active'>Tasks</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/projects' } onClick={onNavClick} exact activeClassName='is-active'>Projects</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/contexts' } onClick={onNavClick} exact activeClassName='is-active'>Contexts</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/people' } onClick={onNavClick} exact activeClassName='is-active'>People</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/playground' } onClick={onNavClick} exact activeClassName='is-active'>Playground</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/stats' } onClick={onNavClick} exact activeClassName='is-active'>Stats</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/settings' } onClick={onNavClick} exact activeClassName='is-active'>Settings</NavLink>\n            </div>\n\n            <div className=\"main\" style={{paddingTop: 52}}>\n                { props.children }\n            </div>\n        </section>\n    </>;\n}\n","import { Entity } from \"./db\";\n\nexport enum ProjectState {\n    Active = 'Active',\n    Incubated = 'Incubated',\n    Completed = 'Completed',\n    Dropped = 'Dropped',\n}\n\nexport interface Project extends Entity {\n    type: 'project',\n    title: string;\n    contextId: string|null;\n    state: ProjectState;\n}","import * as React from 'react';\nimport * as styles from '../layout/styles';\nimport { cx } from 'emotion';\n\nexport const ToolSection: React.SFC<{ verticalAround?: boolean }> = (props) => {\n    let verticalAround = props.verticalAround;\n\n    if (verticalAround === undefined) {\n        verticalAround = true;\n    }\n\n    return (\n        <div className={cx(styles.horizontalSpace('8px', true), styles.verticalSpace('8px', verticalAround))}>{props.children}</div>\n    );\n}","import { Data } from \"../model\";\nimport * as _ from 'lodash';\nimport { Context } from \"../db/context\";\n\nexport interface NestedContexts {\n    topContexts: Context[];\n    nestedContexts: {[id: string]: Context[]};\n    taskCounts: {[id: string]: number};\n}\n\nexport function getNestedContexts(data: Data): NestedContexts {\n    const grouped = _.groupBy(data.contexts, x => x.contextId);\n    const taskCounts = _.countBy(data.tasks.filter(x => x.state === 'active'), x => x.contextId);\n\n    return {\n        topContexts: data.contexts.filter(x => !x.contextId),\n        nestedContexts: grouped,\n        taskCounts\n    };\n}\n\nexport function getFilteredContextIds(contextId: string|null, data: Data) {\n    const contexts = getNestedContexts(data);\n\n    if (contextId) {\n        const contextIds = [contextId];\n        const queue = [contextId];\n\n        while (queue.length) {\n            const next = queue.pop();\n\n            if (!next) {\n                break;\n            }\n\n            for(const nested of contexts.nestedContexts[next] || []) {\n                contextIds.push(nested.id);\n                queue.push(nested.id);\n            }\n        }\n\n        return contextIds;\n    } else {\n        return data.contexts.map(c => c.id);\n    }\n};","import { Entity } from \"./db\";\n\nexport enum ContextState {\n    Active = 'Active',\n    Inactive = 'Inactive',\n}\n\nexport interface Context extends Entity {\n    type: 'context';\n    title: string;\n    contextId: string|null;\n    state: ContextState;\n}","import * as React from \"react\";\n\nexport const useQueryState = (initialValue: string|null, queryParam: string): [string|null, (value: string|null) => void] => {\n    const [rawValue, setRawValue] = React.useState(() => {\n        const urlParams = new URLSearchParams(window.location.search);\n        return urlParams.get(queryParam) || initialValue;\n    });\n\n    const setValue = (value: string|null) => {\n        const urlParams = new URLSearchParams(window.location.search);\n        setRawValue(value);\n        if (!value || value === initialValue) {\n            urlParams.delete(queryParam);\n        } else {\n            urlParams.set(queryParam, value);\n        }\n\n        const queryString = urlParams.toString();\n\n        if (queryString.length) {\n            window.history.replaceState(null, '', `?${queryString}`);\n        } else {\n            window.history.replaceState(null, '', window.location.pathname);\n        }\n\n        window.dispatchEvent(new (window as any).CustomEvent('popstate'));\n    };\n\n    return [rawValue, setValue];\n};\n\nexport const useQueryStateT = <T extends {}>(initialValue: T, queryParam: string, convertTo: (value: string|null) => T, convertFrom: (value: T) => string|null): [T, (value: T) => void] => {\n    const [rawValue, setRawValue] = React.useState<T>(() => {\n        const urlParams = new URLSearchParams(window.location.search);\n        return convertTo(urlParams.get(queryParam)) || initialValue;\n    });\n\n    const setValue = (value: T) => {\n        const urlParams = new URLSearchParams(window.location.search);\n        setRawValue(value);\n        if (!value || value === initialValue) {\n            urlParams.delete(queryParam);\n        } else {\n            const strValue = convertFrom(value);\n            if (strValue) {\n                urlParams.set(queryParam, strValue);\n            } else {\n                urlParams.delete(queryParam);\n            }\n        }\n\n        const queryString = urlParams.toString();\n\n        if (queryString.length) {\n            window.history.replaceState(null, '', `?${queryString}`);\n        } else {\n            window.history.replaceState(null, '', window.location.pathname);\n        }\n\n        window.dispatchEvent(new (window as any).CustomEvent('popstate'));\n    };\n\n    return [rawValue, setValue];\n};\n\nexport const useQueryStateBoolean = (initialValue: boolean, queryParam: string) => {\n    return useQueryStateT<boolean>(initialValue, queryParam, x => x === 'true', x => x === initialValue ? null : x.toString());\n};","import * as React from 'react';\nimport { isMobile } from './Layout';\nimport * as styles from '../layout/styles';\nimport { cx } from 'emotion';\n\nexport const SettingsCompactor : React.FC<{className?: string, alwaysVisible?: () => JSX.Element, mobileOnly?: () => JSX.Element, wideStyle?:React.CSSProperties}> = props => {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const alwaysVisible = props.alwaysVisible ? props.alwaysVisible() : null;\n\n    if(!isMobile()) {\n        return (\n            <div style={{display: 'flex', alignItems: 'center', ...props.wideStyle}} className={styles.horizontalSpace('.3rem')}>\n                {alwaysVisible}\n                {props.children}\n            </div>\n        );\n    }\n\n    const mobileOnly = props.mobileOnly ? props.mobileOnly() : null;\n\n    if(!expanded) {\n        return (\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\n                {alwaysVisible}\n                {mobileOnly}\n                <div className=\"button\" onClick={() => setExpanded(true)}>S</div>\n            </div>\n        );\n    }\n\n    return (\n        <div style={{display: 'flex', flexDirection: 'column'}} className={styles.verticalSpace('.3rem')}>\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\n                {alwaysVisible}\n                <div className=\"button\" onClick={() => setExpanded(false)}>S</div>\n            </div>\n            <div className={cx(styles.verticalSpace('.3rem'), props.className)}>\n                {props.children}\n            </div>\n        </div>\n    );\n};","import * as React from 'react';\nimport { useData } from '../model';\n\nexport const ContextTag: React.FC<{contextId: string|null}> = (props) => {\n    const {data} = useData();\n\n    if (!props.contextId) {\n        return null;\n    }\n\n    const context = data.contexts.find(p => p.id === props.contextId);\n\n    if (!context) {\n        return null;\n    }\n\n    return <div className=\"tag is-context\">{context.title}</div>;\n}","import * as React from 'react';\nimport { useData } from '../model';\nimport { ContextState, Context } from '../db/context';\nimport * as styles from '../layout/styles';\nimport * as ContextActions from '../lib/contextActions';\nimport { cx } from 'emotion';\n\nexport const ContextBar: React.FC<{contextId: string|null, onChange: (contextId: string|null) => void, showTaskCount?: boolean}> = (props) => {\n    const {data} = useData();\n\n    const nestedContexts = ContextActions.getNestedContexts(data);\n\n    const renderListContext = (context: Context, contexts: ContextActions.NestedContexts, depth = 0) => {\n        if (context.state && context.state === ContextState.Inactive) {\n            return <React.Fragment key={context.id}></React.Fragment>;\n        }\n\n        return (\n            <React.Fragment key={context.id}>\n                <div onClick={() => props.onChange(context.id)} style={{paddingLeft: 10 + depth * 10, background: props.contextId === context.id ? \"#3f3f3f\" : undefined}} className={cx('item', styles.hoverGlow, styles.cursorPointer)}>\n                    {context.title} {props.showTaskCount && <span style={{color: '#999'}}>{contexts.taskCounts[context.id]}</span>}\n                </div>\n                {contexts.nestedContexts[context.id] && contexts.nestedContexts[context.id].map(c => (\n                    renderListContext(c, contexts, depth + 1)\n                ))}\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <div style={{borderRight: '1px solid #666', width: 200}}>\n            <div className=\"list\">\n                <div className={cx('item', styles.hoverGlow, styles.cursorPointer)} style={{paddingLeft: 10, background: props.contextId === null ? \"#3f3f3f\" : undefined}} onClick={() => props.onChange(null)}>All</div>\n                {nestedContexts.topContexts.map(i => renderListContext(i, nestedContexts))}\n            </div>\n        </div>\n    )\n}","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as styles from '../layout/styles';\nimport { useData } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport * as ContextActions from '../lib/contextActions';\nimport { isMobile } from '../components/Layout';\nimport { Task } from '../db/task';\nimport { ProjectState, Project } from '../db/project';\nimport { db } from '../db/db';\nimport moment from 'moment';\nimport { useQueryState } from '../lib/UseQueryState';\nimport { SettingsCompactor } from '../components/SettingsCompactor';\nimport { ContextTag } from '../components/ContextTag';\nimport { ContextBar } from '../components/ContextBar';\nimport { cx } from 'emotion';\nimport _ from 'lodash';\n\ninterface Perspective {\n    id: string;\n    title: string;\n    groupedProject: boolean;\n    groupedContext: boolean;\n}\n\nlet perspectives: Perspective[] = [\n    { id: '1', title: 'All', groupedProject: false, groupedContext: false },\n    { id: '2', title: 'Grouped', groupedProject: false, groupedContext: true },\n    { id: '3', title: 'Grouped Project', groupedProject: true, groupedContext: false }\n]\n\nlet defaultPerspective = perspectives[1];\n\ninterface TaskFilters {\n    showCompleted: boolean;\n    showContextBar: boolean;\n    includeNested: boolean;\n    showDeferred: boolean;\n    showIncubated: boolean;\n}\n\nexport const TaskPage: React.FC<{}> = (props) => {\n    const {data, refreshData} = useData();\n    const [text, setText] = React.useState('');\n    const [options, setOptions] = React.useState<TaskFilters>({\n        showCompleted: false,\n        showDeferred: false,\n        showIncubated: false,\n        showContextBar: isMobile() ? false : true,\n        includeNested: true,\n    });\n\n    const [contextId, setContextId] = useQueryState(null, 'context');\n    const [projectId, setProjectId] = useQueryState(null, 'project');\n    const [perspectiveId, setPerspectiveId] = useQueryState('2', 'perspective');\n\n    const onKeyPress = async (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter') {\n            await db.tasks.create({\n                title: text,\n                contextId: contextId,\n                projectId: projectId,\n                content: null,\n                state: 'active',\n                stateChangedAt: new Date().toISOString(),\n                noteId: null,\n            });\n\n            setText('');\n            refreshData();\n        }\n    }\n\n    const onCompleteChange = async (task: Task, e: React.ChangeEvent<HTMLInputElement>) => {\n        task.state = task.state === 'completed' ? 'active' : 'completed';\n        task.stateChangedAt = new Date().toISOString();\n        await db.tasks.save(task);\n        refreshData();\n    }\n\n    const renderProject = (task: Task) => {\n        const project = data.projects.find(p => p.id === task.projectId);\n\n        if (project) {\n            return <div className=\"tag is-info\">{project.title}</div>;\n        }\n\n        return null;\n    };\n\n    const renderDeferred = (task: Task) => {\n        if (task.deferredUntil && new Date(task.deferredUntil) > new Date()) {\n            return <div className=\"tag is-primary\" title={`${moment(task.deferredUntil).format('YYYY-MM-DD')}`}>deferred {moment(task.deferredUntil).fromNow(true)}</div>;\n        }\n        return null;\n    };\n\n    const renderNote = (task: Task) => {\n        if (task.noteId) {\n            return <div className=\"tag is-primary\" >N</div>;\n        }\n        return null;\n    };\n\n    const renderTitle = (title: string) => {\n        const pattern = /(https?:\\/\\/[^\\s]+)/;\n        return title.split(pattern).map((c, i) => {\n            if (c.match(pattern)) {\n                let title = c.replace(/https?:\\/\\//, '');\n                title = title.replace(/\\/.*/, '/...');\n                return <a key={i} href={c} onClick={e => { e.stopPropagation(); }} target=\"_blank\"  rel=\"noopener noreferrer\" className=\"button is-small is-link\" style={{display: 'inline-block', marginLeft: '5px', marginRight: '5px'}}>{title}</a>;\n            }\n\n            return <span key={i}>{c}</span>;\n        });\n    };\n\n    const filterTasks = (complete: boolean, contexts: ContextActions.NestedContexts) => {\n        let tasks = data.tasks;\n\n        if (complete) {\n            tasks = tasks.filter(t => t.state === 'completed')\n        } else {\n            tasks = tasks.filter(t => t.state !== 'completed')\n        }\n\n        if (projectId) {\n            tasks = tasks.filter(t => t.projectId === projectId);\n        }\n\n        if (!options.showDeferred) {\n            tasks = tasks.filter(t => t.deferredUntil == null || new Date(t.deferredUntil) < new Date());\n        }\n\n        if (!options.showIncubated) {\n            tasks = tasks.filter(t => t.state !== 'incubated');\n\n            const incubatedProjectIds = data.projects.filter(p => p.state === ProjectState.Incubated).map(p => p.id);\n            tasks = tasks.filter(t => !t.projectId || incubatedProjectIds.indexOf(t.projectId) === -1);\n        }\n\n        if (contextId) {\n            const contextIds = ContextActions.getFilteredContextIds(contextId, data);\n            tasks = tasks.filter(t => t.contextId && contextIds.indexOf(t.contextId) !== -1);\n        }\n\n        return tasks.sort((a, b) =>  b.createdAt! < a.createdAt! ?  -1 : b.createdAt! > a.createdAt! ? 1 : 0);\n    }\n\n    const renderTask = (task: Task, skipProjectContext = false) => {\n        let source: string|null = null;\n        if (window.location.search.length) {\n            const urlParams = new URLSearchParams(window.location.search);\n            source = `?source=${encodeURIComponent(`${window.location.pathname}?${urlParams.toString()}`)}`\n        }\n\n        return (\n            <NavLink key={task.id} to={`/tasks/${task.id}${source ? source : ''}`} className={cx('item', 'task', styles.hoverGlow)}>\n                <div className=\"task-checkbox\">\n                    <input type=\"checkbox\" style={{display: 'block', padding: 10}} checked={task.state === 'completed'} onClick={e => e.preventDefault()} onChange={e => onCompleteChange(task, e)}/>\n                </div>\n                <div className=\"task-title\" style={{color: task.state === 'incubated' ? '#999' : undefined}}>\n                    {task.state === 'completed' ? <span style={{textDecoration: 'line-through'}}>{renderTitle(task.title)}</span> : renderTitle(task.title)}\n                    {task.state === 'incubated' ? <span> [Incubated]</span> : null}\n                </div>\n                <div className=\"task-details\">\n                    <div className=\"tags\">\n                        {renderNote(task)}\n                        {renderDeferred(task)}\n                        {!skipProjectContext && <ContextTag contextId={task.contextId} /> }\n                        {!skipProjectContext && renderProject(task)}\n                    </div>\n                </div>\n            </NavLink>\n        );\n    };\n\n    const perspective = perspectives.find(x => x.id === perspectiveId) || defaultPerspective;\n    const nestedContexts = ContextActions.getNestedContexts(data);\n\n    let taskBlock: JSX.Element[] = [];\n\n    if (perspective.groupedContext) {\n        const filteredContextIds: (string|null)[] = ContextActions.getFilteredContextIds(contextId, data);\n\n        if (!contextId) {\n            filteredContextIds.push(null);\n        }\n\n        for (const contextId of filteredContextIds) {\n            const context = data.contexts.find(p => p.id === contextId);\n\n            let tasks = filterTasks(false, nestedContexts);\n\n            if (contextId) {\n                if (!context) {\n                    continue;\n                }\n\n                tasks = tasks.filter(t => t.contextId === contextId);\n\n                if (!tasks.length) {\n                    continue;\n                }\n\n                taskBlock.push(\n                    <div key={contextId} style={{display: 'flex', justifyContent: 'space-between', padding: '.6rem', background: '#00503C', cursor: 'pointer'}} onClick={() => setContextId(context.id)}>\n                        {context.title}\n                        <NavLink className=\"button small\" to={`/contexts/${context.id}`}>Edit</NavLink>\n                    </div>\n                )\n            } else {\n                tasks = tasks.filter(t => t.contextId === contextId);\n\n                if (!tasks.length) {\n                    continue;\n                }\n\n                taskBlock.push(<div key={'no-context'} style={{padding: '.6rem', background: '#00503C'}}>No Context</div>)\n            }\n\n            let stateOrder = [ProjectState.Active, ProjectState.Incubated, ProjectState.Completed, ProjectState.Dropped];\n    \n            const emptyActiveProjects: Project[] = [];\n    \n            let filteredProjects = data.projects;\n    \n            if (projectId !== null) {\n                filteredProjects = filteredProjects.filter(p => p.id === projectId);\n            }\n    \n            filteredProjects.sort((a, b) => stateOrder.indexOf(a.state) - stateOrder.indexOf(b.state)).forEach(p => {\n                let projectTasks = tasks.filter(t => t.projectId === p.id);\n    \n                if (!projectTasks.length) {\n                    if (p.state === ProjectState.Active) {\n                        if (contextId) {\n                            if (p.contextId && filteredContextIds.indexOf(p.contextId) !== -1) {\n                                emptyActiveProjects.push(p);\n                            }\n                        } else {\n                            emptyActiveProjects.push(p);\n                        }\n                    }\n                    return;\n                }\n    \n                taskBlock.push(\n                    <React.Fragment key={`p-${p.id}`}>\n                        <div className=\"header link\" onClick={() => { setProjectId(p.id); setContextId(p.contextId); }}>\n                            {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''}\n                            <div style={{display: 'flex'}}>\n                                <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\n                            </div>\n                        </div>\n                        {projectTasks.map(t => renderTask(t, true))}\n                    </React.Fragment>\n                );\n            });\n    \n            const noProjectTasks = tasks.filter(t => t.projectId === null);\n    \n            if (noProjectTasks.length) {\n                taskBlock.push(\n                    <React.Fragment key={`no-p-${contextId}`}>\n                        <div className=\"header\">No Project</div>\n                        {noProjectTasks.map(t => renderTask(t, true))}\n                    </React.Fragment>\n                );\n            }\n    \n            for(const p of emptyActiveProjects) {\n                if (p.contextId !== contextId) {\n                    continue;\n                }\n\n                taskBlock.push(\n                    <div className=\"header link\" onClick={() => { setProjectId(p.id); setContextId(p.contextId); }}>\n                        {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''} [Empty]\n                        <div style={{display: 'flex'}}>\n                            <div className=\"tags\">\n                                <ContextTag contextId={p.contextId} />\n                            </div>\n                            <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\n                        </div>\n                    </div>\n                );\n            }\n        }\n\n        if (options.showCompleted) {\n            taskBlock.push(\n                <React.Fragment key=\"completed\">\n                    <div className=\"header\">Completed</div>\n                    {_.orderBy(filterTasks(true, nestedContexts), x => x.stateChangedAt, 'desc').map(t => renderTask(t))}\n                </React.Fragment>\n            );\n        }\n\n    } else if (perspective.groupedProject) {\n        let tasks = filterTasks(false, nestedContexts);\n\n        let stateOrder = [ProjectState.Active, ProjectState.Incubated, ProjectState.Completed, ProjectState.Dropped];\n\n        const emptyActiveProjects: Project[] = [];\n\n        let filteredProjects = data.projects;\n\n        if (projectId !== null) {\n            filteredProjects = filteredProjects.filter(p => p.id === projectId);\n        }\n\n        const filteredContextIds = ContextActions.getFilteredContextIds(contextId, data);\n\n        filteredProjects.sort((a, b) => stateOrder.indexOf(a.state) - stateOrder.indexOf(b.state)).forEach(p => {\n            let projectTasks = tasks.filter(t => t.projectId === p.id);\n\n            if (!projectTasks.length) {\n                if (p.state === ProjectState.Active) {\n                    if (contextId) {\n                        if (p.contextId && filteredContextIds.indexOf(p.contextId) !== -1) {\n                            emptyActiveProjects.push(p);\n                        }\n                    } else {\n                        emptyActiveProjects.push(p);\n                    }\n                }\n                return;\n            }\n\n            taskBlock.push(\n                <React.Fragment key={`p-${p.id}`}>\n                    <div className=\"header link\" onClick={() => { setProjectId(p.id); setContextId(p.contextId); }}>\n                        {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''}\n                        <div style={{display: 'flex'}}>\n                            <div className=\"tags\">\n                                <ContextTag contextId={p.contextId} />\n                            </div>\n                            <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\n                        </div>\n                    </div>\n                    {projectTasks.map(t => renderTask(t))}\n                </React.Fragment>\n            );\n        });\n\n        const noProjectTasks = tasks.filter(t => t.projectId === null);\n\n        if (noProjectTasks.length) {\n            taskBlock.push(\n                <React.Fragment key=\"no-p\">\n                    <div className=\"header\">No Project</div>\n                    {noProjectTasks.map(t => renderTask(t))}\n                </React.Fragment>\n            );\n        }\n\n        for(const p of emptyActiveProjects) {\n            taskBlock.push(\n                <React.Fragment key={`p-${p.id}`}>\n                    <div className=\"header link\" onClick={() => { setProjectId(p.id); setContextId(p.contextId); }}>\n                        {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''} [Empty]\n                        <div style={{display: 'flex'}}>\n                            <div className=\"tags\">\n                                <ContextTag contextId={p.contextId} />\n                            </div>\n                            <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\n                        </div>\n                    </div>\n                </React.Fragment>\n            );\n        }\n\n        if (options.showCompleted) {\n            taskBlock.push(\n                <React.Fragment key=\"completed\">\n                    <div className=\"header\">Completed</div>\n                    {filterTasks(true, nestedContexts).map(t => renderTask(t))}\n                </React.Fragment>\n            );\n        }\n    } else {\n        taskBlock.push(\n            <React.Fragment key=\"tasks\">\n                {filterTasks(false, nestedContexts).map(t => renderTask(t))}\n                {options.showCompleted && <>\n                    <div className=\"header\">Completed</div>\n                    {filterTasks(true, nestedContexts).map(t => renderTask(t))}\n                </>}\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <div style={{display: 'flex', height: '100%'}}>\n            {options.showContextBar && <ContextBar contextId={contextId} onChange={setContextId} showTaskCount={true} />}\n            <div style={{width: '100%'}}>\n                <ToolSection>\n                    <SettingsCompactor alwaysVisible={() => (\n                        <div className=\"button\" onClick={() => { setContextId(null); setProjectId(null); }}>R</div>\n                    )} mobileOnly={() => (\n                        <div className=\"button\" style={{marginLeft: 'auto', marginRight: 8}} onClick={() => setOptions({ ...options, showContextBar: !options.showContextBar })}>C</div>\n                    )}>\n                        <select style={{padding: '0.3rem', display: 'block'}} value={contextId || ''} onChange={e => setContextId(e.target.value === '' ? null : e.target.value) }>\n                            <option value=\"\">All contexts</option>\n                            {data.contexts.map(c => (\n                                <option key={c.id} value={c.id}>{c.title}</option>\n                            ))}\n                        </select>\n                        <select style={{padding: '0.3rem', display: 'block'}} value={projectId || ''} onChange={e => setProjectId(e.target.value === '' ? null : e.target.value)}>\n                            <option value=\"\">All projects</option>\n                            {data.projects.filter(c => c.state === ProjectState.Active).map(c => (\n                                <option key={c.id} value={c.id}>{c.title}</option>\n                            ))}\n                        </select>\n                        <select style={{padding: '0.3rem', display: 'block'}} value={perspectiveId || ''} onChange={e => setPerspectiveId(e.target.value === '' ? null : e.target.value)}>\n                            <option value=\"\">Select Perspective</option>\n                            {perspectives.map(c => (\n                                <option key={c.id} value={c.id}>{c.title}</option>\n                            ))}\n                        </select>\n                        <div>\n                            <input id=\"completed-box\" type=\"checkbox\" checked={options.showCompleted} onChange={() => setOptions({ ...options, showCompleted: !options.showCompleted })} />\n                            <label htmlFor=\"completed-box\">Show completed</label>\n                        </div>\n                        <div>\n                            <input id=\"deferred-box\" type=\"checkbox\" checked={options.showDeferred} onChange={() => setOptions({ ...options, showDeferred: !options.showDeferred })} />\n                            <label htmlFor=\"deferred-box\">Show deferred</label>\n                        </div>\n                        <div>\n                            <input id=\"incubated-box\" type=\"checkbox\" checked={options.showIncubated} onChange={() => setOptions({ ...options, showIncubated: !options.showIncubated })} />\n                            <label htmlFor=\"incubated-box\">Show incubated</label>\n                        </div>\n                        <div>\n                            <input id=\"context-box\" type=\"checkbox\" checked={options.showContextBar} onChange={() => setOptions({ ...options, showContextBar: !options.showContextBar })} />\n                            <label htmlFor=\"context-box\">Show context bar</label>\n                        </div>\n                        <div>\n                            <input id=\"include-nested-box\" type=\"checkbox\" checked={options.includeNested} onChange={() => setOptions({ ...options, includeNested: !options.includeNested })} />\n                            <label htmlFor=\"include-nested-box\">Include nested contexts</label>\n                        </div>\n                    </SettingsCompactor>\n                    <input type=\"text\" className=\"input is-large is-wide\" placeholder=\"Add task...\" value={text} onChange={e => setText(e.target.value)} onKeyPress={onKeyPress} />\n                </ToolSection>\n                <div className=\"list\">\n                    {taskBlock}\n                </div>\n            </div>\n        </div>\n    );\n};\n","import {createInstance} from 'localforage';\n\nconst draftStore = createInstance({ name: 'drafts' });\n\nfunction getDraftKey(id: string|undefined) {\n    if(!id) {\n        return 'draft-new';\n    }\n\n    return `draft-${id}`;\n}\n\nexport async function hasDraft(id: string|undefined) {\n    const draft = await draftStore.getItem<string>(getDraftKey(id));\n    return !!draft;\n}\n\nexport async function getDraftIds() {\n    const keys = await draftStore.keys();\n    return keys.map(k => k.replace('draft-', ''));\n}\n\nexport async function getDraft(id: string|undefined) {\n    return await draftStore.getItem<string>(getDraftKey(id));\n}\n\nexport async function setDraft(id: string|undefined, text: string) {\n    return await draftStore.setItem(getDraftKey(id), text);\n}\n\nexport async function clearDraft(id: string|undefined) {\n    return await draftStore.removeItem(getDraftKey(id));\n}","import * as React from 'react';\n\nexport function TagInput(props: { tagState: TagState, onChange: (tagState: TagState) => void }) {\n    const [focus, setFocus] = React.useState(false)\n\n    const timeoutId = React.useRef<number|undefined>(undefined);\n    const tagInput = React.useRef<any>();\n\n    function onTextChange(e: React.ChangeEvent<HTMLInputElement>) {\n        props.onChange(props.tagState.withText(e.target.value))\n    }\n\n    function onKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'ArrowUp') {\n            props.onChange(props.tagState.decrementIndex());\n        } else if (e.key === 'ArrowDown') {\n            props.onChange(props.tagState.incrementIndex());\n        } else if (e.key === 'Enter') {\n            if (props.tagState.text === '') {\n                props.onChange(props.tagState.addSelectedTag());\n            } else {\n                props.onChange(props.tagState.addText());\n            }\n        } else if (e.key === 'Tab') {\n            props.onChange(props.tagState.addSelectedTag());\n            e.preventDefault();\n        } else if (e.key === 'Backspace') {\n            if (props.tagState.text === '') {\n                props.onChange(props.tagState.reopenLastTag());\n            }\n        }\n    }\n\n    function onClickTag(tag: string) {\n        props.onChange(props.tagState.addTag(tag));\n        tagInput.current.focus();\n    }\n\n    function onFocus() {\n        clearTimeout(timeoutId.current);\n\n        if(focus) {\n            return;\n        }\n\n        setFocus(true);\n    }\n\n    function onBlur() {\n        if(!focus) {\n            return;\n        }\n\n        timeoutId.current = setTimeout(() => {\n            setFocus(false);\n        }, 100) as any;\n    }\n\n    return (\n        <div className=\"tag-input\" onFocus={() => onFocus()} onBlur={() => onBlur()}>\n            <div className=\"tags\">\n                {props.tagState.selectedTags.map((t, i) => <Tag key={`tag-${t}-${i}`} name={t} />)}\n                <input ref={tagInput} placeholder=\"Tag\" type=\"text\" className=\"\" onChange={e => onTextChange(e)} onKeyDown={e => onKeyPress(e)} value={props.tagState.text} />\n            </div>\n            {focus && props.tagState.getFilteredAvailableTags().length > 0 &&\n                <div className=\"panel\">\n                    {props.tagState.getFilteredAvailableTags().slice(0, 10).map((t, i) => <div key={`available-tag-${t}`} style={props.tagState.index === i ? { background: '#078263'} : {}} onClick={() => onClickTag(t)}>{t}</div>)}\n                </div>\n            }\n        </div>\n    );\n}\n\nexport class TagState {\n    availableTags: string[];\n    selectedTags: string[];\n    text: string;\n    index: number;\n\n    constructor(availableTags: string[], selectedTags: string[], text = \"\", index = 0) {\n        this.availableTags = availableTags;\n        this.selectedTags = selectedTags;\n        this.text = text;\n        this.index = index;\n    }\n\n    withText(text: string) {\n        return new TagState(this.availableTags, this.selectedTags, text, this.index);\n    }\n\n    withAvailableTags(availableTags: string[]) {\n        return new TagState(availableTags, this.selectedTags, this.text, this.index);\n    }\n\n    withSelectedTags(selectedTags: string[]) {\n        return new TagState(this.availableTags, selectedTags, this.text, this.index);\n    }\n\n    decrementIndex() {\n        return new TagState(this.availableTags, this.selectedTags, this.text, Math.max(0, this.index - 1));\n    }\n\n    incrementIndex() {\n        return new TagState(this.availableTags, this.selectedTags, this.text, Math.max(0, Math.min(this.availableTags.length - 1, this.index + 1)));\n    }\n\n    addSelectedTag() {\n        return new TagState(this.availableTags, this.selectedTags.concat([this.getFilteredAvailableTags()[this.index]]), '', 0);\n    }\n\n    addTag(tag: string) {\n        return new TagState(this.availableTags, this.selectedTags.concat([tag]), '', 0);\n    }\n\n    addText() {\n        return new TagState(this.availableTags, this.selectedTags.concat([this.text]), '', 0);\n    }\n\n    reopenLastTag() {\n        const lastTag = this.selectedTags[this.selectedTags.length - 1];\n        return new TagState(this.availableTags, this.selectedTags.slice(0, this.selectedTags.length - 1), lastTag, 0);\n    }\n\n    getFilteredAvailableTags() {\n        return this.availableTags.filter(t => this.selectedTags.indexOf(t) === -1).filter(t => t.toLowerCase().indexOf(this.text) !== -1);\n    }\n\n    getTags() {\n        return this.selectedTags.join(' ');\n    }\n}\n\nexport const Tag: React.FC<{ name: string }> = props => {\n    return (\n        <div className=\"tag is-dark\">{props.name}</div>\n    );\n}\n\nexport const TagList: React.FC<{tags: string}> = props => {\n    return (\n        <div className=\"tags\" style={{marginBottom: 0}}>{props.tags && props.tags.split(' ').map((t, i) => <Tag key={i} name={t} />)}</div>\n    );\n}","import { Entity } from \"./db\";\nimport moment from \"moment\";\n\nexport type NoteMode = 'markdown'|'tree';\n\nexport interface Note extends Entity {\n    type: 'note',\n    mode: NoteMode|null;\n    title: string;\n    tags: string;\n    content: string;\n    contextId: string|null;\n    noteFor: Reference|null;\n    dailyDate: string|null;\n};\n\nexport interface Reference {\n    type: string;\n    id: string;\n};\n\nexport interface HasNote extends Entity {\n    noteId: string|null;\n}\n\nexport function getNoteTitle(note: Pick<Note, 'dailyDate'|'title'|'content'>) {\n    if (note.dailyDate) {\n        return `Daily - ${moment(note.dailyDate).format('MMMM Do, YYYY')}`;\n    }\n\n    if (note.title && note.title.length) {\n        return note.title;\n    }\n\n    const parsedTitle = /# (.+)/.exec(note.content);\n\n    if (parsedTitle && parsedTitle.length > 1) {\n        return parsedTitle[1];\n    }\n\n    return '';\n}\n\nexport const noteReferenceRegex = /\\[\\[([^\\]]+)\\]\\]/ig;\n\nfunction escapeRegExp(str: string) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nexport function getNoteContextTitlePrefixRegExp(contextTitle: string) {\n    return new RegExp(`^${escapeRegExp(contextTitle)}/`, 'i')\n}\n\nexport function getNoteTitleMatchRegExp(reference: string) {\n    return new RegExp(`^${escapeRegExp(reference)}$`, 'i')\n}\n\nexport function getNoteReferenceMatchRegExp(reference: string) {\n    return new RegExp(`\\\\[\\\\[${escapeRegExp(reference)}\\\\]\\\\]`, 'i')\n}\n\nexport function getNoteAliasReferenceMatchRegExp(alias: string) {\n    return new RegExp(`\\\\B@${escapeRegExp(alias)}`, 'i')\n}\n\nexport function extractReferences(text: string) {\n    if(!text) {\n        return [];\n    }\n\n    const regex = /\\[\\[([^\\]]+)\\]\\]/ig;\n    const results = [];\n    for(const match of text.matchAll(regex)) {\n        results.push(match[1])\n    }\n\n    return results;\n}\n\nexport function extractAllReferences(notes: Note[]) {\n    const results: { [reference: string]: { title: string, contextId: string|null, updatedAt: Date } } = {};\n\n    function getKey(title: string, contextId: string|null) {\n        return `${contextId}-${title.toLowerCase()}`\n    }\n\n    const existing = new Set<string>(notes.filter(n => n.title).map(n => getKey(n.title, n.contextId)));\n\n    for(const note of notes) {\n        const references = extractReferences(note.content);\n\n        for(const reference of references) {\n            const key = getKey(reference, note.contextId);\n            \n            if (existing.has(key)) {\n                continue;\n            }\n            \n            const existingResult = results[key];\n\n            if (existingResult && existingResult.updatedAt > new Date(note.updatedAt)) {\n                continue;\n            }\n\n            results[key] = {\n                title: reference,\n                contextId: note.contextId,\n                updatedAt: new Date(note.updatedAt)\n            };\n        }\n    }\n\n    return Object.values(results);\n}","import { Entity } from \"./db\";\nimport { HasNote } from \"./note\";\n\nexport interface Person extends Entity, HasNote {\n    type: 'person';\n    name: string;\n    alias: string|null;\n    birthday: string|null;\n}\n\nexport const mentionRegex = /\\B(@[^\\s()[\\].,!:]+)/g;\n\nexport function convertNameToAlias(name: string) {\n    if(!name) {\n        return null;\n    }\n\n    return name.toLowerCase().replace(/ /g, '_');\n}\n\nexport function getAlias(person: Person) {\n    return `${person.alias || convertNameToAlias(person.name)}`;\n}","import * as React from 'react';\nimport marked from 'marked';\nimport '../github-markdown.css';\nimport { useData } from '../model';\nimport { getNoteTitleMatchRegExp, getNoteContextTitlePrefixRegExp, noteReferenceRegex } from '../db/note';\nimport {useHistory} from 'react-router-dom';\nimport { mentionRegex, getAlias } from '../db/person';\n\n\nexport const MarkedViewer: React.FC<{ markdown: string; contextId: string|null }> = props => {\n    const history = useHistory();\n    const {data} = useData();\n\n    (window as any).lifeNavigate = function(url: string) {\n        history.push(url);\n        return false;\n    };\n\n    let markdown = props.markdown.replace(noteReferenceRegex, (_, group1) => {\n        let matchContextId = props.contextId;\n        let matchTitle = group1;\n\n        const prefixContext = data.contexts.find(x => getNoteContextTitlePrefixRegExp(x.title).test(group1));\n        if (prefixContext) {\n            matchTitle = matchTitle.substring(prefixContext.title.length + 1);\n            matchContextId = prefixContext.id;\n        }\n\n        const referenceRegExp = getNoteTitleMatchRegExp(matchTitle);\n        const note = data.notes.find(x => x.contextId === matchContextId && referenceRegExp.test(x.title));\n\n        if (note) {\n            const url = `/notes/${note.id}`;\n            return `<span style=\"color: #444\">[[ </span><a onclick=\"return lifeNavigate('${url}')\" href=\"${url}\">${group1}</a><span style=\"color: #444\"> ]]</span>`;\n        }\n\n        const url = `/notes/virtual?title=${encodeURIComponent(group1)}${props.contextId ? `&context=${props.contextId}` : ''}&source=${encodeURIComponent(`${window.location.pathname}`)}`;\n        return `<span style=\"color: #444\">[[ </span><a onclick=\"return lifeNavigate('${url}')\" href=\"${url}\">${group1}</a><span style=\"color: #444\"> ? ]]</span>`;\n    });\n\n    markdown = markdown.replace(mentionRegex, (_, group1) => {\n        const person = data.people.find(x => `@${getAlias(x)}` === group1);\n\n        if (person) {\n            const url = `/people/${person.id}?source=${encodeURIComponent(`${window.location.pathname}`)}`;\n            return `<a onclick=\"return lifeNavigate('${url}')\" href=\"${url}\" style=\"background: #333; padding: 0px 4px; border-radius: 4px\">${person.name}</a>`;\n        }\n\n        const url = `/people/virtual?alias=${encodeURIComponent(group1)}&source=${encodeURIComponent(`${window.location.pathname}`)}`;\n        return `<a onclick=\"return lifeNavigate('${url}')\" href=\"${url}\" style=\"background: #333; padding: 0px 4px; border-radius: 4px\">${group1}</a><span style=\"color: #444\"> ?</span>`;\n    });\n\n    const html = marked(markdown);\n    return (\n        <div className=\"marked-viewer note markdown-body\" dangerouslySetInnerHTML={{ __html: html }}></div>\n    );\n};","import * as React from 'react';\nimport { MarkedViewer } from './MarkedViewer';\nimport * as styles from '../layout/styles';\nimport { NoteMode } from '../db/note';\n\nimport AceEditor from \"react-ace\";\nimport {textCompleter, snippetCompleter, keyWordCompleter} from \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/mode-markdown\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport { Data } from '../model';\nimport { cx } from 'emotion';\n\nexport enum SplitMode {\n    Split,\n    Editor,\n    Preview\n}\n\nexport const NoteModeSelector: React.SFC<{mode: NoteMode, onModeChange: (mode: NoteMode) => void}> = props => (\n    <div className={cx(styles.horizontalSpace('.5rem'))}>\n        <button className=\"button\" style={{background: !props.mode || props.mode !== 'markdown' ? '#444' : undefined}} onClick={() => props.onModeChange('markdown')}>Markdown</button>\n        <button className=\"button\" style={{background: props.mode !== 'tree' ? '#444' : undefined}} onClick={() => props.onModeChange('tree')}>Tree</button>\n    </div>\n);\n\n\nexport const SplitModeSelector: React.SFC<{mode: SplitMode, onModeChange: (mode: SplitMode) => void}> = props => (\n    <div className={cx(styles.horizontalSpace('.5rem'))}>\n        <button className=\"button\" style={{background: props.mode !== SplitMode.Split ? '#444' : undefined}} onClick={() => props.onModeChange(SplitMode.Split)}>Split</button>\n        <button className=\"button\" style={{background: props.mode !== SplitMode.Editor ? '#444' : undefined}} onClick={() => props.onModeChange(SplitMode.Editor)}>Editor</button>\n        <button className=\"button\" style={{background: props.mode !== SplitMode.Preview ? '#444' : undefined}} onClick={() => props.onModeChange(SplitMode.Preview)}>Preview</button>\n    </div>\n);\n\nexport class SimpleSplitEditor extends React.Component<{ text: string, onTextChanged: (text: string) => void, expand?: boolean, mode: SplitMode, data: Data, contextId: string|null }, {}> {\n\n    render() {\n        const style: React.CSSProperties = {};\n\n        if(this.props.expand) {\n            style.width = '100%';\n            style.height = '100%';\n            style.zIndex = 100;\n            style.display = 'flex';\n            style.maxHeight = '100%';\n        }\n\n        const border = '1px solid #666';\n        const components = [];\n\n        let textAreaStyle: React.CSSProperties = {\n            flexGrow: 1, \n            minWidth: '50%', \n            borderTop: border, \n            height: '100%'\n        };\n\n        let markedStyle: React.CSSProperties = {\n            flexGrow: 1, \n            minWidth: '50%', \n            background: 'transparent', \n            padding: '1rem', \n            borderTop: border\n        };\n\n        if (this.props.mode === SplitMode.Split) {\n            textAreaStyle.borderRight = border;\n            markedStyle.overflowY = 'scroll';\n        }\n\n        if (this.props.mode === SplitMode.Editor || this.props.mode === SplitMode.Split) {\n            components.push(\n                    <AceEditor \n                        key=\"editor\"\n                        value={this.props.text} \n                        fontSize={18}\n                        style={textAreaStyle}\n                        onChange={e => this.props.onTextChanged(e)} \n                        mode=\"markdown\"\n                        theme=\"monokai\"\n                        showGutter={false} \n                        showPrintMargin={false}\n                        wrapEnabled={true}\n                        enableBasicAutocompletion={[snippetCompleter, textCompleter, keyWordCompleter] as any}\n                        enableLiveAutocompletion={true}\n                        enableSnippets={true}\n                    />\n            );\n        }\n\n        if (this.props.mode === SplitMode.Preview || this.props.mode === SplitMode.Split) {\n            components.push(\n                <div key=\"2\" style={markedStyle}>\n                    <MarkedViewer markdown={this.props.text} contextId={this.props.contextId} />\n                </div>\n            );\n        }\n\n        return (\n            <div style={style}>\n                {components}\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { useState, useRef } from 'react';\nimport { horizontalSpace } from '../layout/styles';\nimport { MarkedViewer } from './MarkedViewer';\nimport AceEditor, { ICommand } from \"react-ace\";\n\nimport {textCompleter, snippetCompleter, keyWordCompleter} from \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/mode-markdown\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport ReactAce from 'react-ace/lib/ace';\nimport { Loader } from './Loader';\nimport { extractReferences } from '../db/note';\nimport { useData } from '../model';\nimport { cx } from 'emotion';\nimport { getAlias } from '../db/person';\n\ninterface Node {\n    text: string;\n    nodes: Node[];\n}\n\nexport const TreeEditor: React.FC<{text: string, onTextChanged: (text: string) => void, contextId: string|null}> = (props) => {\n    const {data} = useData();\n    const [invalid] = useState(() => {\n        if (!props.text || props.text === '') {\n            return false;\n        }\n        try {\n            JSON.parse(props.text);\n            return false;\n        } catch {\n            return true;\n        }\n    })\n\n    const [nodes, setNodes] = useState<Node[]>(() => {\n        if (invalid) {\n            return [];\n        }\n\n        if (!props.text || props.text === '') {\n            return [\n                { text: '', nodes: [] }\n            ];\n        }\n\n        return JSON.parse(props.text);\n    });\n\n    const inputRef = useRef<ReactAce>(null);\n    const [active, setActive] = useState(nodes[0]);\n\n    const [noteTitles, setNoteTitles] = React.useState<string[]>();\n\n    React.useEffect(() => {\n        const noteCompletions  = data.notes.map(n => {\n            let result = extractReferences(n.content);\n\n            if (n.title && n.title.length) {\n                result.push(n.title);\n            }\n\n            if (n.contextId !== props.contextId) {\n                const context = data.contexts.find(c => c.id === n.contextId);\n\n                if (context) {\n                    result = result.map(x => `${context.title}/${x}`)\n                }\n            }\n\n            return result;\n        }).flat().filter(t => t !== null);\n\n        setNoteTitles(noteCompletions);\n    }, [props.contextId, data.contexts, data.notes]);\n\n    const [peopleAliases, setPeopleAliases] = React.useState<string[]>();\n\n    React.useEffect(() => {\n        const aliases  = data.people.map(n => getAlias(n)).filter(t => t !== null);\n        setPeopleAliases(aliases);\n    }, [data.people]);\n\n    if (invalid) {\n        return (\n            <div>Invalid tree content (not valid JSON).</div>\n        )\n    }\n\n    if (!noteTitles || !peopleAliases) {\n        return <Loader />;\n    }\n\n    const updateText = () => {\n        props.onTextChanged(JSON.stringify(nodes));\n    }\n\n    const onInputChanged = (node: Node, value: string) => {\n        node.text = value;\n        setNodes([...nodes]);\n        updateText();\n    };\n\n    const getParentNode = (targetNode: Node, searchNodes: Node[] = nodes, parentNode: Node|null = null): Node|null => {\n      for(const node of searchNodes) {\n          if (node === targetNode) {\n              return parentNode;\n          }\n\n          const childResult = getParentNode(targetNode, node.nodes, node);\n          if (childResult) {\n              return childResult;\n          }\n      }\n\n      return null;\n    };\n\n    const preorderTraversal = () => {\n        const result: Node[] = [];\n        const stack = [...nodes].reverse();\n\n        while(stack.length) {\n            let node = stack.pop();\n\n            if (!node) {\n                return result;\n            }\n\n            result.push(node);\n\n            for(let childNode of [...node.nodes].reverse()) {\n                stack.push(childNode);\n            }\n\n        }\n\n        return result;\n    };\n\n    const insertNode = (afterNode: Node, above = false) => {\n        const parentNode = getParentNode(afterNode);\n        const searchNodes = parentNode ? parentNode.nodes : nodes;\n        const nodeIndex = searchNodes.findIndex(x => x === afterNode);\n        const node: Node = { text: '', nodes: [] };\n        searchNodes.splice(nodeIndex + (above ? 0 : 1), 0, node);\n        setNodes([...nodes]);\n        return node;\n    };\n\n    const removeNode = (node: Node) => {\n        const parentNode = getParentNode(node);\n        const searchNodes = parentNode ? parentNode.nodes : nodes;\n        const nodeIndex = searchNodes.findIndex(x => x === node);\n        searchNodes.splice(nodeIndex, 1);\n        setNodes([...nodes]);\n        return node;\n    };\n\n    const removeNodeIfEmpty = (node: Node) => {\n        if (node.text.length || node.nodes.length) {\n            return;\n        }\n        removeNode(node);\n    };\n\n    const indentNode = (node: Node) => {\n        const parentNode = getParentNode(node);\n        const searchNodes = parentNode ? parentNode.nodes : nodes;\n        const nodeIndex = searchNodes.findIndex(x => x === node);\n\n        if (nodeIndex === 0) {\n            return;\n        } else {\n            searchNodes.splice(nodeIndex, 1);\n            searchNodes[nodeIndex - 1].nodes.push(node);\n            setNodes([...nodes]);\n        }\n    };\n\n    const unindentNode = (node: Node) => {\n        const parentNode = getParentNode(node);\n\n        if(parentNode === null) {\n            return;\n        }\n\n        const parentParentNode = getParentNode(parentNode);\n        const targetNodes = parentParentNode ? parentParentNode.nodes : nodes;\n        const parentNodeIndex = targetNodes.findIndex(x => x === parentNode);\n        targetNodes.splice(parentNodeIndex + 1, 0, node);\n        const nodeIndex = parentNode.nodes.findIndex(x => x === node);\n        parentNode.nodes.splice(nodeIndex, 1);\n\n        setNodes([...nodes]);\n    };\n\n    const commands: ICommand[] = [\n        { name: 'indent', bindKey: { win: 'tab', mac: 'tab' }, exec: () => {\n            setTimeout(() => {\n                indentNode(active);\n            }, 0);\n            return true;\n        }},\n        { name: 'unindent', bindKey: { win: 'shift+tab', mac: 'shift+tab' }, exec: () => {\n            setTimeout(() => {\n                unindentNode(active);\n            }, 0);\n            return true;\n        }},\n        { name: 'enter', bindKey: { win: 'enter', mac: 'enter' }, exec: () => {\n            if (active.text === '') {\n                return;\n            }\n            const above = inputRef.current && inputRef.current.editor.getCursorPosition().row === 0 && inputRef.current.editor.getCursorPosition().column === 0;\n            setTimeout(() => {\n                const newNode = insertNode(active, !!above);\n                setActive(newNode);\n            }, 0);\n            return true;\n        }},\n        { name: 'up', bindKey: { win: 'up', mac: 'up' }, exec: () => {\n            const searchNodes = preorderTraversal();\n            let activeIndex = searchNodes.findIndex(x => x === active);\n            activeIndex = Math.max(0, activeIndex - 1);\n            setTimeout(() => {\n                setActive(searchNodes[activeIndex]);\n                removeNodeIfEmpty(active);\n            }, 0);\n            return true;\n        }},\n        { name: 'down', bindKey: { win: 'down', mac: 'down' }, exec: () => {\n            const searchNodes = preorderTraversal();\n            let activeIndex = searchNodes.findIndex(x => x === active);\n            activeIndex = Math.min(searchNodes.length - 1, activeIndex + 1);\n            setTimeout(() => {\n                setActive(searchNodes[activeIndex]);\n                removeNodeIfEmpty(active);\n            }, 0);\n            return true;\n        }},\n        { name: 'space', bindKey: { win: 'space', mac: 'space' }, exec: () => {\n            const atStart = inputRef.current && inputRef.current.editor.getCursorPosition().row === 0 && inputRef.current.editor.getCursorPosition().column === 0;\n            if (atStart) {\n                setTimeout(() => {\n                    indentNode(active);\n                }, 0);\n                return true;\n            }\n            return false;\n        }},\n        { name: 'backspace', bindKey: { win: 'backspace', mac: 'backspace' }, exec: () => {\n            const atStart = inputRef.current && inputRef.current.editor.getCursorPosition().row === 0 && inputRef.current.editor.getCursorPosition().column === 0;\n            if (atStart) {\n                setTimeout(() => {\n                    unindentNode(active);\n                }, 0);\n                return true;\n            }\n            return false;\n        }}\n    ];\n\n    // Look at https://github.com/ajaxorg/ace/blob/41ac47ec9e26f65fe0ffedeedf14b525a22f5462/lib/ace/ext/language_tools.js#L42-L48\n    const completions = {\n        getCompletions: (editor: any, session: any, pos: any, prefix: any, callback: CompletionCallback) => {\n            // console.log('editor', editor, 'session', session, 'pos', pos, 'prefix', prefix, 'callback', callback);\n            const token = session.getTokenAt(pos.row, pos.column);\n\n            if (!token) {\n                return;\n            }\n            \n            function hasPrefix(requiredPrefix: string) {\n                const strWithPrefix = token.value.substring(pos.column - prefix.length - requiredPrefix.length);\n                return strWithPrefix.startsWith(requiredPrefix);\n            }\n\n            if (hasPrefix('[[')) {\n                const completions = noteTitles.map(n => ({\n                    caption: n,\n                    snippet: n,\n                    meta: 'note',\n                }))\n\n                callback(null, completions);\n            } else if (hasPrefix('@')) {\n                const completions = peopleAliases.map(n => ({\n                    caption: n,\n                    snippet: n,\n                    meta: 'person',\n                }))\n\n                callback(null, completions);\n            }\n        }\n    }\n\n    const renderNode = (node: Node, index: number, level: number) => {\n        const isActive = node === active;\n        return (\n            <React.Fragment key={`${level}-${index}`}>\n                <div style={{display: 'flex', background: isActive ? '#292929' : undefined, padding: '.6rem .8rem'}} onClick={() => { if(!isActive) { setActive(node); }; }}>\n                    <div style={{letterSpacing: '.5rem', color: isActive ? '#078263' : '#777', lineHeight: 1.5}}>•</div>\n                    {isActive\n                        ? <AceEditor\n                            key=\"editor\"\n                            ref={inputRef}\n                            value={node.text}\n                            fontSize={16}\n                            style={{background: 'transparent', width: '100%'}}\n                            onChange={e => onInputChanged(node, e)}\n                            mode=\"markdown\"\n                            theme=\"monokai\"\n                            focus\n                            highlightActiveLine={false}\n                            showGutter={false}\n                            showPrintMargin={false}\n                            wrapEnabled={true}\n                            maxLines={Infinity}\n                            commands={commands}\n                            enableBasicAutocompletion={[completions, snippetCompleter, textCompleter, keyWordCompleter] as any}\n                            enableLiveAutocompletion={true}\n                            enableSnippets={true}\n                            />\n                        : <MarkedViewer markdown={node.text} contextId={props.contextId} />}\n                </div>\n                <div style={{borderLeft: '1px solid #555', marginLeft: 16, paddingLeft: 16}}>\n                    {node.nodes.map((n, i) => renderNode(n, i, level + 1))}\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    return (\n        <>\n            <div style={{display: 'flex', background: '#444', position: 'fixed', height: 36, bottom: 0, left: 0, right: 0}} className={cx(horizontalSpace('.5rem'))}>\n                    <div className=\"button\" onClick={e => { unindentNode(active); inputRef.current && inputRef.current.editor.focus(); }}>&larr;</div>\n                    <div className=\"button\" onClick={e => { indentNode(active); inputRef.current && inputRef.current.editor.focus(); }}>&rarr;</div>\n                    <div className=\"button\" onClick={e => {\n                        if (!inputRef.current) {\n                            return;\n                        }\n                        inputRef.current.editor.session.insert(inputRef.current.editor.getCursorPosition(), '[[');\n                        inputRef.current.editor.focus();\n                    }}>[[</div>\n                    <div className=\"button\" onClick={e => {\n                        if (!inputRef.current) {\n                            return;\n                        }\n                        inputRef.current.editor.session.insert(inputRef.current.editor.getCursorPosition(), ']]');\n                        inputRef.current.editor.focus();\n                    }}>]]</div>\n            </div>\n            <div style={{height: '100%', marginBottom: 36}}>\n                {nodes.map((n, i) => renderNode(n, i, 0))}\n            </div>\n        </>\n    );\n};\n\ninterface Completion {\n    value?: string;\n    meta: string;\n    type?: string;\n    caption?: string;\n    snippet?: any;\n    score?: number;\n    exactMatch?: number;\n    docHTML?: string;\n}\n\ntype CompletionCallback = (error: Error|null, results: Completion[]) => void;","import * as React from 'react';\nimport { Data } from '../model';\nimport { ContextState } from '../db/context';\nimport _ from 'lodash';\n\nexport const ContextSelector: React.FC<{contextId: string|null, data: Data, onChange: (contextId: string|null) => void}> = (props) => {\n    const activeContexts = _.orderBy(props.data.contexts.filter(x => x.state === ContextState.Active), x => x.title);\n    const inactiveContexts = _.orderBy(props.data.contexts.filter(x => x.state !== ContextState.Active), x => x.title);\n\n    return (\n        <select className=\"input is-large\" value={props.contextId || ''} onChange={e => props.onChange(e.target.value)}>\n            <option value=\"\">Not set</option>\n            {activeContexts.map(c => (<option key={c.id} value={c.id}>{c.title}</option>))}\n            <option value=\"--inactive--\" disabled>-- Inactive</option>\n            {inactiveContexts.map(c => (<option key={c.id} value={c.id}>{c.title}</option>))}\n        </select>\n    );\n}","import * as React from 'react';\nimport * as draftStorage from '../draftStorage';\nimport { TagInput, TagState } from './TagInput';\nimport { ToolSection } from '../framework/ToolSection';\nimport { SimpleSplitEditor, SplitMode, SplitModeSelector, NoteModeSelector } from './SimpleSplitEditor';\nimport { isMobile } from './Layout';\nimport { db } from '../db/db';\nimport { Reference, NoteMode, getNoteTitle } from '../db/note';\nimport { TreeEditor } from './TreeEditor';\nimport { SettingsCompactor } from './SettingsCompactor';\nimport './NoteEditor.scss';\nimport { Loader } from '../components/Loader';\nimport { ContextSelector } from '../components/ContextSelector';\nimport { Data } from '../model';\nimport moment from 'moment';\n\nexport class NoteEditor extends React.Component<{onNoteAdded: () => void, id?: string, title?: string, text?: string, tags?: string, contextId: string|null, availableTags: string[], noteFor: Reference|null, noteMode?: NoteMode, data: Data, dailyDate: string|null}, {title: string, text: string, tags: string, tagState: TagState, splitMode: SplitMode, noteMode: NoteMode, contextId: string|null, loaded: boolean, dailyDate: string|null}> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            loaded: false,\n            title: '', \n            text: '', \n            tags: '', \n            tagState: new TagState([], []), \n            splitMode: isMobile() ? SplitMode.Editor : SplitMode.Split, \n            noteMode: 'tree',\n            contextId: null,\n            dailyDate: null,\n        };\n\n        this.onTextChanged = this.onTextChanged.bind(this);\n        this.onSave = this.onSave.bind(this);\n    }\n\n    async componentDidMount() {\n        const draft = await draftStorage.getDraft(this.props.id);\n\n        const title = this.props.title;\n        let text = this.props.text;\n        const tags = this.props.tags;\n        const noteMode = this.props.noteMode;\n        const contextId = this.props.contextId;\n        const dailyDate = this.props.dailyDate;\n\n        let state: any = {};\n\n        if (draft !== null && draft !== text && draft.length > 0) {\n            text = draft;\n        }\n\n        if (title !== undefined) {\n            state.title = title;\n        }\n        \n        if (text !== undefined) {\n            state.text = text;\n        }\n\n        if (noteMode !== undefined) {\n            state.noteMode = noteMode;\n        }\n\n        if (contextId !== undefined) {\n            state.contextId = contextId;\n        }\n\n        if (dailyDate !== undefined) {\n            state.dailyDate = dailyDate;\n        }\n\n        state.tagState = this.state.tagState\n            .withAvailableTags(this.props.availableTags);\n\n        if (tags && tags.length > 0) {\n            state.tagState = state.tagState.withSelectedTags(tags.split(' '));\n        }\n\n        state.loaded = true;\n        this.setState(state);\n    }\n\n    componentWillReceiveProps(props: any) {\n        this.setState({tagState: this.state.tagState.withAvailableTags(props.availableTags)});\n    }\n\n    onTitleChanged(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({ title: e.target.value });\n    }\n\n    onTextChanged(text: string) {\n        if (text !== this.props.text) {\n            draftStorage.setDraft(this.props.id, text);\n        }\n\n        this.setState({text})\n    }\n\n    async onSave() {\n        const id = this.props.id || null;\n\n        if (id) {\n            let note = await db.notes.get(id);\n\n            if (note === null) {\n                throw new Error('Note is null?');\n            }\n\n            note.title = this.state.title;\n            note.content = this.state.text;\n            note.tags = this.state.tagState.getTags();\n            note.mode = this.state.noteMode;\n            note.contextId = this.state.contextId;\n            note.dailyDate = this.state.dailyDate;\n\n            await db.notes.save(note);\n        } else {\n            await db.notes.create({\n                title: this.state.title,\n                content: this.state.text,\n                tags: this.state.tagState.getTags(),\n                noteFor: null,\n                mode: this.state.noteMode,\n                contextId: this.state.contextId,\n                dailyDate: this.state.dailyDate\n            });\n        }\n\n        await draftStorage.clearDraft(this.props.id);\n        this.props.onNoteAdded();\n    }\n\n    render() {\n        const updateDailyDate = (value: string) => {\n            if (value === '') {\n                this.setState({dailyDate: null});\n            } else {\n                this.setState({dailyDate: new Date(value).toISOString()});\n            }\n        }\n\n        if (!this.state.loaded) {\n            return <Loader />;\n        }\n\n        return (\n            <div style={{width: '100%', flex: 1, display: 'flex', flexDirection: 'column'}}>\n                <ToolSection verticalAround={false}>\n                    <SettingsCompactor wideStyle={{justifyContent: 'space-between'}} alwaysVisible={() => (\n                        <>\n                            {this.props.id === undefined ?\n                                <button className=\"button is-primary\" onClick={this.onSave}>Add note</button> :\n                                <button className=\"button is-primary\" onClick={this.onSave}>Update note</button>}\n                            <ContextSelector contextId={this.state.contextId} data={this.props.data} onChange={contextId => this.setState({ contextId })} />\n                            <input type=\"date\" className=\"input is-large\" value={(this.state.dailyDate && moment(this.state.dailyDate).format('YYYY-MM-DD')) || ''} onChange={e => updateDailyDate(e.target.value)} />\n                        </>\n                    )}>\n                        <NoteModeSelector mode={this.state.noteMode} onModeChange={noteMode => this.setState({ noteMode })} />\n                        <SplitModeSelector mode={this.state.splitMode} onModeChange={splitMode => this.setState({ splitMode })} />\n                    </SettingsCompactor>\n                </ToolSection>\n                <ToolSection>\n                    {!this.props.noteFor && !this.state.dailyDate && (\n                        <>\n                            <input type=\"text\" placeholder=\"Title\" className=\"input is-large is-wide\" value={this.state.title} onChange={this.onTitleChanged.bind(this)} />\n                            <TagInput tagState={this.state.tagState} onChange={s => this.setState({tagState: s})} />\n                        </>\n                    )}\n                    {this.state.dailyDate && (\n                        <h1>{getNoteTitle({ dailyDate: this.state.dailyDate, title: this.state.title, content: this.state.text })}</h1>\n                    )}\n                </ToolSection>\n                <div style={{flex: 1}}>\n                    {this.state.noteMode === 'markdown' ? (\n                        <SimpleSplitEditor text={this.state.text} expand={true} onTextChanged={this.onTextChanged} mode={this.state.splitMode} data={this.props.data} contextId={this.state.contextId} />\n                    ) : (\n                        <TreeEditor text={this.state.text} onTextChanged={this.onTextChanged} contextId={this.state.contextId} />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { NoteEditor } from '../../components/NoteEditor';\nimport { useData } from '../../model';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { useQueryState } from '../../lib/UseQueryState';\nimport * as styles from '../../layout/styles';\nimport { cx } from 'emotion';\n\nexport const EditNotePage: React.FC<{id?: string }> = props => {\n    const {data, refreshData} = useData();\n    let tags: {[key: string]: number} = {};\n    const [goBack, setGoBack] = React.useState(false);\n    const [source] = useQueryState(null, 'source');\n\n    if (goBack) {\n        return <Redirect to={source ? decodeURIComponent(source) : '/'} />;\n    }\n\n    for (const note of data.notes || []) {\n\n        if(!note.tags || !note.tags.length) {\n            continue;\n        }\n\n        for(const tag of note.tags.split(' ')) {\n            if(!tags[tag]) {\n                tags[tag] = 0;\n            }\n\n            tags[tag] += 1;\n        }\n    }\n\n    const availableTags = Object.keys(tags).sort((a, b) => tags[b] - tags[a]);\n\n    if (props.id) {\n        let note = data.notes.find(x => x.id === props.id);\n\n        if (!note) {\n            return <div>Note not found.</div>\n        }\n\n        return (\n            <>\n                <div style={{height: '100%', display: 'flex', flexDirection: 'column'}}>\n                    <ToolSection>\n                        <div className={cx(styles.horizontalSpace('.5rem'))}>\n                            <NavLink to={source ? decodeURIComponent(source) : '/'} className=\"button\">Back</NavLink>\n                            {!note.noteFor && <NavLink to={`/notes/${note.id}`} className=\"button\">Show</NavLink>}\n                        </div>\n                    </ToolSection>\n                    <NoteEditor {...note} data={data} text={note.content}  availableTags={availableTags} noteMode={note.mode||'tree'} dailyDate={note.dailyDate} onNoteAdded={() => { refreshData(); setGoBack(true); }} />\n                </div>\n            </>\n        );\n    }\n\n    const urlParams = new URLSearchParams(window.location.search);\n    const title = urlParams.get('title');\n    const contextId = urlParams.get('context');\n\n    return (\n        <>\n            <div style={{height: '100%', display: 'flex', flexDirection: 'column'}} >\n                <ToolSection>\n                    <NavLink to={`/`} className=\"button\">Back</NavLink>\n                </ToolSection>\n                <NoteEditor title={title || undefined} contextId={contextId} availableTags={availableTags} data={data} noteFor={null} dailyDate={null} noteMode={'tree'} onNoteAdded={() => { refreshData(); setGoBack(true); }} />\n            </div>\n        </>\n    );\n}","import * as React from 'react';\nimport { useState } from 'react';\nimport { MarkedViewer } from './MarkedViewer';\n\nimport \"ace-builds/src-noconflict/mode-markdown\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport { Loader } from './Loader';\nimport { getNoteReferenceMatchRegExp, getNoteAliasReferenceMatchRegExp } from '../db/note';\n\ninterface Node {\n    text: string;\n    nodes: Node[];\n}\n\nexport const TreeViewer: React.FC<{ json: string, contextId: string|null, referenceTitle?: string, personAlias?: string }> = (props) => {\n    const [nodes, setNodes] = useState<Node[]|null>(null);\n    const [invalid, setInvalid] = useState(false);\n\n    React.useEffect(() => {\n        try {\n            let nodes = [];\n            if (props.json) {\n                nodes = JSON.parse(props.json)\n            }\n            setNodes(nodes);\n        } catch {\n            setInvalid(true);\n        }\n    }, [props.json]);\n\n    if (invalid) {\n        return <div>Invalid json</div>;\n    }\n\n    if (!nodes) {\n        return <Loader />;\n    }\n\n    const renderNode = (node: Node, index: number, level: number, filter: RegExp|null) => {\n        const extra: JSX.Element[] = [];\n        if (filter) {\n            if (filter.test(node.text)) {\n                filter = null;\n                if (level > 0) {\n                    extra.push(<div key={`extra-${index}-${level}`} style={{paddingTop: 8, color: '#aaa'}}>{'... > '.repeat(level)}</div>)\n                }\n            } else {\n                return (\n                    <React.Fragment key={`${level}-${index}`}>\n                        {node.nodes.map((n, i) => renderNode(n, i, level + 1, filter))}\n                    </React.Fragment>\n                );\n            }\n        }\n\n        return (\n            <React.Fragment key={`${level}-${index}`}>\n                {extra}\n                <div style={{display: 'flex', padding: '.6rem .8rem'}}>\n                    <div style={{letterSpacing: '.5rem', color: '#777', lineHeight: 1.5}}>•</div>\n                    <MarkedViewer markdown={node.text} contextId={props.contextId} />\n                </div>\n                <div style={{borderLeft: '1px solid #555', paddingLeft: 16, marginLeft: 16}}>\n                    {node.nodes.map((n, i) => renderNode(n, i, level + 1, filter))}\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    let referenceRegExp = props.referenceTitle ? getNoteReferenceMatchRegExp(props.referenceTitle) : null;\n\n    if (props.personAlias) {\n        referenceRegExp = getNoteAliasReferenceMatchRegExp(props.personAlias);\n    }\n\n    return (\n        <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'space-between', height: '100%'}}>\n            <div style={{width: '100%'}}>\n                {nodes.map((n, i) => renderNode(n, i, 0, referenceRegExp))}\n            </div>\n        </div>\n    );\n};","import * as React from 'react';\nimport { useData } from '../model';\nimport { MarkedViewer } from './MarkedViewer';\nimport { getNoteTitle, getNoteReferenceMatchRegExp, getNoteAliasReferenceMatchRegExp } from '../db/note';\nimport { Link } from 'react-router-dom';\nimport * as _ from 'lodash';\nimport { TreeViewer } from './TreeViewer';\n\nexport const ReferenceViewer: React.FC<{ title: string, contextId: string|null }> = (props) => {\n    const {data} = useData();\n    const referenceRegExp = getNoteReferenceMatchRegExp(props.title);\n    const contextNotes = _.orderBy(data.notes.filter(x => x.contextId === props.contextId && referenceRegExp.test(x.content)), x => x.updatedAt, 'desc');\n\n    if (contextNotes.length === 0) {\n        return null;\n    }\n\n    return (\n        <div style={{paddingTop: 32}}>\n            <div style={{fontWeight: 'bold'}}>{contextNotes.length} linked references for \"{props.title}\"</div>\n            {contextNotes.map(note => (\n                <div key={note.id} style={{marginTop: 16}}>\n                    <Link to={`/notes/${note.id}`} style={{color: '#078263'}}>{getNoteTitle(note)}</Link>\n                    <div style={{paddingLeft: 16, background: '#222', marginTop: 8}}>\n                        {note.mode === 'markdown' \n                        ? <MarkedViewer markdown={note.content} contextId={note.contextId} /> \n                        : <TreeViewer json={note.content} contextId={note.contextId} referenceTitle={props.title} />}\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport const PersonReferenceViewer: React.FC<{ alias: string }> = (props) => {\n    const {data} = useData();\n    const referenceRegExp = getNoteAliasReferenceMatchRegExp(props.alias);\n    const matchingNotes = _.orderBy(data.notes.filter(x => referenceRegExp.test(x.content)), x => x.updatedAt, 'desc');\n\n    if (matchingNotes.length === 0) {\n        return null;\n    }\n\n    return (\n        <div style={{paddingTop: 32}}>\n            <div style={{fontWeight: 'bold'}}>{matchingNotes.length} linked references for \"{props.alias}\"</div>\n            {matchingNotes.map(note => (\n                <div key={note.id} style={{marginTop: 16}}>\n                    <Link to={`/notes/${note.id}`} style={{color: '#078263'}}>{getNoteTitle(note)}</Link>\n                    <div style={{paddingLeft: 16, background: '#222', marginTop: 8}}>\n                        {note.mode === 'markdown' \n                        ? <MarkedViewer markdown={note.content} contextId={note.contextId} /> \n                        : <TreeViewer json={note.content} contextId={note.contextId} personAlias={props.alias} />}\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { MarkedViewer } from '../../components/MarkedViewer';\nimport { ReferenceViewer } from '../../components/ReferenceViewer';\nimport { useData } from '../../model';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { useQueryState } from '../../lib/UseQueryState';\nimport { TagList } from '../../components/TagInput';\nimport { ContextTag } from '../../components/ContextTag';\nimport { getNoteTitle } from '../../db/note';\nimport { TreeViewer } from '../../components/TreeViewer';\n\nexport const ShowNotePage: React.SFC<{id: string}> = (props) => {\n    const {data} = useData();\n    const [source] = useQueryState(null, 'source');\n    const note = data.notes.find(x => x.id === props.id);\n\n    if (!note) {\n        return <div>Note not found.</div>\n    }\n\n    let viewer = null;\n\n    if (!note.mode || note.mode === 'markdown') {\n        viewer = <MarkedViewer markdown={note.content} contextId={note.contextId} />;\n    } else {\n        viewer = <TreeViewer json={note.content} contextId={note.contextId} />;\n    }\n\n    return (\n        <>\n            <ToolSection>\n                <NavLink to={source ? decodeURIComponent(source) : '/'} className=\"button\">Back</NavLink>\n                <NavLink to={`/notes/${note.id}/edit`} className=\"button\">Edit</NavLink>\n            </ToolSection>\n            <div className=\"panel\">\n                <div className=\"content\" style={{padding: '1rem'}}>\n                    <h1>{getNoteTitle(note)}</h1>\n                    <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                        <TagList tags={note.tags} />\n                        <ContextTag contextId={note.contextId} />\n                    </div>\n                    {viewer}\n                    <ReferenceViewer title={getNoteTitle(note)} contextId={note.contextId} />\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport const ShowVirtualNotePage: React.SFC<{}> = (props) => {\n    const [source] = useQueryState(null, 'source');\n\n    const urlParams = new URLSearchParams(window.location.search);\n    const title = urlParams.get('title');\n    const contextId = urlParams.get('context');\n\n    if(!title) {\n        return <div>Note not found.</div>\n    }\n\n    return (\n        <>\n            <ToolSection>\n                <NavLink to={source ? decodeURIComponent(source) : '/'} className=\"button\">Back</NavLink>\n                <NavLink to={`/notes/new?title=${encodeURIComponent(title)}${contextId ? `&context=${contextId}` : ''}&source=${encodeURIComponent(`${window.location.pathname}`)}`} className=\"button\">Create</NavLink>\n            </ToolSection>\n            <div className=\"panel\">\n                <div className=\"content\" style={{padding: '1rem'}}>\n                    <h1>{title}</h1>\n                    <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                        <ContextTag contextId={contextId} />\n                    </div>\n                    <ReferenceViewer title={title} contextId={contextId} />\n                </div>\n            </div>\n        </>\n    );\n}","import * as React from 'react';\n\ninterface ListProps<T> {\n    renderItem: (item: T) => JSX.Element;\n    items: T[];\n}\n\nexport function List<T>(props: ListProps<T>) {\n    return (\n        <div className=\"list\">\n            {props.items.map(props.renderItem)}\n        </div>\n    );\n}","import * as React from 'react';\nimport moment from 'moment';\nimport * as draftStorage from '../../draftStorage';\nimport { TagList } from '../../components/TagInput';\nimport { NavLink } from 'react-router-dom';\nimport lunr from 'lunr';\nimport { debounce } from 'throttle-debounce';\nimport { useData } from '../../model';\nimport * as styles from '../../layout/styles';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { getNoteTitle, extractAllReferences } from '../../db/note';\nimport { List } from '../../framework/List';\nimport { isMobile } from '../../components/Layout';\nimport { useQueryState, useQueryStateT, useQueryStateBoolean } from '../../lib/UseQueryState';\nimport { SettingsCompactor } from '../../components/SettingsCompactor';\nimport { ContextTag } from '../../components/ContextTag';\nimport _ from 'lodash';\nimport { Loader } from '../../components/Loader';\nimport { cx } from 'emotion';\n\nexport const NotePage: React.SFC<{ }> = (props) => {\n    const {data, refreshData} = useData();\n\n    const [text, setText] = useQueryState(null, 'search');\n    const [filterTags, setFilterTags] = useQueryStateT<string[]>([], 'tags', s => s !== null ? s.split('|') : [], a => a.join('|'));\n    const [showTagsBar, setShowTagsBar] = React.useState(!isMobile());\n    const [searchResult, setSearchResult] = React.useState<{ id: string, score: number }[]|null>(null);\n    const [searchIndex, setSearchIndex] = React.useState<lunr.Index|null>(null);\n    const [showNotesFor, setShowNotesFor] = React.useState(false);\n    const [draftIds, setDraftIds] = React.useState<string[]>([]);\n    const [showNoContext, setShowNoContext] = useQueryStateBoolean(false, 'no-context');\n    const [virtualReferences, setVirtualReferences] = React.useState<{ title: string, contextId: string|null, updatedAt: Date }[]>();\n\n    React.useEffect(() => {\n        draftStorage.getDraftIds().then(setDraftIds);\n    }, []);\n\n    React.useEffect(() => {\n        const refs = extractAllReferences(data.notes);\n        setVirtualReferences(refs);\n    }, [data.notes])\n\n    const onClearDraft = (id: string) => {\n        draftStorage.clearDraft(id);\n        refreshData();\n    }\n\n    const onSearch = (text: string) => {\n        if (!text || !text.length) {\n            setSearchResult(null);\n            return;\n        }\n\n        if (searchIndex === null) {\n            const idx = lunr(function() {\n                this.field('title');\n                this.field('text');\n    \n                for(let note of data.notes) {\n                    this.add({\n                        id: note.id,\n                        title: note.title,\n                        text: note.content\n                    });\n                }\n            });\n\n            setSearchIndex(idx);\n            const result = idx.search(text);\n            setSearchResult(result.map(r => { return { id: r.ref, score: r.score }; }));\n            return;\n        }\n\n        const result = searchIndex.search(text);\n        setSearchResult(result.map(r => { return { id: r.ref, score: r.score }; }));\n    };\n\n    const debouncedSearch = debounce(100, onSearch);\n\n    const toggleTag = (tag: string) => {\n        if (filterTags.indexOf(tag) === -1) {\n            setFilterTags(filterTags.concat([ tag ]));\n        } else {\n            setFilterTags(filterTags.filter(x => x !== tag));\n        }\n    }\n\n    let notes = data.notes || [];\n    let tags: {[key: string]: number} = {};\n\n    for(const tag of filterTags) {\n        notes = notes.filter(x => x.tags.split(' ').indexOf(tag) !== -1);\n    }\n\n    if (!showNotesFor) {\n        notes = notes.filter(x => !x.noteFor);\n    }\n\n    if (showNoContext) {\n        notes = notes.filter(x => !x.contextId);\n    }\n\n    if (searchResult) {\n        notes = searchResult.map(r => {\n            let idx =  notes.findIndex(n => n.id === r.id);\n            return notes[idx];\n        }).filter(n => n);\n    }\n\n    for (const note of notes) {\n\n        if(!note.tags) {\n            continue;\n        }\n\n        for(const tag of note.tags.split(' ')) {\n            if(!tags[tag]) {\n                tags[tag] = 0;\n            }\n\n            tags[tag] += 1;\n        }\n    }\n\n    const tagCounts = Object.keys(tags).map(k => { return { key: k, count: tags[k], active: filterTags.indexOf(k) !== -1 }; }).sort((a, b) => b.count - a.count);\n\n    let source: string|null = null;\n    if (window.location.search.length) {\n        const urlParams = new URLSearchParams(window.location.search);\n        source = `?source=${encodeURIComponent(`${window.location.pathname}?${urlParams.toString()}`)}`\n    }\n\n    if(!virtualReferences) {\n        return <Loader />;\n    }\n\n    interface NoteOutput {\n        id: string|null;\n        title: string;\n        tags: string|null;\n        contextId: string|null;\n        updatedAt: Date;\n        url: string;\n        isRef: boolean;\n    }\n\n    const notesOutput: NoteOutput[] = notes.map(n => ({\n        id: n.id,\n        title: getNoteTitle(n),\n        tags: n.tags,\n        contextId: n.contextId,\n        updatedAt: new Date(n.updatedAt),\n        url: `/notes/${n.id}${source ? source : ''}`,\n        isRef: false\n    }));\n\n    const virtualReferencesOutput: NoteOutput[] = virtualReferences.map(v => ({\n        id: null,\n        title: v.title,\n        tags: null,\n        contextId: v.contextId,\n        updatedAt: v.updatedAt,\n        url: `/notes/virtual?title=${encodeURIComponent(v.title)}${v.contextId ? `&context=${v.contextId}` : ''}&source=${encodeURIComponent(`${window.location.pathname}`)}`,\n        isRef: true\n    }));\n\n    const output = _.orderBy(notesOutput.concat(virtualReferencesOutput), o => o.updatedAt, 'desc');\n\n    return (\n        <div style={{display: 'flex', height: '100%'}}>\n            {showTagsBar && <div style={{borderRight: '1px solid #666', width: 200}}>\n                <List<{key: string, count: Number, active: boolean}> items={tagCounts} renderItem={i => {\n                    return (\n                        <div key={i.key} style={{background: i.active ? '#444' : undefined}} onClick={() => toggleTag(i.key)} className={cx('item', styles.hoverGlow)}>{i.key} <span style={{color: '#999'}}>{i.count}</span></div>\n                    );\n                }} />\n            </div>}\n            <div style={{width: '100%'}}>\n                <ToolSection>\n                    <SettingsCompactor alwaysVisible={() => (\n                        <>\n                            <NavLink to={`/notes/new`} className=\"button\">New Note</NavLink>\n                        </>\n                    )}>\n                        <div>\n                            <input id=\"tags-box\" type=\"checkbox\" checked={showTagsBar} onChange={() =>setShowTagsBar(!showTagsBar)} />\n                            <label htmlFor=\"tags-box\">Show tags bar</label>\n                        </div>\n                        <div>\n                            <input id=\"show-notes-for-box\" type=\"checkbox\" checked={showNotesFor} onChange={() =>setShowNotesFor(!showNotesFor)} />\n                            <label htmlFor=\"show-notes-for-box\">Show notes for</label>\n                        </div>\n                        <div>\n                            <input id=\"show-no-context-box\" type=\"checkbox\" checked={showNoContext} onChange={() =>setShowNoContext(!showNoContext)} />\n                            <label htmlFor=\"show-no-context-box\">Show no context</label>\n                        </div>\n                    </SettingsCompactor>\n                    <input style={{fontSize: 16, padding: '.3rem', width: '100%'}} placeholder=\"Search...\" type=\"text\" value={text || ''} onChange={e => { setText(e.target.value); debouncedSearch(e.target.value); }}/>\n                </ToolSection>\n                <div className=\"list\">\n                    {output.map((n, i) => (\n                        <React.Fragment key={i}>\n                            <NavLink to={n.url} className={cx('item', 'note', styles.hoverGlow)} style={{color: n.isRef ? '#aaa' : undefined}}>\n                                <div className=\"note-title\">\n                                    <div>{n.title}</div>\n                                </div> \n                                <div className=\"note-details\">\n                                    <TagList tags={n.tags || ''} />\n                                    <div className=\"tags\">\n                                        <ContextTag contextId={n.contextId} />\n                                    </div>\n                                    {n.id && draftIds.indexOf(n.id) !== -1 && <div className=\"button is-danger\" onClick={e => { e.preventDefault(); n.id && onClearDraft(n.id)}}>{'Clear draft'}</div>}\n                                    <div className=\"note-date\">{moment(n.updatedAt).format('ddd MMM Do HH:mm')}</div>\n                                </div>\n                            </NavLink>\n                        </React.Fragment>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as styles from '../layout/styles';\nimport { ToolSection } from '../framework/ToolSection';\nimport { Context, ContextState } from '../db/context';\nimport { db } from '../db/db';\nimport { useData } from '../model';\nimport { cx } from 'emotion';\n\nexport const ContextPage: React.FC<{ }> = props => {\n    const {data, refreshData} = useData();\n\n    const [text, setText] = React.useState('');\n\n    async function onKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            await db.contexts.create({\n                title: text,\n                state: ContextState.Active,\n                contextId: null\n            });\n\n            setText('');\n            refreshData();\n        }\n    }\n\n    function renderTarget(target: Context) {\n        return (\n            <NavLink key={target.id} to={`/contexts/${target.id}`} className={cx('item', styles.hoverGlow)}>\n                <div>\n                    {target.title}\n                </div>\n            </NavLink>\n        );\n    }\n\n    return (\n        <>\n            <ToolSection>\n                <input type=\"text\" className=\"input is-large is-wide\" placeholder=\"Add context...\" value={text} onChange={e => setText(e.target.value)} onKeyPress={onKeyPress} />\n            </ToolSection>\n\n            <div className=\"list\">\n                <div className=\"header\">Active</div>\n                {data.contexts.filter(p => !p.state || p.state === ContextState.Active).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => renderTarget(t))}\n                <div className=\"header\">Not Active</div>\n                {data.contexts.filter(p => p.state === ContextState.Inactive).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => renderTarget(t))}\n            </div>\n        </>\n    );\n}\n","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as styles from '../layout/styles';\nimport { Data } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport { ProjectState, Project } from '../db/project';\nimport { db } from '../db/db';\nimport { ContextTag } from '../components/ContextTag';\nimport { cx } from 'emotion';\n\nexport class ProjectPage extends React.Component<{ data: Data, refreshData: () => void }, { text: string }> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            text: ''\n        };\n    } \n    \n    async onKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            await db.projects.create({\n                title: this.state.text,\n                state: ProjectState.Active,\n                contextId: null\n            });\n            this.setState({ text: '' }, this.props.refreshData);\n        }\n    }\n\n    renderProject(target: Project) {\n        return (\n            <NavLink to={`/projects/${target.id}`} className={cx('item', styles.hoverGlow)}>\n                <div>\n                    {target.title}\n                </div>\n                <div className=\"tags\">\n                    <div className=\"tag\">{target.state}</div>\n                    <ContextTag contextId={target.contextId} />\n                </div>\n            </NavLink>\n        );\n    }\n\n    render() {\n        return (\n            <>\n                <ToolSection>\n                    <input type=\"text\" className=\"input is-large is-wide\" placeholder=\"Add project...\" value={this.state.text} onChange={e => this.setState({ text: e.target.value })} onKeyPress={this.onKeyPress.bind(this)} />\n                </ToolSection>\n\n                <div className=\"list\">\n                    <div className=\"header\">Active</div>\n                    {this.props.data.projects.filter(p => !p.state || p.state === ProjectState.Active).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => this.renderProject(t))}\n                    <div className=\"header\">Incubated</div>\n                    {this.props.data.projects.filter(p => !p.state || p.state === ProjectState.Incubated).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => this.renderProject(t))}\n                    <div className=\"header\">Not Active</div>\n                    {this.props.data.projects.filter(p => p.state !== ProjectState.Active && p.state !== ProjectState.Incubated).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => this.renderProject(t))}\n                </div>\n            </>\n        );\n    }\n}\n","import * as React from 'react';\nimport { useData } from '../model';\nimport { db } from '../db/db';\nimport { Person } from '../db/person';\nimport { NavLink } from 'react-router-dom';\nimport { MarkedViewer } from './MarkedViewer';\nimport { Task } from '../db/task';\nimport { HasNote } from '../db/note';\nimport { TreeViewer } from './TreeViewer';\n\nexport const EmbeddedNoteEdit: React.FC<{ targetEntity: Person|Task|null }> = (props) => {\n    const {data, refreshData} = useData();\n\n    if (!props.targetEntity) {\n        return null;\n    }\n\n    const {noteId} = props.targetEntity;\n\n    const addNode = async () => {\n        if (!props.targetEntity) {\n            return;\n        }\n\n        const note = await db.notes.create({\n            title: '',\n            content: '',\n            tags: '',\n            contextId: null,\n            noteFor: {\n                type: props.targetEntity.type,\n                id: props.targetEntity.id,\n            },\n            mode: 'tree',\n            dailyDate: null\n        });\n\n        if (props.targetEntity.type === 'person') {\n            props.targetEntity.noteId = note.id;\n            await db.people.save(props.targetEntity);\n        }\n\n        if (props.targetEntity.type === 'task') {\n            props.targetEntity.noteId = note.id;\n            await db.tasks.save(props.targetEntity);\n        }\n\n        refreshData();\n    };\n\n    if (!noteId) {\n        return (\n            <div>\n                <div className=\"button\" onClick={addNode}>Add note</div>\n            </div>\n        );\n    }\n\n    const note = data.notes.find(x => x.id === noteId);\n\n    if (!note) {\n        return null;\n    }\n\n    return (\n        <div>\n            <NavLink to={`/notes/${note.id}/edit?source=${encodeURIComponent(`${window.location.pathname}`)}`} className=\"button\">Edit note</NavLink>\n            {!note.mode || note.mode === 'markdown' ? (\n                <MarkedViewer markdown={note.content} contextId={note.contextId} />\n            ) : (\n                <TreeViewer json={note.content} contextId={note.contextId} />\n            )}\n        </div>\n    )\n};\n\nexport const EmbeddedNoteShow: React.FC<{ targetEntity: HasNote|null }> = (props) => {\n    const {data} = useData();\n\n    if (!props.targetEntity) {\n        return null;\n    }\n\n    const {noteId} = props.targetEntity;\n    if (!noteId) {\n        return null;\n    }\n\n    const note = data.notes.find(x => x.id === noteId);\n\n    if (!note) {\n        return null;\n    }\n\n    return (\n        <div>\n            {!note.mode || note.mode === 'markdown' ? (\n                <MarkedViewer markdown={note.content} contextId={note.contextId} />\n            ) : (\n                <TreeViewer json={note.content} contextId={note.contextId} />\n            )}\n        </div>\n    )\n};","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Data } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport { Task, TaskState } from '../db/task';\nimport { db } from '../db/db';\nimport { ProjectState } from '../db/project';\nimport moment from 'moment';\nimport * as styles from '../layout/styles';\nimport { EmbeddedNoteEdit } from '../components/EmbeddedNote';\nimport { cx } from 'emotion';\n\nexport class ShowTaskPage extends React.Component<{ data: Data, id: string, refreshData(): void }, { title: string, source: string }> {\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            title: '',\n            source: '/tasks'\n        }\n    }\n\n    componentDidMount() {\n        const urlParams = new URLSearchParams(window.location.search);\n\n        let task = this.props.data.tasks.find(x => x.id === this.props.id);\n        this.setState({ title: task!.title }, () => {\n            if (urlParams.has('source')) {\n                this.setState({ source: decodeURIComponent(urlParams.get('source')!)});\n            }\n        });\n    }\n\n    async setContext(task: Task, event: React.ChangeEvent<HTMLSelectElement>) {\n        let contextId: string|null = event.target.value;\n\n        if (contextId === '') {\n            contextId = null;\n        }\n\n        task.contextId = contextId;\n        await db.tasks.save(task);\n        this.props.refreshData();\n    }\n\n    async setProject(task: Task, event: React.ChangeEvent<HTMLSelectElement>) {\n        let projectId: string|null = event.target.value;\n\n        if (projectId === '') {\n            projectId = null;\n        }\n\n        task.projectId = projectId;\n        await db.tasks.save(task);\n        this.props.refreshData();\n    }\n\n    async setDefer(task: Task, event: React.ChangeEvent<HTMLInputElement>) {\n        let value: string|null = event.target.value;\n\n        if (value === '') {\n            task.deferredUntil = null;\n        } else {\n            task.deferredUntil = new Date(value).toISOString();\n        }\n\n        await db.tasks.save(task);\n        this.props.refreshData();\n    }\n\n    async onKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            let task = this.props.data.tasks.find(x => x.id === this.props.id);\n\n            if (!task) {\n                return;\n            }\n\n            if (task.title !== this.state.title) {\n                task.title = this.state.title;\n                await db.tasks.save(task);\n                this.props.refreshData();\n            }\n        }\n    }\n\n    async setTaskState(state: TaskState) {\n        const task = this.props.data.tasks.find(x => x.id === this.props.id);\n\n        if (!task) {\n            return;\n        }\n\n        if (task.state === state) {\n            return;\n        }\n\n        task.state = state;\n        task.stateChangedAt = new Date().toISOString();\n        await db.tasks.save(task);\n        this.props.refreshData();\n    }\n\n    render() {\n        let task = this.props.data.tasks.find(x => x.id === this.props.id);\n\n        if (!task) {\n            return <div>Task not found.</div>\n        }\n\n        let isDirty = false;\n\n        if (task.title !== this.state.title) {\n            isDirty = true;\n        }\n\n        return (\n            <>\n                <ToolSection>\n                    <NavLink to={this.state.source} className=\"button\">Back</NavLink>\n                    {/* <NavLink to={`/tasks/${task.id}/edit`} className=\"button\">Edit</NavLink> */}\n                </ToolSection>\n\n                <ToolSection>\n                    <div>Task</div>\n                    <input type=\"text\" className=\"input is-large is-wide\" style={{border: isDirty ? '2px solid orange' : undefined}} value={this.state.title} onKeyDown={e => this.onKeyDown(e)} onChange={e => this.setState({ title: e.target.value })} />\n\n                    <div>State</div>\n                    <div className={cx(styles.horizontalSpace('.5rem'))}>\n                        <div className={cx('button', task.state !== 'active' ? 'inactive' : null)} onClick={() => this.setTaskState('active')}>Active</div>\n                        <div className={cx('button', task.state !== 'incubated' ? 'inactive' : null)} onClick={() => this.setTaskState('incubated')}>Incubated</div>\n                        <div className={cx('button', task.state !== 'completed' ? 'inactive' : null)} onClick={() => this.setTaskState('completed')}>Completed</div>\n                    </div>\n\n                    <div>Context</div>\n                    <select className=\"input is-large\" value={task.contextId || ''} onChange={e => this.setContext(task!, e)}>\n                        <option value=\"\">Not set</option>\n                        {this.props.data.contexts.map(c => (\n                            <option key={c.id} value={c.id}>{c.title}</option>\n                        ))}\n                    </select>\n\n                    <div>Project</div>\n                    <select className=\"input is-large\" value={task.projectId || ''} onChange={e => this.setProject(task!, e)}>\n                        <option value=\"\">Not set</option>\n                        {this.props.data.projects.filter(p => p.state === ProjectState.Active || p.id === task!.projectId).map(c => (\n                            <option key={c.id} value={c.id}>{c.title}</option>\n                        ))}\n                    </select>\n\n                    <div>Defer</div>\n                    <input type=\"date\" className=\"input is-large\" value={(task.deferredUntil && moment(task.deferredUntil).format('YYYY-MM-DD')) || ''} onChange={e => this.setDefer(task!, e)} />\n                </ToolSection>\n\n                <ToolSection>\n                    <EmbeddedNoteEdit targetEntity={task} {...this.props} />\n                </ToolSection>\n            </>\n        );\n    }\n}","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Data } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport { Project, ProjectState } from '../db/project';\nimport { db } from '../db/db';\nimport { Loader } from '../components/Loader';\nimport { ContextSelector } from '../components/ContextSelector';\n\nexport class ShowProjectPage extends React.Component<{ data: Data, refreshData: () => void, id: string }, { title: string }> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            title: '',\n        }\n    }\n\n    componentDidMount() {\n        let target = this.props.data.projects.find(x => x.id === this.props.id);\n        this.setState({title: target!.title});\n    }\n\n    async setContext(target: Project, contextId: string|null) {\n        if (contextId === '') {\n            contextId = null;\n        }\n\n        target.contextId = contextId;\n        await db.projects.save(target);\n        this.props.refreshData();\n    }\n\n    async setProjectState(target: Project, event: React.ChangeEvent<HTMLSelectElement>) {\n        let projectState: ProjectState = event.target.value as ProjectState;\n\n        target.state = projectState;\n        await db.projects.save(target);\n        this.props.refreshData();\n    }\n\n    async onKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            let target = this.props.data!.projects.find(x => x.id === this.props.id);\n\n            if (!target) {\n                return;\n            }\n\n            if (target.title !== this.state.title) {\n                target.title = this.state.title;\n                await db.projects.save(target);\n                this.props.refreshData();\n            }\n        }\n    }\n\n    render() {\n        if (this.props.data === null) {\n            return <Loader />;\n        }\n\n        let target = this.props.data.projects.find(x => x.id === this.props.id);\n\n        if (!target) {\n            return <div>Project not found.</div>\n        }\n\n        let isDirty = false;\n\n        if (target.title !== this.state.title) {\n            isDirty = true;\n        }\n\n        return (\n            <>\n                <ToolSection>\n                    <NavLink to={`/projects`} className=\"button\">Back</NavLink>\n                </ToolSection>\n\n                <ToolSection>\n                    <div>Project</div>\n                    <input type=\"text\" className=\"input is-large is-wide\" style={{border: isDirty ? '2px solid orange' : undefined}} value={this.state.title} onKeyDown={e => this.onKeyDown(e)} onChange={e => this.setState({ title: e.target.value })} />\n                    \n                    <div>Context</div>\n                    <ContextSelector contextId={target.contextId} onChange={e => this.setContext(target!, e)} data={this.props.data} />\n                    <div>State</div>\n                    <select className=\"input is-large\" value={target.state || ProjectState.Active} onChange={e => this.setProjectState(target!, e)}>\n                        {Object.keys(ProjectState).map(c => (\n                            <option key={c} value={c}>{c}</option>\n                        ))}\n                    </select>\n\n                </ToolSection>\n\n            </>\n        );\n    }\n}","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Data } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport { Context, ContextState } from '../db/context';\nimport { db } from '../db/db';\n\nexport class ShowContextPage extends React.Component<{id: string, data: Data, refreshData(): void }, { title: string }> {\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            title: '',\n        }\n    }\n\n    componentDidMount() {\n        let target = this.props.data.contexts.find(x => x.id === this.props.id);\n        this.setState({ title: target!.title })\n    }\n\n    async onKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            const target = this.props.data.contexts.find(x => x.id === this.props.id);\n\n            if (!target) {\n                return;\n            }\n\n            if (target.title !== this.state.title) {\n                target.title = this.state.title;\n                await db.contexts.save(target);\n                this.props.refreshData();\n            }\n        }\n    }\n\n    async setContext(target: Context, event: React.ChangeEvent<HTMLSelectElement>) {\n        let contextId: string|null = event.target.value;\n\n        if (contextId === '') {\n            contextId = null;\n        }\n\n        target.contextId = contextId;\n        await db.contexts.save(target);\n        this.props.refreshData();\n    }\n\n    async setContextState(target: Context, event: React.ChangeEvent<HTMLSelectElement>) {\n        let contextState: ContextState = event.target.value as ContextState;\n\n        target.state = contextState;\n        await db.contexts.save(target);\n        this.props.refreshData();\n    }\n\n    render() {\n        let target = this.props.data.contexts.find(x => x.id === this.props.id);\n\n        if (!target) {\n            return <div>Context not found.</div>\n        }\n\n        let isDirty = false;\n\n        if (target.title !== this.state.title) {\n            isDirty = true;\n        }\n\n        return (\n            <>\n                <ToolSection>\n                    <NavLink to={`/contexts`} className=\"button\">Back</NavLink>\n                </ToolSection>\n\n                <ToolSection>\n                    <div>Context</div>\n                    <input type=\"text\" className=\"input is-large is-wide\" style={{border: isDirty ? '2px solid orange' : undefined}} value={this.state.title} onKeyDown={e => this.onKeyDown(e)} onChange={e => this.setState({ title: e.target.value })} />\n\n                    <div>Parent Context</div>\n                    <select className=\"input is-large\" value={target.contextId || ''} onChange={e => this.setContext(target!, e)}>\n                        <option value=\"\">Not set</option>\n                        {this.props.data.contexts.filter(c => c.id !== target!.id).map(c => (\n                            <option key={c.id} value={c.id}>{c.title}</option>\n                        ))}\n                    </select>\n\n                    <div>State</div>\n                    <select className=\"input is-large\" value={target.state || ContextState.Active} onChange={e => this.setContextState(target!, e)}>\n                        {Object.keys(ContextState).map(c => (\n                            <option key={c} value={c}>{c}</option>\n                        ))}\n                    </select>\n                </ToolSection>\n            </>\n        );\n    }\n}","import * as React from 'react';\nimport { Data } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport { syncer } from '../db/syncer';\nimport { Loader } from '../components/Loader';\n\ninterface DataPageProps {\n    data: Data;\n    refreshData(): void;\n}\n\nexport class DataPage extends React.Component<{ render: (props: DataPageProps)=>React.ReactNode }, { data: Data|null, error: string|null }> {\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            error: null,\n            data: null\n        };\n\n        this.refreshData = this.refreshData.bind(this);\n    }\n\n    async componentDidMount() {\n        syncer.registerDataListener(data => this.setState({ data }));\n        this.setState({ data: await syncer.getData() }, async () => {\n            await syncer.startServerSync();\n            await syncer.ensureServerSyncEnqueued();\n        });\n    }\n\n    async refreshData() {\n        this.setState({ data: await syncer.getData() }, async () => {\n            syncer.startServerSync();\n        });\n    }\n\n    render() {\n        if (this.state.error) {\n            return (\n                <>\n                    <div>{this.state.error}</div>\n                    <ToolSection>\n                        <div className=\"button\" onClick={() => this.refreshData()}>Retry</div>\n                        <div className=\"button\" onClick={() => window.location.reload()}>Reload</div>\n                        <div className=\"button\" onClick={() => window.location.reload(true)}>Force Reload</div>\n                        <a className=\"button\" href=\"/login\" >Login</a>\n                    </ToolSection>\n                </>\n            );\n        }      \n        \n        if (!this.state.data) {\n            return <Loader />;\n        }\n\n        return this.props.render({ data: this.state.data, refreshData: this.refreshData });\n    }\n}","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as styles from '../../layout/styles';\nimport { useData } from '../../model';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { Person } from '../../db/person';\nimport { cx } from 'emotion';\nimport _ from 'lodash';\n\nexport const PeoplePage: React.FC<{}> = props => {\n    const {data} = useData();\n\n    const renderTarget = (target: Person) => {\n        return (\n            <NavLink key={target.id} to={`/people/${target.id}`} className={cx('item', styles.hoverGlow)}>\n                <div>\n                    {target.name}\n                </div>\n            </NavLink>\n        );\n    };\n\n    return (\n        <>\n            <ToolSection>\n                <NavLink to={`/people/new`} className=\"button\">New Person</NavLink>\n            </ToolSection>\n\n            <div className=\"list\">\n                {data.people.sort((a, b) => a.name.localeCompare(b.name)).map(t => renderTarget(t))}\n            </div>\n        </>\n    );\n};\n","import * as React from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { db } from '../../db/db';\nimport { useState } from 'react';\nimport { EmbeddedNoteEdit } from '../../components/EmbeddedNote';\nimport { useData } from '../../model';\n\nconst useForm = <T extends {}>(initialState: ()=>T) => {\n    const [values, setValues] = useState<T>(initialState);\n    \n    const handleChange = (event: any) => {\n        event.persist();\n        setValues((values) => ({ ...values, [event.target.name]: event.target.value }));\n    };\n\n    return {\n        values,\n        handleChange\n    };\n};\n\nexport const EditPersonPage: React.FC<{id?: string }> = (props) => {\n    const {data, refreshData} = useData();\n    const [goBack, setGoBack] = useState<string|null>(null);\n\n    const {values, handleChange} = useForm(() => {\n        const person = props.id ? data.people.find(x => x.id === props.id) : null;\n        return {\n            name:  person ? person.name : '',\n            alias: person ? person.alias : '',\n            birthday: person ? person.birthday : null\n        }\n    });\n\n    const onSave = async () => {\n        const id = props.id || null;\n\n        if (id) {\n            let person = await db.people.get(id)!;\n\n            if (person === null) {\n                throw new Error('Person is null?');\n            }\n\n            person.name = values.name;\n            person.alias = (values.alias?.length && values.alias) || null;\n            person.birthday = values.birthday;\n\n            await db.people.save(person);\n            refreshData();\n            setGoBack(person.id);\n        } else {\n            const person = await db.people.create({\n                name: values.name,\n                alias: (values.alias?.length && values.alias) || null,\n                birthday: values.birthday,\n                noteId: null,\n            });\n\n            refreshData();\n            setGoBack(person.id);\n        }\n    };\n\n    const person = props.id ? data.people.find(x => x.id === props.id) || null : null;\n\n    return (\n        <>\n            {goBack && <Redirect to={`/people/${goBack}`} />}\n            <div style={{height: '100%', display: 'flex', flexDirection: 'column'}} >\n                <ToolSection>\n                    <NavLink to={`/people`} className=\"button\">Back</NavLink>\n                    {props.id && <NavLink to={`/people/${props.id}`} className=\"button\">Show</NavLink>}\n                </ToolSection>\n                <ToolSection>\n                    {props.id === undefined ?\n                            <button type=\"button\" className=\"button is-primary\" onClick={onSave}>Add person</button> :\n                            <button type=\"button\" className=\"button is-primary\" onClick={onSave}>Update person</button>}\n                </ToolSection>\n                <ToolSection>\n                    <div>Name</div>\n                    <input type=\"text\" name=\"name\" className=\"input is-large is-wide\" value={values.name} onChange={handleChange} />\n                    <div>Alias</div>\n                    <input type=\"text\" name=\"alias\" className=\"input is-large is-wide\" value={values.alias || ''} onChange={handleChange} />\n                    <div>Birthday</div>\n                    <input type=\"date\" name=\"birthday\" className=\"input is-large\" value={values.birthday || ''} onChange={handleChange} />\n                </ToolSection>\n                <ToolSection>\n                    <EmbeddedNoteEdit targetEntity={person} />\n                </ToolSection>\n            </div>\n        </>\n    );\n};","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useData } from '../../model';\nimport { ToolSection } from '../../framework/ToolSection';\nimport moment from 'moment';\nimport { EmbeddedNoteShow } from '../../components/EmbeddedNote';\nimport { getAlias } from '../../db/person';\nimport { PersonReferenceViewer } from '../../components/ReferenceViewer';\n\nexport const ShowPersonPage: React.FC<{id: string}> = (props) => {\n    const {data} = useData();\n    const person = data.people.find(x => x.id === props.id);\n\n    if (!person) {\n        return <div>Person not found.</div>\n    }\n\n    return (\n        <>\n            <ToolSection>\n                <NavLink to={`/people`} className=\"button\">Back</NavLink>\n                <NavLink to={`/people/${person.id}/edit`} className=\"button\">Edit</NavLink>\n            </ToolSection>\n            <div className=\"panel\">\n                <div className=\"content\" style={{padding: '1rem'}}>\n                    <h1>{person.name} (@{getAlias(person)})</h1>\n                    {person.birthday && <div>Birthday: {moment(person.birthday).format('YYYY-MM-DD')}</div>}\n                    <EmbeddedNoteShow targetEntity={person} {...props} />\n                    <PersonReferenceViewer alias={getAlias(person)} />\n                </div>\n            </div>\n        </>\n    );\n}; ","import * as React from 'react';\nimport { ToolSection } from '../framework/ToolSection';\nimport { db } from '../db/db';\nimport { useData } from '../model';\n\nexport const StatsPage: React.SFC<{}> = (props) => {\n    const {data} = useData();\n    const [noteTotalCount, setNoteTotalCount] = React.useState<number|null>(null);\n    const [taskTotalCount, setTaskTotalCount] = React.useState<number|null>(null);\n    const [peopleTotalCount, setPeopleTotalCount] = React.useState<number|null>(null);\n    const [projectTotalCount, setProjectTotalCount] = React.useState<number|null>(null);\n    const [contextTotalCount, setContextTotalCount] = React.useState<number|null>(null);\n    \n    React.useEffect(() => {\n        db.notes.getSyncKeys().then(c => setNoteTotalCount(c.length));\n        db.tasks.getSyncKeys().then(c => setTaskTotalCount(c.length));\n        db.people.getSyncKeys().then(c => setPeopleTotalCount(c.length));\n        db.projects.getSyncKeys().then(c => setProjectTotalCount(c.length));\n        db.contexts.getSyncKeys().then(c => setContextTotalCount(c.length));\n    });\n\n    return (\n        <>\n            <ToolSection>\n            </ToolSection>\n            <div className=\"panel\">\n                <div className=\"content\" style={{padding: '1rem'}}>\n                    <h1>Stats</h1>\n                    <ul>\n                        <li>Notes: {data.notes.length}, versions: {noteTotalCount ? noteTotalCount : '...'}</li>\n                        <li>Tasks: {data.tasks.length}, versions: {taskTotalCount ? taskTotalCount : '...'}</li>\n                        <li>People: {data.people.length}, versions: {peopleTotalCount ? peopleTotalCount : '...'}</li>\n                        <li>Projects: {data.projects.length}, versions: {projectTotalCount ? projectTotalCount : '...'}</li>\n                        <li>Contexts: {data.contexts.length}, versions: {contextTotalCount ? contextTotalCount : '...'}</li>\n                    </ul>\n                </div>\n            </div>\n        </>\n    );\n}","import * as React from 'react';\nimport { ContextBar } from '../../components/ContextBar';\nimport { useQueryState } from '../../lib/UseQueryState';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { useData } from '../../model';\nimport moment from 'moment';\nimport { getNoteTitle, Note } from '../../db/note';\nimport { ContextTag } from '../../components/ContextTag';\nimport { TagList } from '../../components/TagInput';\nimport { MarkedViewer } from '../../components/MarkedViewer';\nimport _ from 'lodash';\nimport * as ContextActions from '../../lib/contextActions';\nimport { TreeViewer } from '../../components/TreeViewer';\n\nexport const DailyNotePage: React.SFC<{ }> = (props) => {\n    const [contextId, setContextId] = useQueryState(null, 'context');\n    const {data} = useData();\n\n    const oneWeekAgo = moment().add(-7,'d');\n    \n    const filteredContexts = ContextActions.getFilteredContextIds(contextId, data);\n    const dailyNotes = _.orderBy(data.notes.filter(x => x.dailyDate && moment(x.dailyDate) > oneWeekAgo && (!contextId || filteredContexts.indexOf(x.contextId!) !== -1)), n => n.dailyDate,  'desc');\n\n    function renderViewer(note: Note) {\n        if (!note.mode || note.mode === 'markdown') {\n            return <MarkedViewer markdown={note.content} contextId={note.contextId} />;\n        } \n          \n        return <TreeViewer json={note.content} contextId={note.contextId} />;\n    }\n\n    return (\n        <div style={{display: 'flex', height: '100%'}}>\n            <ContextBar contextId={contextId} onChange={setContextId} />\n            <div style={{width: '100%'}}>\n                <ToolSection>\n                </ToolSection>\n                <div className=\"panel\">\n                    {dailyNotes.map(n => (\n                        <div key={n.id} className=\"content\" style={{padding: '1rem'}}>\n                            <h1>{getNoteTitle(n)}</h1>\n                            <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                                <TagList tags={n.tags} />\n                                <ContextTag contextId={n.contextId} />\n                            </div>\n                            {renderViewer(n)}\n                        </div>))}\n                </div>\n            </div>\n        </div>\n    )\n};\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Layout } from './components/Layout';\nimport { TaskPage } from './pages/TaskPage';\nimport { EditNotePage } from './pages/notes/EditNotePage';\nimport { ShowNotePage, ShowVirtualNotePage } from './pages/notes/ShowNotePage';\nimport { NotePage } from './pages/notes/NotePage';\nimport { PlaygroundPage } from './pages/PlaygroundPage';\nimport { ContextPage } from './pages/ContextPage';\nimport { ProjectPage } from './pages/ProjectPage';\nimport { ShowTaskPage } from './pages/ShowTaskPage';\nimport { ShowProjectPage } from './pages/ShowProjectPage';\nimport { ShowContextPage } from './pages/ShowContextPage';\nimport { DataPage } from './pages/DataPage';\nimport { SyncPage } from './pages/SyncPage';\nimport { SettingsPage } from './pages/SettingsPage';\nimport { PeoplePage } from './pages/people/PeoplePage';\nimport { EditPersonPage } from './pages/people/EditPersonPage';\nimport { ShowPersonPage } from './pages/people/ShowPersonPage';\nimport { StatsPage } from './pages/StatsPage';\nimport {DataProvider} from './model';\nimport { DailyNotePage } from './pages/notes/DailyNotes';\n\nexport const routes = <Layout>\n    <DataProvider>\n        <Switch>\n            <Route exact path='/' render={routeProps => <NotePage />} />\n            <Route exact path='/notes/new' render={routeProps => <EditNotePage />} />\n            <Route exact path='/notes/daily' render={routeProps => <DailyNotePage />} />\n            <Route exact path='/notes/virtual' render={routeProps => <ShowVirtualNotePage />} />\n            <Route exact path='/notes/:id' render={routeProps => <ShowNotePage id={routeProps.match.params.id} />} />\n            <Route exact path='/notes/:id/edit' render={routeProps => <EditNotePage id={routeProps.match.params.id} />} />\n            <Route exact path='/tasks' render={routeProps => <TaskPage />} />\n            <Route exact path='/tasks/:id' render={routeProps => <DataPage render={(props) => <ShowTaskPage {...props} id={routeProps.match.params.id} />} />} />\n            <Route exact path='/contexts' render={routeProps => <ContextPage />} />\n            <Route exact path='/contexts/:id' render={routeProps => <DataPage render={(props) => <ShowContextPage {...props} id={routeProps.match.params.id} />} />} />\n            <Route exact path='/projects' render={routeProps => <DataPage render={(props) => <ProjectPage {...props} />} />} />\n            <Route exact path='/projects/:id' render={routeProps => <DataPage render={(props) => <ShowProjectPage {...props} id={routeProps.match.params.id} />} />} />\n            <Route exact path='/people' render={routeProps => <PeoplePage />} />} />\n            <Route exact path='/people/new' render={routeProps => <EditPersonPage />} />\n            <Route exact path='/people/:id' render={routeProps => <ShowPersonPage id={routeProps.match.params.id} />} />\n            <Route exact path='/people/:id/edit' render={routeProps => <EditPersonPage id={routeProps.match.params.id} />} />\n            <Route path='/playground' component={PlaygroundPage} />\n            <Route path='/sync' component={SyncPage} />\n            <Route path='/stats' render={routeProps => <StatsPage />} />\n            <Route path='/settings' component={SettingsPage} />\n        </Switch>\n    </DataProvider>\n</Layout>;\n","import * as React from 'react';\nimport { ToolSection } from '../framework/ToolSection';\nimport { extractAllReferences } from '../db/note';\nimport { useData } from '../model';\n\nexport const PlaygroundPage: React.FC<{}> = () => {\n    \n    const {data} = useData();\n\n    console.log(extractAllReferences(data.notes));\n    \n    return (\n        <div style={{height: '100%'}}>\n            <ToolSection>\n            </ToolSection>\n        </div>\n    );\n}","import React from 'react';\nimport { ToolSection } from '../framework/ToolSection';\nimport { syncer, SyncStatus } from '../db/syncer';\nimport moment from 'moment';\n\nexport const SyncPage: React.FC<{}> = props => {\n    const [count, setCount] = React.useState(0);\n\n    React.useEffect(() => {\n        syncer.registerSyncListener(() => {\n            setCount(c => c + 1);\n        });\n    }, []);\n   \n    return (\n        <>\n            <React.Fragment key={count}></React.Fragment>\n            <ToolSection>\n                <div>Status: {SyncStatus[syncer.status]}</div>\n                <div className=\"button\" onClick={() => syncer.startServerSync()}>Sync Now</div>\n            </ToolSection>\n            <div className=\"list\">\n                {syncer.getResults().slice(0).reverse().map((result, i) =>\n                    <React.Fragment key={i}>\n                        <div className=\"item\">{result.endAt.getTime() - result.startAt.getTime()} ms - start: {moment(result.startAt).format('HH:mm:ss')}, end: {moment(result.endAt).format('HH:mm:ss')}, fetch: {result.fetch}, send: {result.send}{result.error ? `, error: ${result.error}` : null}</div>\n                    </React.Fragment>)}\n            </div>\n        </>\n    );\n}\n","import * as React from 'react';\nimport { ToolSection } from '../framework/ToolSection';\nimport { db } from '../db/db';\nimport { getCurrentKey, generateRsaKey, importLifeKey, LifeKey } from '../db/crypt';\nimport * as dropboxApi from '../lib/dropboxApi';\n\nexport const SettingsPage: React.FC<{}> = () => {\n    const [pushSubscribed, setPushSubscribed] = React.useState<boolean|null>(null);\n    const [currentKey, setCurrentKey] = React.useState<LifeKey|null>(null);\n    const [swState, setSwState] = React.useState<string>('no-update');\n    const [generatedKey, setGeneratedKey] = React.useState<string|null>(null);\n    const [privateKey, setPrivateKey] = React.useState<string|null>(null);\n\n    async function clearEntities() {\n        if(!window.confirm('Clear all local data?')) {\n            return;\n        }\n\n        db.contexts.dropInstance();\n        db.tasks.dropInstance();\n        db.notes.dropInstance();\n        db.projects.dropInstance();\n        db.people.dropInstance();\n    }\n\n    const [dropboxConnected, setDropboxConnected] = React.useState<boolean|null>(null);\n    React.useEffect(() => {\n        dropboxApi.isSignedIn().then(status => {\n            setDropboxConnected(status);\n        });\n    }, [])\n\n    React.useEffect(() => {\n        async function componentDidMount() {\n            navigator.serviceWorker.ready.then(async (registration) => {\n                const subscription = await registration.pushManager.getSubscription();\n                setPushSubscribed(!!subscription);\n            });\n    \n            navigator.serviceWorker.ready.then(registration => {\n                registration.addEventListener('updatefound', () => {\n                    const installingWorker = registration.installing;\n                    if (!installingWorker) {\n                        setSwState('not-installing');\n                        return;\n                    }\n    \n                    installingWorker.addEventListener('statechange', () => {\n                        if (installingWorker.state === 'installed') {\n                            if (navigator.serviceWorker.controller) {\n                                console.log('New content is available; please refresh.');\n                                setSwState('content-ready');\n                            } else {\n                                console.log('Content is cached for offline use.');\n                                setSwState('cached');\n                            }\n                        } else {\n                            setSwState('state-not-installed');\n                        }\n                    });\n                });\n            });\n    \n            await refreshKeys();\n        }\n        componentDidMount() \n    }, [])\n\n    async function refreshKeys() {\n        try {\n            const newCurrentKey = await getCurrentKey();\n            setCurrentKey(newCurrentKey)\n        } catch(err) {\n\n        }\n    }\n\n    function unsubscribePush() {\n        navigator.serviceWorker.ready.then(async (registration) => {\n            const subscription = await registration.pushManager.getSubscription();\n            if (subscription) {\n                await subscription.unsubscribe();\n                setPushSubscribed(!!(await registration.pushManager.getSubscription()));\n            }\n        });\n    }\n\n    function subscribePush() {\n        navigator.serviceWorker.ready.then(async (registration) => {\n            try {\n                const options = {\n                    applicationServerKey: 'BEl6vcKrENjrQk-LikFlZ5hy6VuVgSUUZ2uCYOQsuYjMP_WbigIOfDITEkF6JhEbd9MVw9RKiMODYxmpONuYsqY',\n                    userVisibleOnly: true\n                };\n                const subscription = await registration.pushManager.subscribe(options);\n                console.log(JSON.stringify(subscription))\n                setPushSubscribed(!!subscription);\n                // Api.testPush(subscription);\n            } catch (err) {\n                console.log('Error', err)\n            }\n        });\n    }\n\n    function clearServiceWorker() {\n        navigator.serviceWorker.ready.then(async (registration) => {\n            await registration.update();\n        });\n    }\n\n    function unregisterServiceWorker() {\n        navigator.serviceWorker.ready.then(async (registration) => {\n            await registration.unregister();\n        });\n    }\n\n    return (\n        <>\n            <ToolSection>\n                <div className=\"button\" onClick={() => window.location.reload()}>Reload</div>\n                <div className=\"button\" onClick={() => window.location.reload(true)}>Force Reload</div>\n            </ToolSection>\n            <ToolSection>\n                <div className=\"button\" onClick={async () => { await dropboxApi.signIn(); setDropboxConnected(await dropboxApi.isSignedIn()) }}>Connect Dropbox</div>\n                {/* <div className=\"button\" onClick={async () => { await signOut(); setDropboxConnected(await isLoggedIn()) }}>Disconnect Google Drive</div> */}\n                <div style={{display: 'inline-block', background: '#222', padding: '.5rem'}}>Status: {dropboxConnected === null ? 'unknown' : dropboxConnected ? 'connected' : 'not connected'}</div>\n                {dropboxApi.isLocalMode && <div style={{display: 'inline-block', background: '#222', padding: '.5rem'}}>Local [ {window.location.host} ]</div>}\n            </ToolSection>\n            <ToolSection>\n                <div className=\"button\" onClick={async () => await clearEntities()}>Clear Entities</div>\n                <div className=\"button\" onClick={() => clearServiceWorker()}>Update SW</div>\n                <div className=\"button\" onClick={() => unregisterServiceWorker()}>Unregister SW</div>\n                <div>ServiceWorker state: {swState}</div>\n            </ToolSection>\n            <ToolSection>\n                {pushSubscribed === true && <div className=\"button\" onClick={async () => await unsubscribePush()}>Unsubscribe Push</div>}\n                {pushSubscribed === false && <div className=\"button\" onClick={async () => await subscribePush()}>Subscribe Push</div>}\n            </ToolSection>\n            <ToolSection>\n                <h2>Encryption</h2>\n                {!currentKey && (\n                    <>\n                        <div>\n                            <textarea style={{width: '100%'}} onChange={e => setPrivateKey(e.target.value)} />\n                        </div>\n                        <button className=\"button\" onClick={async () => { await importLifeKey(privateKey!); await refreshKeys(); }}>Set private key</button>\n                        <h4>Generate key</h4>\n                        <div className=\"button\" onClick={async () => setGeneratedKey((await generateRsaKey()).privateKey)}>Generate</div>\n                        <textarea style={{width: '100%', background: '#555', color: '#ddd'}} readOnly value={generatedKey || ''} />\n                    </>\n                )}\n                <h4>Keys</h4>\n                <div className=\"list\">\n                    {!currentKey && <div>No keys</div>}\n                    {currentKey && (\n                        <div className=\"item\">\n                            {currentKey.fingerprint}\n                        </div>\n                    )}\n                </div>\n            </ToolSection>\n            <ToolSection>\n            </ToolSection>\n        </>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { routes } from './routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter children={ routes } />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}