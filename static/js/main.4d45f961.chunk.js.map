{"version":3,"sources":["components/Layout.scss","serviceWorker.ts","components/ServiceWorkerInstall.tsx","layout/styles.ts","db/crypt.ts","db/EventListener.ts","db/db.ts","components/Loader.tsx","model.tsx","lib/dropboxApi.ts","db/syncer.ts","components/Layout.tsx","db/context.ts","db/project.ts","framework/ToolSection.tsx","framework/List.tsx","lib/UseQueryState.ts","components/SettingsCompactor.tsx","components/ContextTag.tsx","pages/TaskPage.tsx","lib/contextActions.ts","draftStorage.ts","components/TagInput.tsx","db/note.ts","components/MarkedViewer.tsx","components/SimpleSplitEditor.tsx","components/TreeEditor.tsx","components/ContextSelector.tsx","components/NoteEditor.tsx","pages/notes/EditNotePage.tsx","components/ReferenceViewer.tsx","pages/notes/ShowNotePage.tsx","pages/notes/NotePage.tsx","pages/ContextPage.tsx","pages/ProjectPage.tsx","components/EmbeddedNote.tsx","pages/ShowTaskPage.tsx","pages/ShowProjectPage.tsx","pages/ShowContextPage.tsx","pages/DataPage.tsx","pages/people/PeoplePage.tsx","pages/people/EditPersonPage.tsx","pages/people/ShowPersonPage.tsx","pages/StatsPage.tsx","routes.tsx","pages/PlaygroundPage.tsx","pages/SyncPage.tsx","pages/SettingsPage.tsx","index.tsx"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ServiceWorkerInstall","props","installEvent","addEventListener","e","preventDefault","setState","this","prompt","userChoice","choiceResult","outcome","className","onClick","onInstallClick","React","hoverGlow","style","$nest","background","cursorPointer","cursor","display","alignItems","horizontalSpace","width","around","paddingLeft","undefined","paddingRight","marginLeft","marginRight","verticalSpace","height","paddingTop","paddingBottom","marginBottom","lifeKeyStore","createInstance","name","privateKeyStore","rsaSettings","modulusLength","publicExponent","Uint8Array","hash","aesSettings","length","generateRsaKey","a","crypto","subtle","generateKey","keyPair","exportKey","privateKey","rawPrivateKey","privateKeyBase64","arrayBufferToBase64","publicKey","rawPublicKey","publicKeyBase64","publicKeyFingerprint","md5","fingerprint","message","derivePublicRsaKey","jwk","d","dp","dq","q","qi","key_ops","importKey","importLifeKey","importedPrivateKey","base64ToArrayBuffer","extractablePrivateKey","setItem","lifeKey","createdAt","Date","toISOString","encryptAndWrap","data","getItem","Error","importedPublicKeyBuffer","generateAesKey","aesKey","iv","getRandomValues","encrypt","strToArrayBuffer","encryptedData","encryptedDataBase64","wrapKey","wrappedAesKey","wrappedAesKeyBase64","ivBase64","result","payload","key","unwrapAndDecrypt","wrappedKeyBase64","dataBase64","unwrapKey","decrypt","unencryptedDataBuffer","arrayBufferToString","getCurrentKey","keys","buffer","binary","bytes","len","byteLength","i","String","fromCharCode","btoa","base64","binary_string","atob","charCodeAt","str","buf","ArrayBuffer","bufView","Uint16Array","strLen","apply","EventListener","listeners","listener","push","filter","x","arg","LocalForageStore","type","store","changeListener","entityProps","now","entity","id","uuid","versionId","parentVersionIds","updatedAt","getKey","trigger","parentVersionId1","getLeafNodes","leafNodes","warn","map","node","_","getKeysPrefixed","prefix","k","startsWith","split","objs","parts","parentVersionId2","groups","o","leafNodeArrays","Object","group","parents","leafObjs","dropInstance","join","replace","c","r","Math","random","toString","contexts","tasks","notes","projects","people","getSyncKeys","getBySyncKey","syncKey","get","entities","import","serverEntities","serverEntity","encryption","JSON","parse","unencryptedData","syncKeys","entityData","stringify","encryptionResult","encryptionJson","db","importEntites","importServerEntites","exportServerEntities","Loader","justifyContent","border","padding","Data","DataContext","createContext","refreshData","DataProvider","useState","setData","useEffect","syncer","registerDataListener","getData","startServerSync","ensureServerSyncEnqueued","init","value","useCallback","Provider","children","useData","useContext","isLocalMode","host","clientId","signIn","dropbox","Dropbox","fetch","assign","getAuthenticationUrl","isSignedIn","getStateSnapshot","snapshot","files","Set","setStateSnapshot","removeItem","listFiles","useSnapshot","getAccessToken","accessToken","hasMore","filesListFolderContinue","fileListResult","results","entries","path_lower","substring","p","file","add","has_more","filesListFolder","path","recursive","getAccessTokenFromUrl","ret","trim","forEach","param","shift","val","decodeURIComponent","retVal","Array","isArray","parseAuthFromHash","access_token","uploadFile","contents","filesUpload","getFile","filesDownload","response","Promise","resolve","blob","fileBlob","reader","FileReader","json","readAsText","tryStoreAccessKey","SyncStatus","status","Idle","intervalHandle","syncListener","dataListener","note","concat","task","context","project","person","loadData","setInterval","difference","setA","setB","_difference","delete","Syncing","dropboxApi","startAt","toSend","toFetch","limit","pLimit","promises","all","endAt","size","send","Failed","getAll","orderBy","isMobile","matchMedia","matches","ContextState","ProjectState","Layout","sidebar","setSidebar","count","setCount","onNavClick","registerSyncListener","overflow","classes","styles","to","exact","activeClassName","overflowY","overflowX","ToolSection","verticalAround","List","items","renderItem","useQueryState","initialValue","queryParam","URLSearchParams","search","rawValue","setRawValue","urlParams","set","queryString","history","replaceState","pathname","dispatchEvent","CustomEvent","useQueryStateT","convertTo","convertFrom","strValue","SettingsCompactor","expanded","setExpanded","alwaysVisible","wideStyle","mobileOnly","flexDirection","ContextTag","contextId","find","title","perspectives","groupedProject","groupedContext","defaultPerspective","TaskPage","text","setText","showCompleted","showDeferred","showIncubated","showContextBar","includeNested","options","setOptions","setContextId","projectId","setProjectId","perspectiveId","setPerspectiveId","onKeyPress","create","content","stateChangedAt","noteId","onCompleteChange","save","renderProject","renderDeferred","deferredUntil","moment","format","fromNow","renderNote","renderTitle","pattern","href","stopPropagation","target","rel","getFilteredContextIds","contextIds","queue","next","pop","nestedContexts","nested","filterTasks","complete","t","incubatedProjectIds","Incubated","indexOf","sort","b","renderTask","skipProjectContext","source","encodeURIComponent","checked","onChange","color","textDecoration","perspective","grouped","taskCounts","topContexts","ContextActions","taskBlock","filteredContextIds","stateOrder","Active","Completed","Dropped","emptyActiveProjects","filteredProjects","projectTasks","noProjectTasks","borderRight","renderListContext","depth","Inactive","htmlFor","placeholder","draftStore","getDraftKey","getDraft","clearDraft","TagInput","focus","setFocus","timeoutId","tagInput","onFocus","clearTimeout","current","onBlur","setTimeout","tagState","selectedTags","ref","withText","onTextChange","onKeyDown","decrementIndex","incrementIndex","addSelectedTag","addText","reopenLastTag","getFilteredAvailableTags","slice","index","tag","addTag","TagState","availableTags","max","min","lastTag","toLowerCase","Tag","TagList","tags","getNoteTitle","dailyDate","parsedTitle","exec","escapeRegExp","getNoteReferenceMatchRegExp","reference","RegExp","SplitMode","regex","MarkedViewer","useHistory","lifeNavigate","url","markdown","group1","matchContextId","matchTitle","prefixContext","contextTitle","test","referenceRegExp","html","marked","dangerouslySetInnerHTML","__html","NoteModeSelector","mode","onModeChange","SplitModeSelector","Split","Editor","Preview","SimpleSplitEditor","expand","zIndex","maxHeight","components","textAreaStyle","flexGrow","minWidth","borderTop","markedStyle","fontSize","onTextChanged","theme","showGutter","showPrintMargin","wrapEnabled","enableBasicAutocompletion","snippetCompleter","textCompleter","keyWordCompleter","enableLiveAutocompletion","enableSnippets","TreeViewer","nodes","setNodes","invalid","setInvalid","referenceTitle","n","renderNode","level","extra","repeat","letterSpacing","lineHeight","borderLeft","TreeEditor","inputRef","useRef","active","setActive","noteTitles","onInputChanged","getParentNode","targetNode","searchNodes","parentNode","childResult","preorderTraversal","stack","reverse","childNode","removeNodeIfEmpty","nodeIndex","findIndex","splice","removeNode","indentNode","unindentNode","parentParentNode","targetNodes","parentNodeIndex","commands","bindKey","win","mac","above","editor","getCursorPosition","row","column","newNode","afterNode","insertNode","activeIndex","completions","getCompletions","session","pos","callback","token","getTokenAt","caption","snippet","meta","position","bottom","left","right","insert","isActive","highlightActiveLine","maxLines","Infinity","ContextSelector","activeContexts","inactiveContexts","disabled","NoteEditor","loaded","splitMode","noteMode","bind","onSave","draftStorage","draft","withAvailableTags","withSelectedTags","getTags","noteFor","onNoteAdded","flex","onTitleChanged","s","EditNotePage","goBack","setGoBack","ReferenceViewer","contextNotes","fontWeight","marginTop","ShowNotePage","viewer","NotePage","filterTags","setFilterTags","showTagsBar","setShowTagsBar","searchResult","setSearchResult","searchIndex","setSearchIndex","showNotesFor","setShowNotesFor","draftIds","setDraftIds","showNoContext","setShowNoContext","debouncedSearch","debounce","score","idx","lunr","field","tagCounts","toggleTag","ContextPage","renderTarget","ProjectPage","EmbeddedNoteEdit","targetEntity","addNode","EmbeddedNoteShow","ShowTaskPage","has","event","isDirty","setTaskState","setContext","setProject","setDefer","ShowProjectPage","projectState","setProjectState","ShowContextPage","contextState","setContextState","DataPage","reload","render","PeoplePage","EditPersonPage","initialState","values","setValues","handleChange","persist","useForm","birthday","ShowPersonPage","StatsPage","noteTotalCount","setNoteTotalCount","taskTotalCount","setTaskTotalCount","peopleTotalCount","setPeopleTotalCount","projectTotalCount","setProjectTotalCount","contextTotalCount","setContextTotalCount","routes","routeProps","params","component","Fragment","getResults","getTime","pushSubscribed","setPushSubscribed","currentKey","setCurrentKey","swState","setSwState","generatedKey","setGeneratedKey","setPrivateKey","clearEntities","confirm","dropboxConnected","setDropboxConnected","refreshKeys","newCurrentKey","ready","pushManager","getSubscription","subscription","componentDidMount","update","unregister","unsubscribe","applicationServerKey","userVisibleOnly","subscribe","readOnly","ReactDOM","StrictMode","document","getElementById","URL","process","origin","headers","contentType","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4d45f961.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"#078263\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as React from 'react';\r\n\r\nexport class ServiceWorkerInstall extends React.Component<{ }, { installEvent: any }> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            installEvent: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('beforeinstallprompt', (e: any) => {\r\n            // Prevent Chrome 67 and earlier from automatically showing the prompt\r\n            e.preventDefault();\r\n            this.setState({ installEvent: e });\r\n        });\r\n    }\r\n\r\n    onInstallClick() {\r\n        if (this.state.installEvent === null) {\r\n            return;\r\n        }\r\n        \r\n        this.state.installEvent.prompt();\r\n    \r\n        // Wait for the user to respond to the prompt\r\n        this.state.installEvent.userChoice.then((choiceResult: any) => {\r\n            if (choiceResult.outcome === 'accepted') {\r\n                console.log('User accepted the A2HS prompt');\r\n            } else {\r\n                console.log('User dismissed the A2HS prompt');\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.installEvent) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div className=\"button\" onClick={() => this.onInstallClick()}>Install app</div>\r\n        );\r\n    }\r\n}","import {style} from 'typestyle/lib';\r\n\r\nexport const hoverGlow = style({\r\n    $nest: {\r\n        '&:hover': {\r\n            background: '#3f3f3f'\r\n        }\r\n    }\r\n});\r\n\r\nexport const cursorPointer = style({\r\n    cursor: 'pointer'\r\n});\r\n\r\nexport const verticalCenter = style({\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n});\r\n\r\nexport function horizontalSpace(width = '.3rem', around = false) {\r\n    return style({\r\n        paddingLeft: around ? width : undefined,\r\n        paddingRight: around ? width : undefined,\r\n        $nest: {\r\n            '& > *:first-child': {\r\n                marginLeft: 0\r\n            },\r\n            '& > *': {\r\n                marginRight: width\r\n            },\r\n            '& > *:last-child': {\r\n                marginRight: 0\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function verticalSpace(height = '.3rem', around = false) {\r\n    return style({\r\n        paddingTop: around ? height : undefined,\r\n        paddingBottom: around ? height : undefined,\r\n        $nest: {\r\n            '& > *': {\r\n                marginBottom: height\r\n            },\r\n            '& > *:last-child': {\r\n                marginBottom: 0\r\n            }\r\n        }\r\n    });\r\n}","import {createInstance} from 'localforage';\r\nimport * as md5 from 'js-md5';\r\n\r\nconst lifeKeyStore = createInstance({ name: 'lifekeystore' });\r\nconst privateKeyStore = createInstance({ name: 'privatekeystore' });\r\n\r\nexport interface LifeKey {\r\n    fingerprint: string;\r\n    publicKey: string;\r\n    createdAt: string;\r\n}\r\n\r\nconst rsaSettings = {\r\n    name: \"RSA-OAEP\",\r\n    modulusLength: 2048,\r\n    publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\r\n    hash: {name: \"SHA-256\"},\r\n};\r\n\r\nconst aesSettings = { name: 'AES-GCM', length: 256 };\r\n\r\nexport async function generateRsaKey() {\r\n    try {\r\n        const keyPair = await crypto.subtle.generateKey(\r\n            rsaSettings,\r\n            true,\r\n            ['encrypt', 'decrypt']\r\n        );\r\n\r\n        const rawPrivateKey = await crypto.subtle.exportKey('pkcs8', keyPair.privateKey);\r\n        const privateKeyBase64 = arrayBufferToBase64(rawPrivateKey);\r\n\r\n        const rawPublicKey = await crypto.subtle.exportKey('spki', keyPair.publicKey);\r\n        const publicKeyBase64 = arrayBufferToBase64(rawPublicKey);\r\n        const publicKeyFingerprint = md5.hex(rawPublicKey);\r\n\r\n        return { fingerprint: publicKeyFingerprint, privateKey: privateKeyBase64, publicKey: publicKeyBase64 };\r\n    } catch (error) {\r\n        console.error('generateKey', error, error.message)\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function derivePublicRsaKey(privateKey: CryptoKey) {\r\n    const jwk = await crypto.subtle.exportKey(\"jwk\", privateKey);\r\n\r\n    delete jwk.d;\r\n    delete jwk.dp;\r\n    delete jwk.dq;\r\n    delete jwk.q;\r\n    delete jwk.qi;\r\n    jwk.key_ops = [\"encrypt\", \"wrapKey\"];\r\n    \r\n    const publicKey = await crypto.subtle.importKey(\"jwk\", jwk, rsaSettings, true, [\"encrypt\", \"wrapKey\"]);\r\n    return publicKey;\r\n}\r\n\r\nexport async function importLifeKey(privateKeyBase64: string) {\r\n    const importedPrivateKey = base64ToArrayBuffer(privateKeyBase64);\r\n    const extractablePrivateKey = await crypto.subtle.importKey('pkcs8', importedPrivateKey, rsaSettings, true, ['decrypt', 'unwrapKey']);\r\n    \r\n    const publicKey = await derivePublicRsaKey(extractablePrivateKey);\r\n    const rawPublicKey = await crypto.subtle.exportKey('spki', publicKey);\r\n    const publicKeyBase64 = arrayBufferToBase64(rawPublicKey);\r\n    const publicKeyFingerprint = md5.hex(rawPublicKey);\r\n\r\n    const privateKey = await crypto.subtle.importKey('pkcs8', importedPrivateKey, rsaSettings, false, ['decrypt', 'unwrapKey']);\r\n    privateKeyStore.setItem(publicKeyFingerprint, privateKey);\r\n\r\n    const lifeKey: LifeKey = {\r\n        fingerprint: publicKeyFingerprint,\r\n        publicKey: publicKeyBase64,\r\n        createdAt: new Date().toISOString(),\r\n    };\r\n\r\n    lifeKeyStore.setItem(lifeKey.fingerprint, lifeKey);\r\n}\r\n\r\nexport async function encryptAndWrap(fingerprint: string, data: string) {\r\n    try {\r\n        const lifeKey = await lifeKeyStore.getItem(fingerprint) as LifeKey;\r\n        if (!lifeKey) {\r\n            throw new Error(`Key with fingerprint ${fingerprint} not found`);\r\n        }        \r\n        const importedPublicKeyBuffer = base64ToArrayBuffer(lifeKey.publicKey);\r\n        const publicKey = await crypto.subtle.importKey('spki', importedPublicKeyBuffer, rsaSettings, true, ['encrypt', 'wrapKey']);\r\n    \r\n        const aesKey = await generateAesKey();\r\n        const iv = crypto.getRandomValues(new Uint8Array(12));\r\n    \r\n        const encryptedData = await crypto.subtle.encrypt({ \r\n            name: 'AES-GCM', \r\n            length: 256,\r\n            iv\r\n        }, aesKey, strToArrayBuffer(data));\r\n    \r\n        const encryptedDataBase64 = arrayBufferToBase64(encryptedData);\r\n    \r\n        const wrappedAesKey = await crypto.subtle.wrapKey('raw', aesKey, publicKey, rsaSettings);\r\n        const wrappedAesKeyBase64 = arrayBufferToBase64(wrappedAesKey);\r\n    \r\n        const ivBase64 = arrayBufferToBase64(iv);\r\n    \r\n        const result = {\r\n            payload: encryptedDataBase64,\r\n            key: wrappedAesKeyBase64,\r\n            fingerprint: fingerprint,\r\n            iv: ivBase64\r\n        };\r\n    \r\n        return result;\r\n    } catch (error) {\r\n        console.error('encryptAndWrap', error, error.message)\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function unwrapAndDecrypt(fingerprint: string, wrappedKeyBase64: string, dataBase64: string, ivBase64: string) {\r\n    try {\r\n        const privateKey = await privateKeyStore.getItem(fingerprint) as CryptoKey;\r\n        if (!privateKey) {\r\n            throw new Error(`Key with fingerprint ${fingerprint} not found`);\r\n        }\r\n\r\n        const aesKey = await crypto.subtle.unwrapKey('raw', base64ToArrayBuffer(wrappedKeyBase64), privateKey, rsaSettings, aesSettings, false, ['decrypt'])\r\n        const unencryptedDataBuffer = await crypto.subtle.decrypt({ \r\n            name: 'AES-GCM', \r\n            length: 256,\r\n            iv: base64ToArrayBuffer(ivBase64)\r\n        }, aesKey, base64ToArrayBuffer(dataBase64));\r\n        return arrayBufferToString(unencryptedDataBuffer);\r\n    } catch (error) {\r\n        console.error('unwrapAndDecrypt', error, error.message)\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function generateAesKey(): Promise<any> {\r\n    try {\r\n        const key = await crypto.subtle.generateKey(aesSettings, true, ['encrypt', 'decrypt']);\r\n        return key;\r\n    } catch (error) {\r\n        console.error('generateKey', error, error.message)\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function getCurrentKey() {\r\n    const keys = await lifeKeyStore.keys();\r\n\r\n    if (keys.length === 0) {\r\n        throw new Error('No key found');\r\n    }\r\n\r\n    if (keys.length > 1) {\r\n        throw new Error('More than 1 key found!');\r\n    }\r\n\r\n    return (await lifeKeyStore.getItem(keys[0])) as LifeKey;\r\n}\r\n\r\n\r\nfunction arrayBufferToBase64( buffer: ArrayBuffer ) {\r\n    var binary = '';\r\n    var bytes = new Uint8Array(buffer);\r\n    var len = bytes.byteLength;\r\n    for (var i = 0; i < len; i++) {\r\n        binary += String.fromCharCode(bytes[i]);\r\n    }\r\n    return window.btoa( binary );\r\n}\r\n\r\nfunction base64ToArrayBuffer(base64: string) {\r\n    var binary_string =  window.atob(base64);\r\n    var len = binary_string.length;\r\n    var bytes = new Uint8Array(len);\r\n    for (var i = 0; i < len; i++)        {\r\n        bytes[i] = binary_string.charCodeAt(i);\r\n    }\r\n    return bytes.buffer;\r\n}\r\n\r\n// function webSafe64(base64: string) {\r\n//     return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\r\n// }\r\n\r\n// // Convert from web-safe to normal, add trailing \"=\"s\r\n// function normal64(base64: string) {\r\n//     return base64.replace(/\\-/g, '+').replace(/_/g, '/') + '=='.substring(0, (3*base64.length)%4);\r\n// }\r\n\r\nfunction strToArrayBuffer(str: string) {\r\n    var buf = new ArrayBuffer(str.length * 2);\r\n    var bufView = new Uint16Array(buf);\r\n    for (var i = 0, strLen = str.length; i < strLen; i++) {\r\n      bufView[i] = str.charCodeAt(i);\r\n    }\r\n    return buf;\r\n}\r\n\r\nfunction arrayBufferToString(buf: ArrayBuffer) {\r\n    return String.fromCharCode.apply(null, new Uint16Array(buf) as any);\r\n}","export class EventListener<T> {\r\n    listeners: ((arg: T) => void)[] = [];\r\n\r\n    register(listener: (arg: T) => void) {\r\n        this.listeners.push(listener);\r\n        return () =>  {\r\n            this.listeners = this.listeners.filter(x => x !== listener);\r\n        };\r\n    }\r\n\r\n    trigger(arg: T) {\r\n        for(const listener of this.listeners) {\r\n            listener(arg);\r\n        }\r\n    }\r\n}","import {createInstance} from 'localforage';\r\nimport {Context} from './context';\r\nimport { Project } from './project';\r\nimport { Task } from './task';\r\nimport { Note } from './note';\r\nimport * as _ from 'lodash';\r\nimport { Person } from './person';\r\nimport { unwrapAndDecrypt, encryptAndWrap, getCurrentKey } from './crypt';\r\nimport { EventListener } from './EventListener';\r\n\r\ninterface Store<T extends Entity> {\r\n    getAll(): Promise<T[]>;\r\n    get(id: string, revision?: string): Promise<T|null>;\r\n    save(entity: T): void;\r\n}\r\n\r\nexport type EntityType = 'note' | 'task' | 'project' | 'context' | 'person';\r\n\r\nexport interface Entity {\r\n    id: string;\r\n    versionId: string;\r\n    parentVersionId1: string|null;\r\n    parentVersionId2: string|null;\r\n    type: EntityType;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n    deferredUntil: string|null;\r\n}\r\n\r\n// type EntityProperty = keyof Entity;\r\n\r\n// const sampleEntity: Entity = {\r\n//     id: 'test',\r\n//     versionId: 'test',\r\n//     parentVersionId1: null,\r\n//     parentVersionId2: null,\r\n//     type: 'task',\r\n//     createdAt: 'now',\r\n//     updatedAt: 'now',\r\n//     deferredUntil: null\r\n// };\r\n\r\n// const entityProperties: EntityProperty[] = Object.keys(sampleEntity) as EntityProperty[];\r\n\r\nexport interface ServerEntity {\r\n    id: string;\r\n    versionId: string;\r\n    data: string;\r\n    encryption: string;\r\n    parentVersionId1: string|null;\r\n    parentVersionId2: string|null;\r\n    type: EntityType;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n}\r\n\r\nexport interface ServerEntityEncryption {\r\n    key: string;\r\n    fingerprint: string;\r\n    iv: string;\r\n}\r\n\r\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>\r\n\r\nclass LocalForageStore<T extends Entity> implements Store<T> {\r\n    store: LocalForage;\r\n    type: EntityType;\r\n    changeListener: EventListener<T>;\r\n\r\n    constructor(type: EntityType) {\r\n        this.type = type;\r\n        this.store = createInstance({\r\n            name: `store-${type}`\r\n        });\r\n        this.changeListener = new EventListener<T>();\r\n    }\r\n\r\n    async create(entityProps: Omit<T, keyof Entity>): Promise<T> {\r\n        const now = new Date().toISOString();\r\n        let entity = {\r\n            id: this.uuid(),\r\n            versionId: this.uuid(),\r\n            type: this.type,\r\n            parentVersionIds: [] as string[],\r\n            createdAt: now,\r\n            updatedAt: now,\r\n            ...entityProps as any,\r\n        } as T;\r\n        await this.store.setItem(this.getKey(entity), entity);\r\n        this.changeListener && this.changeListener.trigger(entity);\r\n        return entity;\r\n    }\r\n\r\n    save(entity: T): void {\r\n        if (!entity.id) {\r\n            entity.id = this.uuid();\r\n        }\r\n\r\n        if (entity.type !== this.type) {\r\n            throw new Error(`Invalid type: ${entity.type} - expected ${this.type}`);\r\n        }\r\n\r\n        const now = new Date().toISOString();\r\n\r\n        if (!entity.createdAt) {\r\n            entity.createdAt = now;\r\n        }\r\n\r\n        entity.updatedAt = now;\r\n\r\n        if(entity.versionId) {\r\n            entity.parentVersionId1 = entity.versionId;\r\n        }\r\n\r\n        entity.versionId = this.uuid();\r\n        this.store.setItem(this.getKey(entity), entity);\r\n        this.changeListener && this.changeListener.trigger(entity);\r\n    }\r\n\r\n    import(entity: T) {\r\n        if (entity.type !== this.type) {\r\n            throw new Error(`Invalid type ${entity.type} - expected ${this.type}`);\r\n        }\r\n\r\n        this.store.setItem(this.getKey(entity), entity);\r\n        this.changeListener && this.changeListener.trigger(entity);\r\n    }\r\n\r\n    async get(id: string, versionId?: string): Promise<T|null> {\r\n        if (versionId === undefined) {\r\n            const leafNodes = await this.getLeafNodes(`${id}/`);\r\n\r\n            if (leafNodes.length > 1) {\r\n                console.warn(`Found ${leafNodes.length} leaf nodes for entity ${this.type}/${id} - expected 1: ${leafNodes.map(x => x.versionId)}`);\r\n\r\n                for(const node of leafNodes) {\r\n                    console.log('leaf node', node);\r\n                }\r\n                \r\n                // throw `Found ${leafNodes.length} leaf nodes for entity ${this.type}/${id} - expected 1: ${leafNodes.map(x => x.versionId)}`;\r\n                return _.orderBy(leafNodes, x => x.updatedAt, 'desc')[0];\r\n            }\r\n\r\n            if (leafNodes.length === 0) {\r\n                return null;\r\n            }\r\n\r\n            return leafNodes[0];\r\n        } else {\r\n            const keys = await this.getKeysPrefixed(`${id}/${versionId}`);\r\n            return await this.store.getItem(keys[0]) as T;\r\n        }\r\n    }\r\n\r\n    async getAll(): Promise<T[]> {\r\n        return await this.getLeafNodes();\r\n    }\r\n\r\n    async getKeysPrefixed(prefix: string) {\r\n        const keys = await this.store.keys();\r\n        return keys.filter(k => k.startsWith(prefix));\r\n    }\r\n\r\n    async getSyncKeys(): Promise<string[]> {\r\n        const keys = await this.store.keys();\r\n        return keys.map(x => `${this.type}/${x.split('/')[0]}/${x.split('/')[1]}`)\r\n    }\r\n\r\n    private async getLeafNodes(prefix = '') {\r\n        const keys = await this.getKeysPrefixed(prefix);\r\n\r\n        const objs = keys.map(k => {\r\n            const parts = k.split('/');\r\n\r\n            let parentVersionId1 = null;\r\n            let parentVersionId2 = null;\r\n\r\n            if (parts[2].length > 0) {\r\n                const parentVersionIds = parts[2].split('+');\r\n\r\n                if (parentVersionIds.length > 2) {\r\n                    throw new Error(\"ParentVersionIds length > 2\");\r\n                }\r\n\r\n                parentVersionId1 = parentVersionIds[0];\r\n                parentVersionId2 = parentVersionIds.length > 1 ? parentVersionIds[1] : null;\r\n            }\r\n\r\n            return {\r\n                id: parts[0],\r\n                versionId: parts[1],\r\n                parentVersionId1: parentVersionId1,\r\n                parentVersionId2: parentVersionId2,\r\n            }\r\n        });\r\n\r\n        const groups = _.groupBy(objs, o => o.id);\r\n\r\n        const leafNodeArrays = Object.keys(groups).map(k => {\r\n            const group = groups[k];\r\n            const parents: { [key: string]: boolean } = {};\r\n\r\n            for(const o of group) {\r\n                if (o.parentVersionId1) {\r\n                    parents[o.parentVersionId1] = true;\r\n                }\r\n                if (o.parentVersionId2) {\r\n                    parents[o.parentVersionId2] = true;\r\n                }\r\n            }\r\n\r\n            const leafNodes = group.filter(o => {\r\n                const isLeaf = !parents[o.versionId];\r\n                return isLeaf;\r\n            });\r\n\r\n            return leafNodes;\r\n        });\r\n\r\n        const result: T[] = [];\r\n\r\n        for(let leafNodes of leafNodeArrays) {\r\n            const leafObjs: T[] = [];\r\n            for(let node of leafNodes) {\r\n                leafObjs.push(await (this.store.getItem(this.getKey(node))) as T);\r\n            }\r\n\r\n            if(leafObjs.length !== 1) {\r\n                console.warn(`Found ${leafObjs.length} leaf nodes for entity ${this.type}/${leafNodes[0].id} - expected 1: ${leafObjs.map(x => x.versionId)}`);\r\n    \r\n                for(const node of leafObjs) {\r\n                    console.log('leaf node', node);\r\n                }\r\n    \r\n                result.push(_.orderBy(leafObjs, x => x.updatedAt, 'desc')[0])\r\n            } else {\r\n                result.push(leafObjs[0]);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    registerChangeListener(listener: (status: T) => void) {\r\n        this.changeListener.register(listener)\r\n    }\r\n\r\n    dropInstance() {\r\n        this.store.dropInstance();\r\n    }\r\n\r\n    private getKey(entity: { id: string, versionId: string, parentVersionId1: string|null, parentVersionId2: string|null }) {\r\n        let parentVersionIds = [];\r\n\r\n        if (entity.parentVersionId1) {\r\n            parentVersionIds.push(entity.parentVersionId1);\r\n        }\r\n\r\n        if (entity.parentVersionId2) {\r\n            parentVersionIds.push(entity.parentVersionId2);\r\n        }\r\n\r\n\r\n        return `${entity.id}/${entity.versionId}/${parentVersionIds.join('+')}`;\r\n    }\r\n\r\n    private uuid() {\r\n        return 'xxxxxxxx-xxxx-xxxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n            const r = Math.random() * 16 | 0, v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n}\r\n\r\nconst contexts = new LocalForageStore<Context>(\"context\");\r\nconst tasks = new LocalForageStore<Task>(\"task\");\r\nconst notes = new LocalForageStore<Note>(\"note\");\r\nconst projects = new LocalForageStore<Project>(\"project\");\r\nconst people = new LocalForageStore<Person>(\"person\");\r\n\r\nasync function getSyncKeys() {\r\n    const keys: string[] = [\r\n        ...(await contexts.getSyncKeys()),\r\n        ...(await tasks.getSyncKeys()),\r\n        ...(await notes.getSyncKeys()),\r\n        ...(await projects.getSyncKeys()),\r\n        ...(await people.getSyncKeys()),\r\n    ];\r\n\r\n    return keys;\r\n}\r\n\r\nasync function getBySyncKey(syncKey: string): Promise<Entity|null> {\r\n    const [type, id, versionId] = syncKey.split('/');\r\n\r\n    switch(type) {\r\n        case 'context':\r\n            return contexts.get(id, versionId);\r\n        case 'task':\r\n            return tasks.get(id, versionId);\r\n        case 'note':\r\n            return notes.get(id, versionId);\r\n        case 'project':\r\n            return projects.get(id, versionId);\r\n        case 'person':\r\n            return people.get(id, versionId);\r\n        default:\r\n            throw new Error('Unknown type: ' + type);\r\n    }\r\n}\r\n\r\nasync function importEntites(entities: Entity[]) {\r\n    for(const entity of entities) {\r\n        switch(entity.type) {\r\n            case 'context':\r\n                contexts.import(entity as Context);\r\n                break;\r\n            case 'task':\r\n                tasks.import(entity as Task);\r\n                break;\r\n            case 'note':\r\n                notes.import(entity as Note);\r\n                break;\r\n            case 'project':\r\n                projects.import(entity as Project);\r\n                break;\r\n            case 'person':\r\n                people.import(entity as Person);\r\n                break;\r\n            default:\r\n                throw new Error('Unknown type: ' + entity.type);\r\n        }\r\n    }\r\n}\r\n\r\nasync function importServerEntites(serverEntities: ServerEntity[]) {\r\n    for(const serverEntity of serverEntities) {\r\n        const encryption = JSON.parse(serverEntity.encryption) as ServerEntityEncryption;\r\n        const unencryptedData = await unwrapAndDecrypt(encryption.fingerprint, encryption.key, serverEntity.data, encryption.iv);\r\n        let entity = JSON.parse(unencryptedData) as Entity;\r\n\r\n        entity.id = serverEntity.id;\r\n        entity.versionId = serverEntity.versionId;\r\n        entity.type = serverEntity.type;\r\n        entity.parentVersionId1 = serverEntity.parentVersionId1;\r\n        entity.parentVersionId2 = serverEntity.parentVersionId2;\r\n        entity.createdAt = serverEntity.createdAt;\r\n        entity.updatedAt = serverEntity.updatedAt;\r\n\r\n        switch(serverEntity.type) {\r\n            case 'context':\r\n                contexts.import(entity as Context);\r\n                break;\r\n            case 'task':\r\n                tasks.import(entity as Task);\r\n                break;\r\n            case 'note':\r\n                notes.import(entity as Note);\r\n                break;\r\n            case 'project':\r\n                projects.import(entity as Project);\r\n                break;\r\n            case 'person':\r\n                people.import(entity as Person);\r\n                break;\r\n            default:\r\n                throw new Error('Unknown type: ' + entity.type);\r\n        }\r\n    }\r\n}\r\n\r\nasync function exportServerEntities(syncKeys: string[]): Promise<ServerEntity[]> {\r\n    const result: ServerEntity[] = [];\r\n\r\n    for (const syncKey of syncKeys) {\r\n        const entity = await getBySyncKey(syncKey);\r\n\r\n        if (entity === null) {\r\n            console.warn(\"Entity with key not found: \" + syncKey)\r\n            continue;\r\n        }\r\n\r\n        const entityData = {...entity};\r\n\r\n        delete entityData.createdAt;\r\n        delete entityData.updatedAt;\r\n        delete entityData.id;\r\n        delete entityData.versionId;\r\n        delete entityData.type;\r\n        delete entityData.parentVersionId1;\r\n        delete entityData.parentVersionId2;\r\n\r\n        const unencryptedData = JSON.stringify(entityData);\r\n        const encryptionResult = await encryptAndWrap((await getCurrentKey()).fingerprint, unencryptedData);\r\n        const encryption: ServerEntityEncryption = { \r\n            fingerprint: encryptionResult.fingerprint, \r\n            key: encryptionResult.key,\r\n            iv: encryptionResult.iv\r\n        };\r\n        const encryptionJson = JSON.stringify(encryption);\r\n\r\n        const serverEntity: ServerEntity = {\r\n            id: entity.id,\r\n            versionId: entity.versionId,\r\n            type: entity.type,\r\n            parentVersionId1: entity.parentVersionId1,\r\n            parentVersionId2: entity.parentVersionId2,\r\n            createdAt: entity.createdAt,\r\n            updatedAt: entity.updatedAt,\r\n            data: encryptionResult.payload,\r\n            encryption: encryptionJson\r\n        };\r\n\r\n        result.push(serverEntity);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport const db = {\r\n    contexts,\r\n    tasks,\r\n    notes,\r\n    projects,\r\n    people,\r\n    getSyncKeys,\r\n    importEntites,\r\n    importServerEntites,\r\n    exportServerEntities\r\n};","import * as React from 'react';\r\n\r\nexport const Loader: React.FC = (props) => {\r\n    return (\r\n        <div style={{display: 'flex', height: '100%', justifyContent: 'center', alignItems: 'center'}}>\r\n            <div style={{border: '1px solid #555', padding: '1rem 2rem', background: '#2e2e2e'}}>Loading...</div>\r\n        </div>\r\n    );\r\n}","import { Note } from \"./db/note\";\r\nimport { Task } from \"./db/task\";\r\nimport { Context } from \"./db/context\";\r\nimport { Project } from \"./db/project\";\r\nimport { Person } from \"./db/person\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { syncer } from \"./db/syncer\";\r\nimport { Loader } from \"./components/Loader\";\r\n\r\nexport class Data {\r\n    constructor(notes: Note[], tasks: Task[], contexts: Context[], projects: Project[], people: Person[]) {\r\n        this.notes = notes;\r\n        this.tasks = tasks;\r\n        this.contexts = contexts;\r\n        this.projects = projects;\r\n        this.people = people;\r\n    }\r\n\r\n    readonly notes: Note[];\r\n    readonly tasks: Task[];\r\n    readonly contexts: Context[];\r\n    readonly projects: Project[];\r\n    readonly people: Person[];\r\n};\r\n\r\ninterface DataContextState {\r\n    data: Data;\r\n    refreshData: () => void;\r\n}\r\n\r\nconst DataContext = React.createContext<DataContextState>({\r\n    data: null as any,\r\n    refreshData: () => {}\r\n});\r\n\r\nexport const DataProvider: React.FC = props => {\r\n    const [data, setData] = React.useState<Data>(null as any);\r\n\r\n    useEffect(() => {\r\n        async function init() {\r\n            syncer.registerDataListener(data => setData(data));\r\n            setData(await syncer.getData());\r\n            await syncer.startServerSync();\r\n            await syncer.ensureServerSyncEnqueued();\r\n        };\r\n        init();\r\n    }, []);\r\n\r\n    const refreshData = React.useCallback(async () => {\r\n        // setData(await syncer.getData());\r\n        syncer.startServerSync();\r\n    }, []);\r\n\r\n    const value: DataContextState = {\r\n        data,\r\n        refreshData\r\n    };\r\n\r\n    if (!data) {\r\n        return <Loader />;\r\n    }\r\n\r\n    return (\r\n      <DataContext.Provider value={value}>\r\n        {props.children}\r\n      </DataContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useData = () => {\r\n    const value = useContext(DataContext);\r\n    return value;\r\n};","import { Dropbox } from 'dropbox';\r\nimport {createInstance} from 'localforage';\r\n\r\nconst store = createInstance({name: 'store-dropbox'})\r\n\r\nconst localClientId = 'jh9cnt92wi5e5my';\r\nconst prodClientId = 'li12ai4q2cs3dkc';\r\n\r\nexport const isLocalMode = window.location.host !== 'life.rasmuskl.dk';\r\n\r\nconst clientId = isLocalMode ? localClientId : prodClientId;\r\n\r\ntryStoreAccessKey();\r\n\r\nexport function signIn() {\r\n    const dropbox = new Dropbox({ clientId, fetch });\r\n    window.location.assign(dropbox.getAuthenticationUrl(window.location.toString()));\r\n}\r\n\r\nexport async function isSignedIn() {\r\n    return !!(await store.getItem('token'));\r\n}\r\n\r\ninterface DropboxSnapshot {\r\n    cursor: string|null;\r\n    files: Set<string>;\r\n}\r\n\r\nasync function getStateSnapshot() {\r\n    const snapshot = await store.getItem('snapshot') as DropboxSnapshot|null;\r\n    return snapshot || { cursor: null, files: new Set<string>() };\r\n}\r\n\r\nasync function setStateSnapshot(snapshot: DropboxSnapshot|null) {\r\n    if (!snapshot) {\r\n        await store.removeItem('snapshot');\r\n    } else {\r\n        await store.setItem('snapshot', snapshot);\r\n    }\r\n}\r\n\r\nexport async function listFiles(useSnapshot = true) {\r\n    if(!await isSignedIn()) {\r\n        throw new Error('Not authenticated');\r\n    }\r\n\r\n    const dropbox = new Dropbox({ accessToken: await getAccessToken(), fetch });\r\n    let snapshot: DropboxSnapshot = { cursor: null, files: new Set<string>() };\r\n\r\n    if (useSnapshot) {\r\n        snapshot = await getStateSnapshot();\r\n    }\r\n\r\n    let hasMore = true;\r\n\r\n    while(hasMore) {\r\n        if (snapshot.cursor) {\r\n            const fileListResult = await dropbox.filesListFolderContinue({ cursor: snapshot.cursor });\r\n            const results = fileListResult.entries.filter(e => e['.tag'] === 'file').map(e => e.path_lower?.substring(1)).filter(p => p) as string[];\r\n            snapshot.cursor = fileListResult.cursor;\r\n            for(const file of results) {\r\n                snapshot.files.add(file);\r\n            }\r\n            hasMore = fileListResult.has_more;\r\n        } else {\r\n            const fileListResult = await dropbox.filesListFolder({path: '', recursive: true});\r\n            const results = fileListResult.entries.filter(e => e['.tag'] === 'file').map(e => e.path_lower?.substring(1)).filter(p => p) as string[];\r\n            snapshot.cursor = fileListResult.cursor;    \r\n            for(const file of results) {\r\n                snapshot.files.add(file);\r\n            }\r\n            hasMore = fileListResult.has_more;\r\n        }\r\n\r\n        await setStateSnapshot(snapshot);\r\n    }\r\n\r\n    return snapshot.files;\r\n}\r\n\r\nexport function getAccessTokenFromUrl() {\r\n    const results = parseAuthFromHash(window.location.hash);\r\n    return results.access_token;\r\n}\r\n\r\nexport async function tryStoreAccessKey() {\r\n    const accessToken = getAccessTokenFromUrl();\r\n\r\n    if (accessToken) {\r\n        await store.setItem('token', accessToken);\r\n    }\r\n}\r\n\r\nexport async function uploadFile(path: string, contents: string) {\r\n    if(!await isSignedIn()) {\r\n        throw new Error('Not authenticated');\r\n    }\r\n\r\n    const dropbox = new Dropbox({ accessToken: await getAccessToken(), fetch });\r\n    await dropbox.filesUpload({\r\n        path: `/${path}`,\r\n        contents\r\n    });\r\n}\r\n\r\nexport async function getFile<T>(path: string) {\r\n    if(!await isSignedIn()) {\r\n        throw new Error('Not authenticated');\r\n    }\r\n\r\n    const dropbox = new Dropbox({ accessToken: await getAccessToken(), fetch });\r\n    const response = await dropbox.filesDownload({path: `/${path}` })\r\n    return new Promise<T>((resolve) => {\r\n        const blob: Blob = (response as any).fileBlob;\r\n        const reader = new FileReader();\r\n        reader.addEventListener(\"loadend\", function() {\r\n            const json = reader.result as string;\r\n            resolve(JSON.parse(json) as T);\r\n        });\r\n        reader.readAsText(blob);\r\n    });\r\n}\r\n\r\n\r\nasync function getAccessToken() {\r\n    return await store.getItem('token') as string;\r\n}\r\n\r\nfunction parseAuthFromHash(str: string) {\r\n    const ret: { [k: string]: string[] | string } = {};\r\n\r\n    if (typeof str !== 'string') {\r\n        return ret;\r\n    }\r\n\r\n    str = str.trim().replace(/^(\\?|#|&)/, '');\r\n\r\n    if (!str) {\r\n        return ret;\r\n    }\r\n\r\n    str.split('&').forEach(function (param) {\r\n        const parts = param.replace(/\\+/g, ' ').split('=');\r\n        let key = parts.shift();\r\n        let val = parts.length > 0 ? parts.join('=') : null;\r\n\r\n        key = decodeURIComponent(key!);\r\n        val = val ? decodeURIComponent(val) : null;\r\n\r\n        var retVal = ret[key];\r\n        if (ret[key] === undefined) {\r\n            ret[key] = val!;\r\n        } else if (Array.isArray(retVal)) {\r\n            retVal.push(val!);\r\n        } else {\r\n            ret[key] = [ret[key] as string, val!];\r\n        }\r\n    });\r\n\r\n    return ret;\r\n}","import { db, ServerEntity } from \"./db\";\r\nimport * as _ from \"lodash\";\r\nimport { Data } from \"../model\";\r\nimport {EventListener} from './EventListener';\r\nimport * as dropboxApi from '../lib/dropboxApi';\r\nimport pLimit from 'p-limit';\r\n\r\nexport enum SyncStatus {\r\n    Idle,\r\n    Syncing,\r\n    Failed,\r\n};\r\n\r\nexport interface SyncResult {\r\n    startAt: Date;\r\n    endAt: Date;\r\n    fetch: number;\r\n    send: number;\r\n    error: Error|null;\r\n}\r\n\r\nclass Syncer {\r\n    status = SyncStatus.Idle;\r\n    results: SyncResult[] = [];\r\n    data: Data|null = null;\r\n    intervalHandle: number|null = null;\r\n\r\n    syncListener = new EventListener<SyncStatus>();\r\n    dataListener = new EventListener<Data>();\r\n\r\n    constructor() {\r\n        db.notes.changeListener.register(note => {\r\n            if(!this.data) {\r\n                return;\r\n            }\r\n\r\n            const notes = _.orderBy(this.data.notes.filter(x => x.id !== note.id).concat(note), x => x.updatedAt);\r\n            this.data = new Data(notes, this.data.tasks, this.data.contexts, this.data.projects, this.data.people);\r\n            this.dataListener.trigger(this.data);\r\n        });\r\n\r\n        db.tasks.changeListener.register(task => {\r\n            if(!this.data) {\r\n                return;\r\n            }\r\n\r\n            const tasks = this.data.tasks.filter(x => x.id !== task.id).concat(task);\r\n            this.data = new Data(this.data.notes, tasks, this.data.contexts, this.data.projects, this.data.people);\r\n            this.dataListener.trigger(this.data);\r\n        });\r\n\r\n        db.contexts.changeListener.register(context => {\r\n            if(!this.data) {\r\n                return;\r\n            }\r\n\r\n            const contexts = this.data.contexts.filter(x => x.id !== context.id).concat(context);\r\n            this.data = new Data(this.data.notes, this.data.tasks, contexts, this.data.projects, this.data.people);\r\n            this.dataListener.trigger(this.data);\r\n        });\r\n\r\n        db.projects.changeListener.register(project => {\r\n            if(!this.data) {\r\n                return;\r\n            }\r\n\r\n            const projects = this.data.projects.filter(x => x.id !== project.id).concat(project);\r\n            this.data = new Data(this.data.notes, this.data.tasks, this.data.contexts, projects, this.data.people);\r\n            this.dataListener.trigger(this.data);\r\n        });\r\n\r\n        db.people.changeListener.register(person => {\r\n            if(!this.data) {\r\n                return;\r\n            }\r\n\r\n            const people = this.data.people.filter(x => x.id !== person.id).concat(person);\r\n            this.data = new Data(this.data.notes, this.data.tasks, this.data.contexts, this.data.projects, people);\r\n            this.dataListener.trigger(this.data);\r\n        });\r\n    }\r\n\r\n    registerSyncListener(listener: (status: SyncStatus) => void) {\r\n        this.syncListener.register(listener)\r\n    }\r\n\r\n    registerDataListener(listener: (status: Data) => void) {\r\n        this.dataListener.register(listener)\r\n    }\r\n\r\n    getResults() {\r\n        return this.results;\r\n    }\r\n\r\n    async getData() {\r\n        if (!this.data) {\r\n            this.data = await this.loadData();\r\n        }\r\n\r\n        return this.data;\r\n    }\r\n\r\n    async ensureServerSyncEnqueued() {\r\n        if (this.intervalHandle !== null) {\r\n            return;\r\n        }\r\n\r\n        this.intervalHandle = setInterval(async () => {\r\n            await this.startServerSync();\r\n        }, 60000) as any;\r\n    }\r\n\r\n    async startServerSync() {\r\n        if (this.status === SyncStatus.Syncing) {\r\n            return;\r\n        }\r\n\r\n        if(!dropboxApi.isSignedIn()) {\r\n            return;\r\n        }\r\n\r\n        const startAt = new Date();\r\n        this.status = SyncStatus.Syncing;\r\n        this.syncListener.trigger(this.status);\r\n\r\n        function difference<T>(setA: Set<T>, setB: Set<T>): Set<T> {\r\n            let _difference = new Set(setA);\r\n            for (const key of setB) {\r\n                _difference.delete(key);\r\n            }\r\n            return _difference;\r\n        }\r\n\r\n        try {\r\n            const files = await dropboxApi.listFiles();\r\n            const syncKeys = new Set(await db.getSyncKeys());\r\n    \r\n            const toSend = difference(syncKeys, files);\r\n            const toFetch = difference(files, syncKeys);\r\n    \r\n            for(const key of toSend) {\r\n                const entities = await db.exportServerEntities([key]);\r\n                await dropboxApi.uploadFile(key, JSON.stringify(entities[0]));\r\n            }\r\n    \r\n            const limit = pLimit(10);\r\n            const promises = [];\r\n    \r\n            for(const key of toFetch) {\r\n                promises.push(limit(async () => {\r\n                    const entity = await dropboxApi.getFile<ServerEntity>(key);\r\n                    await db.importServerEntites([entity]);\r\n                }));\r\n            }\r\n    \r\n            await Promise.all(promises);\r\n\r\n            this.results.push({ startAt, endAt: new Date(), error: null, fetch: toFetch.size, send: toSend.size })\r\n            this.status = SyncStatus.Idle;\r\n            this.syncListener.trigger(this.status);\r\n        } catch (e) {\r\n            this.status = SyncStatus.Failed;\r\n            this.results.push({ startAt, endAt: new Date(), error: e && e.message ? e.message : e, fetch: 0, send: 0 });\r\n            this.syncListener.trigger(this.status);\r\n        }\r\n    }\r\n\r\n    private async loadData(): Promise<Data> {\r\n        const contexts = db.contexts.getAll();\r\n        const tasks = await db.tasks.getAll();\r\n        const projects = db.projects.getAll();\r\n        const people = db.people.getAll();\r\n        const notes = _.orderBy(await db.notes.getAll(), x => x.updatedAt);\r\n        \r\n        return new Data(notes, await tasks, await contexts, await projects, await people);\r\n    }\r\n}\r\n\r\nexport const syncer = new Syncer();\r\n\r\n","import * as React from 'react';\r\nimport './Layout.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { classes } from 'typestyle';\r\nimport { ServiceWorkerInstall } from './ServiceWorkerInstall';\r\nimport * as styles from '../layout/styles';\r\nimport { syncer, SyncStatus } from '../db/syncer';\r\n\r\nexport function isMobile() {\r\n    return window.matchMedia(\"(max-width: 768px)\").matches;\r\n}\r\n\r\nexport const Layout: React.FC<{}> = (props) => {\r\n    const [sidebar, setSidebar] = React.useState(() => !isMobile())\r\n    const [count, setCount] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n        syncer.registerSyncListener(() => setCount(c => c +  1));\r\n    }, []);\r\n\r\n    function onNavClick() {\r\n        if(isMobile()) {\r\n            setSidebar(false);\r\n        }\r\n    }\r\n\r\n    return <>\r\n        <section style={{display: 'flex', overflow: 'hidden', height: '100%'}}>\r\n            <React.Fragment key={count} />\r\n            <div className={classes('navbar')}>\r\n                <div className={classes(styles.horizontalSpace('1rem'))}>\r\n                    {!sidebar && (\r\n                        <>\r\n                            <NavLink className={classes('button', styles.hoverGlow)} to={ '/' } onClick={onNavClick} exact activeClassName='is-active'>Notes</NavLink>\r\n                            <NavLink className={classes('button', styles.hoverGlow)} to={ '/tasks' } onClick={onNavClick} exact activeClassName='is-active'>Tasks</NavLink>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <div className={classes(styles.horizontalSpace('1rem'))}>\r\n                    <NavLink className=\"button\" to=\"/sync\">Sync: {SyncStatus[syncer.status]}</NavLink>\r\n                    <ServiceWorkerInstall />\r\n                    <button className=\"button\" onClick={() => setSidebar(!sidebar)}>\r\n                        Menu\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes('sidebar', 'list')} style={{overflowY: 'auto', paddingTop: 52, height: '100%', width: sidebar ? undefined : 0, overflowX: 'hidden'}}>\r\n                <NavLink className={classes('item', styles.hoverGlow)} to={ '/' } onClick={onNavClick} exact activeClassName='is-active'>Notes</NavLink>\r\n                <NavLink className={classes('item', styles.hoverGlow)} to={ '/tasks' } onClick={onNavClick} exact activeClassName='is-active'>Tasks</NavLink>\r\n                <NavLink className={classes('item', styles.hoverGlow)} to={ '/projects' } onClick={onNavClick} exact activeClassName='is-active'>Projects</NavLink>\r\n                <NavLink className={classes('item', styles.hoverGlow)} to={ '/contexts' } onClick={onNavClick} exact activeClassName='is-active'>Contexts</NavLink>\r\n                <NavLink className={classes('item', styles.hoverGlow)} to={ '/people' } onClick={onNavClick} exact activeClassName='is-active'>People</NavLink>\r\n                <NavLink className={classes('item', styles.hoverGlow)} to={ '/playground' } onClick={onNavClick} exact activeClassName='is-active'>Playground</NavLink>\r\n                <NavLink className={classes('item', styles.hoverGlow)} to={ '/stats' } onClick={onNavClick} exact activeClassName='is-active'>Stats</NavLink>\r\n                <NavLink className={classes('item', styles.hoverGlow)} to={ '/settings' } onClick={onNavClick} exact activeClassName='is-active'>Settings</NavLink>\r\n            </div>\r\n\r\n            <div className=\"main\" style={{paddingTop: 52}}>\r\n                { props.children }\r\n            </div>\r\n        </section>\r\n    </>;\r\n}\r\n","import { Entity } from \"./db\";\r\n\r\nexport enum ContextState {\r\n    Active = 'Active',\r\n    Inactive = 'Inactive',\r\n}\r\n\r\nexport interface Context extends Entity {\r\n    type: 'context';\r\n    title: string;\r\n    contextId: string|null;\r\n    state: ContextState;\r\n}","import { Entity } from \"./db\";\r\n\r\nexport enum ProjectState {\r\n    Active = 'Active',\r\n    Incubated = 'Incubated',\r\n    Completed = 'Completed',\r\n    Dropped = 'Dropped',\r\n}\r\n\r\nexport interface Project extends Entity {\r\n    type: 'project',\r\n    title: string;\r\n    contextId: string|null;\r\n    state: ProjectState;\r\n}","import * as React from 'react';\r\nimport * as styles from '../layout/styles';\r\nimport { classes } from 'typestyle';\r\n\r\nexport const ToolSection: React.SFC<{ verticalAround?: boolean }> = (props) => {\r\n    let verticalAround = props.verticalAround;\r\n\r\n    if (verticalAround === undefined) {\r\n        verticalAround = true;\r\n    }\r\n\r\n    return (\r\n        <div className={classes(styles.horizontalSpace('.5rem', true), styles.verticalSpace('.5rem', verticalAround))}>{props.children}</div>\r\n    );\r\n}","import * as React from 'react';\r\n\r\ninterface ListProps<T> {\r\n    renderItem: (item: T) => JSX.Element;\r\n    items: T[];\r\n}\r\n\r\nexport function List<T>(props: ListProps<T>) {\r\n    return (\r\n        <div className=\"list\">\r\n            {props.items.map(props.renderItem)}\r\n        </div>\r\n    );\r\n}","import * as React from \"react\";\r\n\r\nexport const useQueryState = (initialValue: string|null, queryParam: string): [string|null, (value: string|null) => void] => {\r\n    const [rawValue, setRawValue] = React.useState(() => {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        return urlParams.get(queryParam) || initialValue;\r\n    });\r\n\r\n    const setValue = (value: string|null) => {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        setRawValue(value);\r\n        if (!value || value === initialValue) {\r\n            urlParams.delete(queryParam);\r\n        } else {\r\n            urlParams.set(queryParam, value);\r\n        }\r\n\r\n        const queryString = urlParams.toString();\r\n\r\n        if (queryString.length) {\r\n            window.history.replaceState(null, '', `?${queryString}`);\r\n        } else {\r\n            window.history.replaceState(null, '', window.location.pathname);\r\n        }\r\n\r\n        window.dispatchEvent(new (window as any).CustomEvent('popstate'));\r\n    };\r\n\r\n    return [rawValue, setValue];\r\n};\r\n\r\nexport const useQueryStateT = <T extends {}>(initialValue: T, queryParam: string, convertTo: (value: string|null) => T, convertFrom: (value: T) => string|null): [T, (value: T) => void] => {\r\n    const [rawValue, setRawValue] = React.useState<T>(() => {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        return convertTo(urlParams.get(queryParam)) || initialValue;\r\n    });\r\n\r\n    const setValue = (value: T) => {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        setRawValue(value);\r\n        if (!value || value === initialValue) {\r\n            urlParams.delete(queryParam);\r\n        } else {\r\n            const strValue = convertFrom(value);\r\n            if (strValue) {\r\n                urlParams.set(queryParam, strValue);\r\n            } else {\r\n                urlParams.delete(queryParam);\r\n            }\r\n        }\r\n\r\n        const queryString = urlParams.toString();\r\n\r\n        if (queryString.length) {\r\n            window.history.replaceState(null, '', `?${queryString}`);\r\n        } else {\r\n            window.history.replaceState(null, '', window.location.pathname);\r\n        }\r\n\r\n        window.dispatchEvent(new (window as any).CustomEvent('popstate'));\r\n    };\r\n\r\n    return [rawValue, setValue];\r\n};\r\n\r\nexport const useQueryStateBoolean = (initialValue: boolean, queryParam: string) => {\r\n    return useQueryStateT<boolean>(initialValue, queryParam, x => x === 'true', x => x === initialValue ? null : x.toString());\r\n};","import * as React from 'react';\r\nimport { isMobile } from './Layout';\r\nimport * as styles from '../layout/styles';\r\nimport { classes } from 'typestyle';\r\n\r\nexport const SettingsCompactor : React.FC<{className?: string, alwaysVisible?: () => JSX.Element, mobileOnly?: () => JSX.Element, wideStyle?:React.CSSProperties}> = props => {\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const alwaysVisible = props.alwaysVisible ? props.alwaysVisible() : null;\r\n\r\n    if(!isMobile()) {\r\n        return (\r\n            <div style={{display: 'flex', alignItems: 'center', ...props.wideStyle}} className={styles.horizontalSpace('.3rem')}>\r\n                {alwaysVisible}\r\n                {props.children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const mobileOnly = props.mobileOnly ? props.mobileOnly() : null;\r\n\r\n    if(!expanded) {\r\n        return (\r\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\r\n                {alwaysVisible}\r\n                {mobileOnly}\r\n                <div className=\"button\" onClick={() => setExpanded(true)}>S</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div style={{display: 'flex', flexDirection: 'column'}} className={styles.verticalSpace('.3rem')}>\r\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\r\n                {alwaysVisible}\r\n                <div className=\"button\" onClick={() => setExpanded(false)}>S</div>\r\n            </div>\r\n            <div className={classes(styles.verticalSpace('.3rem'), props.className)}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n};","import * as React from 'react';\r\nimport { useData } from '../model';\r\n\r\nexport const ContextTag: React.FC<{contextId: string|null}> = (props) => {\r\n    const {data} = useData();\r\n\r\n    if (!props.contextId) {\r\n        return null;\r\n    }\r\n\r\n    const context = data.contexts.find(p => p.id === props.contextId);\r\n\r\n    if (!context) {\r\n        return null;\r\n    }\r\n\r\n    return <div className=\"tag is-context\">{context.title}</div>;\r\n}","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as styles from '../layout/styles';\r\nimport { classes } from 'typestyle/lib';\r\nimport { useData } from '../model';\r\nimport { ToolSection } from '../framework/ToolSection';\r\nimport { List } from '../framework/List';\r\nimport * as ContextActions from '../lib/contextActions';\r\nimport { isMobile } from '../components/Layout';\r\nimport { Task } from '../db/task';\r\nimport { Context, ContextState } from '../db/context';\r\nimport { ProjectState, Project } from '../db/project';\r\nimport { db } from '../db/db';\r\nimport moment from 'moment';\r\nimport { useQueryState } from '../lib/UseQueryState';\r\nimport { SettingsCompactor } from '../components/SettingsCompactor';\r\nimport { ContextTag } from '../components/ContextTag';\r\n\r\ninterface Perspective {\r\n    id: string;\r\n    title: string;\r\n    groupedProject: boolean;\r\n    groupedContext: boolean;\r\n}\r\n\r\nlet perspectives: Perspective[] = [\r\n    { id: '1', title: 'All', groupedProject: false, groupedContext: false },\r\n    { id: '2', title: 'Grouped', groupedProject: false, groupedContext: true },\r\n    { id: '3', title: 'Grouped Project', groupedProject: true, groupedContext: false }\r\n]\r\n\r\nlet defaultPerspective = perspectives[1];\r\n\r\ninterface TaskFilters {\r\n    showCompleted: boolean;\r\n    showContextBar: boolean;\r\n    includeNested: boolean;\r\n    showDeferred: boolean;\r\n    showIncubated: boolean;\r\n}\r\n\r\nexport const TaskPage: React.FC<{}> = (props) => {\r\n    const {data, refreshData} = useData();\r\n    const [text, setText] = React.useState('');\r\n    const [options, setOptions] = React.useState<TaskFilters>({\r\n        showCompleted: false,\r\n        showDeferred: false,\r\n        showIncubated: false,\r\n        showContextBar: isMobile() ? false : true,\r\n        includeNested: true,\r\n    });\r\n\r\n    const [contextId, setContextId] = useQueryState(null, 'context');\r\n    const [projectId, setProjectId] = useQueryState(null, 'project');\r\n    const [perspectiveId, setPerspectiveId] = useQueryState('2', 'perspective');\r\n\r\n    const onKeyPress = async (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            await db.tasks.create({\r\n                title: text,\r\n                contextId: contextId,\r\n                projectId: projectId,\r\n                content: null,\r\n                state: 'active',\r\n                stateChangedAt: new Date().toISOString(),\r\n                noteId: null,\r\n            });\r\n\r\n            setText('');\r\n            refreshData();\r\n        }\r\n    }\r\n\r\n    const onCompleteChange = async (task: Task, e: React.ChangeEvent<HTMLInputElement>) => {\r\n        task.state = task.state === 'completed' ? 'active' : 'completed';\r\n        task.stateChangedAt = new Date().toISOString();\r\n        await db.tasks.save(task);\r\n        refreshData();\r\n    }\r\n\r\n    const renderProject = (task: Task) => {\r\n        const project = data.projects.find(p => p.id === task.projectId);\r\n\r\n        if (project) {\r\n            return <div className=\"tag is-info\">{project.title}</div>;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    const renderDeferred = (task: Task) => {\r\n        if (task.deferredUntil && new Date(task.deferredUntil) > new Date()) {\r\n            return <div className=\"tag is-primary\" title={`${moment(task.deferredUntil).format('YYYY-MM-DD')}`}>deferred {moment(task.deferredUntil).fromNow(true)}</div>;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const renderNote = (task: Task) => {\r\n        if (task.noteId) {\r\n            return <div className=\"tag is-primary\" >N</div>;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const renderTitle = (title: string) => {\r\n        const pattern = /(https?:\\/\\/[^\\s]+)/;\r\n        return title.split(pattern).map((c, i) => {\r\n            if (c.match(pattern)) {\r\n                let title = c.replace(/https?:\\/\\//, '');\r\n                title = title.replace(/\\/.*/, '/...');\r\n                return <a key={i} href={c} onClick={e => { e.stopPropagation(); }} target=\"_blank\"  rel=\"noopener noreferrer\" className=\"button is-small is-link\" style={{display: 'inline-block', marginLeft: '5px', marginRight: '5px'}}>{title}</a>;\r\n            }\r\n\r\n            return <span key={i}>{c}</span>;\r\n        });\r\n    };\r\n\r\n    const getFilteredContextIds = (contexts: ContextActions.NestedContexts) => {\r\n        if (contextId) {\r\n            const contextIds = [contextId];\r\n            const queue = [contextId];\r\n\r\n            while (queue.length && options.includeNested) {\r\n                const next = queue.pop();\r\n\r\n                if (!next) {\r\n                    break;\r\n                }\r\n\r\n                for(const nested of contexts.nestedContexts[next] || []) {\r\n                    contextIds.push(nested.id);\r\n                    queue.push(nested.id);\r\n                }\r\n            }\r\n\r\n            return contextIds;\r\n        } else {\r\n            return data.contexts.map(c => c.id);\r\n        }\r\n    };\r\n\r\n    const filterTasks = (complete: boolean, contexts: ContextActions.NestedContexts) => {\r\n        let tasks = data.tasks;\r\n\r\n        if (complete) {\r\n            tasks = tasks.filter(t => t.state === 'completed')\r\n        } else {\r\n            tasks = tasks.filter(t => t.state !== 'completed')\r\n        }\r\n\r\n        if (projectId) {\r\n            tasks = tasks.filter(t => t.projectId === projectId);\r\n        }\r\n\r\n        if (!options.showDeferred) {\r\n            tasks = tasks.filter(t => t.deferredUntil == null || new Date(t.deferredUntil) < new Date());\r\n        }\r\n\r\n        if (!options.showIncubated) {\r\n            tasks = tasks.filter(t => t.state !== 'incubated');\r\n\r\n            const incubatedProjectIds = data.projects.filter(p => p.state === ProjectState.Incubated).map(p => p.id);\r\n            tasks = tasks.filter(t => !t.projectId || incubatedProjectIds.indexOf(t.projectId) === -1);\r\n        }\r\n\r\n        if (contextId) {\r\n            const contextIds = getFilteredContextIds(contexts);\r\n            tasks = tasks.filter(t => t.contextId && contextIds.indexOf(t.contextId) !== -1);\r\n        }\r\n\r\n        return tasks.sort((a, b) =>  b.createdAt! < a.createdAt! ?  -1 : b.createdAt! > a.createdAt! ? 1 : 0);\r\n    }\r\n\r\n    const renderListContext = (context: Context, contexts: ContextActions.NestedContexts, depth = 0) => {\r\n        if (context.state && context.state === ContextState.Inactive) {\r\n            return <React.Fragment key={context.id}></React.Fragment>;\r\n        }\r\n\r\n        return (\r\n            <React.Fragment key={context.id}>\r\n                <div onClick={() => setContextId(context.id)} style={{paddingLeft: 10 + depth * 10}} className={classes('item', styles.hoverGlow, styles.cursorPointer)}>\r\n                    {context.title} <span style={{color: '#999'}}>{contexts.taskCounts[context.id]}</span>\r\n                </div>\r\n                {contexts.nestedContexts[context.id] && contexts.nestedContexts[context.id].map(c => (\r\n                    renderListContext(c, contexts, depth + 1)\r\n                ))}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const renderTask = (task: Task, skipProjectContext = false) => {\r\n        let source: string|null = null;\r\n        if (window.location.search.length) {\r\n            const urlParams = new URLSearchParams(window.location.search);\r\n            source = `?source=${encodeURIComponent(`${window.location.pathname}?${urlParams.toString()}`)}`\r\n        }\r\n\r\n        return (\r\n            <NavLink key={task.id} to={`/tasks/${task.id}${source ? source : ''}`} className={classes('item', 'task', styles.hoverGlow)}>\r\n                <div className=\"task-checkbox\">\r\n                    <input type=\"checkbox\" style={{display: 'block', padding: 10}} checked={task.state === 'completed'} onClick={e => e.preventDefault()} onChange={e => onCompleteChange(task, e)}/>\r\n                </div>\r\n                <div className=\"task-title\" style={{color: task.state === 'incubated' ? '#999' : undefined}}>\r\n                    {task.state === 'completed' ? <span style={{textDecoration: 'line-through'}}>{renderTitle(task.title)}</span> : renderTitle(task.title)}\r\n                    {task.state === 'incubated' ? <span> [Incubated]</span> : null}\r\n                </div>\r\n                <div className=\"task-details\">\r\n                    <div className=\"tags\">\r\n                        {renderNote(task)}\r\n                        {renderDeferred(task)}\r\n                        {!skipProjectContext && <ContextTag contextId={task.contextId} /> }\r\n                        {!skipProjectContext && renderProject(task)}\r\n                    </div>\r\n                </div>\r\n            </NavLink>\r\n        );\r\n    };\r\n\r\n    const perspective = perspectives.find(x => x.id === perspectiveId) || defaultPerspective;\r\n    const nestedContexts = ContextActions.getNestedContexts(data);\r\n\r\n    let taskBlock: JSX.Element[] = [];\r\n\r\n    if (perspective.groupedContext) {\r\n        const filteredContextIds: (string|null)[] = getFilteredContextIds(nestedContexts);\r\n\r\n        if (!contextId) {\r\n            filteredContextIds.push(null);\r\n        }\r\n\r\n        for (const contextId of filteredContextIds) {\r\n            const context = data.contexts.find(p => p.id === contextId);\r\n\r\n            let tasks = filterTasks(false, nestedContexts);\r\n\r\n            if (contextId) {\r\n                if (!context) {\r\n                    continue;\r\n                }\r\n\r\n                tasks = tasks.filter(t => t.contextId === contextId);\r\n\r\n                if (!tasks.length) {\r\n                    continue;\r\n                }\r\n\r\n                taskBlock.push(<div style={{padding: '.6rem', background: '#00503C'}}>{context.title}</div>)\r\n            } else {\r\n                tasks = tasks.filter(t => t.contextId === contextId);\r\n\r\n                if (!tasks.length) {\r\n                    continue;\r\n                }\r\n\r\n                taskBlock.push(<div style={{padding: '.6rem', background: '#00503C'}}>No Context</div>)\r\n            }\r\n\r\n            let stateOrder = [ProjectState.Active, ProjectState.Incubated, ProjectState.Completed, ProjectState.Dropped];\r\n    \r\n            const emptyActiveProjects: Project[] = [];\r\n    \r\n            let filteredProjects = data.projects;\r\n    \r\n            if (projectId !== null) {\r\n                filteredProjects = filteredProjects.filter(p => p.id === projectId);\r\n            }\r\n    \r\n            filteredProjects.sort((a, b) => stateOrder.indexOf(a.state) - stateOrder.indexOf(b.state)).forEach(p => {\r\n                let projectTasks = tasks.filter(t => t.projectId === p.id);\r\n    \r\n                if (!projectTasks.length) {\r\n                    if (p.state === ProjectState.Active) {\r\n                        if (contextId) {\r\n                            if (p.contextId && filteredContextIds.indexOf(p.contextId) !== -1) {\r\n                                emptyActiveProjects.push(p);\r\n                            }\r\n                        } else {\r\n                            emptyActiveProjects.push(p);\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n    \r\n                taskBlock.push(\r\n                    <React.Fragment key={`p-${p.id}`}>\r\n                        <div className=\"header link\" onClick={() => { setProjectId(p.id); setContextId(p.contextId); }}>\r\n                            {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''}\r\n                            <div style={{display: 'flex'}}>\r\n                                <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\r\n                            </div>\r\n                        </div>\r\n                        {projectTasks.map(t => renderTask(t, true))}\r\n                    </React.Fragment>\r\n                );\r\n            });\r\n    \r\n            const noProjectTasks = tasks.filter(t => t.projectId === null);\r\n    \r\n            if (noProjectTasks.length) {\r\n                taskBlock.push(\r\n                    <React.Fragment key={`no-p-${contextId}`}>\r\n                        <div className=\"header\">No Project</div>\r\n                        {noProjectTasks.map(t => renderTask(t, true))}\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n    \r\n            for(const p of emptyActiveProjects) {\r\n                if (p.contextId !== contextId) {\r\n                    continue;\r\n                }\r\n\r\n                taskBlock.push(\r\n                    <React.Fragment key={`p-${p.id}`}>\r\n                        <div className=\"header link\" onClick={() => { setProjectId(p.id); setContextId(p.contextId); }}>\r\n                            {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''} [Empty]\r\n                            <div style={{display: 'flex'}}>\r\n                                <div className=\"tags\">\r\n                                    <ContextTag contextId={p.contextId} />\r\n                                </div>\r\n                                <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\r\n                            </div>\r\n                        </div>\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n    \r\n            if (options.showCompleted) {\r\n                taskBlock.push(\r\n                    <React.Fragment key=\"completed\">\r\n                        <div className=\"header\">Completed</div>\r\n                        {filterTasks(true, nestedContexts).map(t => renderTask(t))}\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n        }\r\n    } else if (perspective.groupedProject) {\r\n        let tasks = filterTasks(false, nestedContexts);\r\n\r\n        let stateOrder = [ProjectState.Active, ProjectState.Incubated, ProjectState.Completed, ProjectState.Dropped];\r\n\r\n        const emptyActiveProjects: Project[] = [];\r\n\r\n        let filteredProjects = data.projects;\r\n\r\n        if (projectId !== null) {\r\n            filteredProjects = filteredProjects.filter(p => p.id === projectId);\r\n        }\r\n\r\n        const filteredContextIds = getFilteredContextIds(nestedContexts);\r\n\r\n        filteredProjects.sort((a, b) => stateOrder.indexOf(a.state) - stateOrder.indexOf(b.state)).forEach(p => {\r\n            let projectTasks = tasks.filter(t => t.projectId === p.id);\r\n\r\n            if (!projectTasks.length) {\r\n                if (p.state === ProjectState.Active) {\r\n                    if (contextId) {\r\n                        if (p.contextId && filteredContextIds.indexOf(p.contextId) !== -1) {\r\n                            emptyActiveProjects.push(p);\r\n                        }\r\n                    } else {\r\n                        emptyActiveProjects.push(p);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n\r\n            taskBlock.push(\r\n                <React.Fragment key={`p-${p.id}`}>\r\n                    <div className=\"header link\" onClick={() => { setProjectId(p.id); setContextId(p.contextId); }}>\r\n                        {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''}\r\n                        <div style={{display: 'flex'}}>\r\n                            <div className=\"tags\">\r\n                                <ContextTag contextId={p.contextId} />\r\n                            </div>\r\n                            <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\r\n                        </div>\r\n                    </div>\r\n                    {projectTasks.map(t => renderTask(t))}\r\n                </React.Fragment>\r\n            );\r\n        });\r\n\r\n        const noProjectTasks = tasks.filter(t => t.projectId === null);\r\n\r\n        if (noProjectTasks.length) {\r\n            taskBlock.push(\r\n                <React.Fragment key=\"no-p\">\r\n                    <div className=\"header\">No Project</div>\r\n                    {noProjectTasks.map(t => renderTask(t))}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n        for(const p of emptyActiveProjects) {\r\n            taskBlock.push(\r\n                <React.Fragment key={`p-${p.id}`}>\r\n                    <div className=\"header link\" onClick={() => { setProjectId(p.id); setContextId(p.contextId); }}>\r\n                        {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''} [Empty]\r\n                        <div style={{display: 'flex'}}>\r\n                            <div className=\"tags\">\r\n                                <ContextTag contextId={p.contextId} />\r\n                            </div>\r\n                            <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n        if (options.showCompleted) {\r\n            taskBlock.push(\r\n                <React.Fragment key=\"completed\">\r\n                    <div className=\"header\">Completed</div>\r\n                    {filterTasks(true, nestedContexts).map(t => renderTask(t))}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    } else {\r\n        taskBlock.push(\r\n            <React.Fragment key=\"tasks\">\r\n                {filterTasks(false, nestedContexts).map(t => renderTask(t))}\r\n                {options.showCompleted && <>\r\n                    <div className=\"header\">Completed</div>\r\n                    {filterTasks(true, nestedContexts).map(t => renderTask(t))}\r\n                </>}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div style={{display: 'flex', height: '100%'}}>\r\n            {options.showContextBar && <div style={{borderRight: '1px solid #666', width: 200}}>\r\n                <List<Context> items={nestedContexts.topContexts} renderItem={i => renderListContext(i, nestedContexts)} />\r\n            </div>}\r\n            <div style={{width: '100%'}}>\r\n                <ToolSection>\r\n                    <SettingsCompactor alwaysVisible={() => (\r\n                        <div className=\"button\" onClick={() => { setContextId(null); setProjectId(null); }}>R</div>\r\n                    )} mobileOnly={() => (\r\n                        <div className=\"button\" style={{marginLeft: 'auto', marginRight: 8}} onClick={() => setOptions({ ...options, showContextBar: !options.showContextBar })}>C</div>\r\n                    )}>\r\n                        <select style={{padding: '0.3rem', display: 'block'}} value={contextId || ''} onChange={e => setContextId(e.target.value === '' ? null : e.target.value) }>\r\n                            <option value=\"\">All contexts</option>\r\n                            {data.contexts.map(c => (\r\n                                <option key={c.id} value={c.id}>{c.title}</option>\r\n                            ))}\r\n                        </select>\r\n                        <select style={{padding: '0.3rem', display: 'block'}} value={projectId || ''} onChange={e => setProjectId(e.target.value === '' ? null : e.target.value)}>\r\n                            <option value=\"\">All projects</option>\r\n                            {data.projects.filter(c => c.state === ProjectState.Active).map(c => (\r\n                                <option key={c.id} value={c.id}>{c.title}</option>\r\n                            ))}\r\n                        </select>\r\n                        <select style={{padding: '0.3rem', display: 'block'}} value={perspectiveId || ''} onChange={e => setPerspectiveId(e.target.value === '' ? null : e.target.value)}>\r\n                            <option value=\"\">Select Perspective</option>\r\n                            {perspectives.map(c => (\r\n                                <option key={c.id} value={c.id}>{c.title}</option>\r\n                            ))}\r\n                        </select>\r\n                        <div>\r\n                            <input id=\"completed-box\" type=\"checkbox\" checked={options.showCompleted} onChange={() => setOptions({ ...options, showCompleted: !options.showCompleted })} />\r\n                            <label htmlFor=\"completed-box\">Show completed</label>\r\n                        </div>\r\n                        <div>\r\n                            <input id=\"deferred-box\" type=\"checkbox\" checked={options.showDeferred} onChange={() => setOptions({ ...options, showDeferred: !options.showDeferred })} />\r\n                            <label htmlFor=\"deferred-box\">Show deferred</label>\r\n                        </div>\r\n                        <div>\r\n                            <input id=\"incubated-box\" type=\"checkbox\" checked={options.showIncubated} onChange={() => setOptions({ ...options, showIncubated: !options.showIncubated })} />\r\n                            <label htmlFor=\"incubated-box\">Show incubated</label>\r\n                        </div>\r\n                        <div>\r\n                            <input id=\"context-box\" type=\"checkbox\" checked={options.showContextBar} onChange={() => setOptions({ ...options, showContextBar: !options.showContextBar })} />\r\n                            <label htmlFor=\"context-box\">Show context bar</label>\r\n                        </div>\r\n                        <div>\r\n                            <input id=\"include-nested-box\" type=\"checkbox\" checked={options.includeNested} onChange={() => setOptions({ ...options, includeNested: !options.includeNested })} />\r\n                            <label htmlFor=\"include-nested-box\">Include nested contexts</label>\r\n                        </div>\r\n                    </SettingsCompactor>\r\n                    <input type=\"text\" className=\"input is-large is-wide\" placeholder=\"Add task...\" value={text} onChange={e => setText(e.target.value)} onKeyPress={onKeyPress} />\r\n                </ToolSection>\r\n                <div className=\"list\">\r\n                    {taskBlock}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { Data } from \"../model\";\r\nimport * as _ from 'lodash';\r\nimport { Context } from \"../db/context\";\r\n\r\nexport interface NestedContexts {\r\n    topContexts: Context[];\r\n    nestedContexts: {[id: string]: Context[]};\r\n    taskCounts: {[id: string]: number};\r\n}\r\n\r\nexport function getNestedContexts(data: Data): NestedContexts {\r\n    const grouped = _.groupBy(data.contexts, x => x.contextId);\r\n    const taskCounts = _.countBy(data.tasks.filter(x => x.state === 'active'), x => x.contextId);\r\n\r\n    return {\r\n        topContexts: data.contexts.filter(x => !x.contextId),\r\n        nestedContexts: grouped,\r\n        taskCounts\r\n    };\r\n}","import {createInstance} from 'localforage';\r\n\r\nconst draftStore = createInstance({ name: 'drafts' });\r\n\r\nfunction getDraftKey(id: string|undefined) {\r\n    if(!id) {\r\n        return 'draft-new';\r\n    }\r\n\r\n    return `draft-${id}`;\r\n}\r\n\r\nexport async function hasDraft(id: string|undefined) {\r\n    const draft = await draftStore.getItem<string>(getDraftKey(id));\r\n    return !!draft;\r\n}\r\n\r\nexport async function getDraftIds() {\r\n    const keys = await draftStore.keys();\r\n    return keys.map(k => k.replace('draft-', ''));\r\n}\r\n\r\nexport async function getDraft(id: string|undefined) {\r\n    return await draftStore.getItem<string>(getDraftKey(id));\r\n}\r\n\r\nexport async function setDraft(id: string|undefined, text: string) {\r\n    return await draftStore.setItem(getDraftKey(id), text);\r\n}\r\n\r\nexport async function clearDraft(id: string|undefined) {\r\n    return await draftStore.removeItem(getDraftKey(id));\r\n}","import * as React from 'react';\r\n\r\nexport function TagInput(props: { tagState: TagState, onChange: (tagState: TagState) => void }) {\r\n    const [focus, setFocus] = React.useState(false)\r\n\r\n    const timeoutId = React.useRef<number|undefined>(undefined);\r\n    const tagInput = React.useRef<any>();\r\n\r\n    function onTextChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n        props.onChange(props.tagState.withText(e.target.value))\r\n    }\r\n\r\n    function onKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\r\n        if (e.key === 'ArrowUp') {\r\n            props.onChange(props.tagState.decrementIndex());\r\n        } else if (e.key === 'ArrowDown') {\r\n            props.onChange(props.tagState.incrementIndex());\r\n        } else if (e.key === 'Enter') {\r\n            if (props.tagState.text === '') {\r\n                props.onChange(props.tagState.addSelectedTag());\r\n            } else {\r\n                props.onChange(props.tagState.addText());\r\n            }\r\n        } else if (e.key === 'Tab') {\r\n            props.onChange(props.tagState.addSelectedTag());\r\n            e.preventDefault();\r\n        } else if (e.key === 'Backspace') {\r\n            if (props.tagState.text === '') {\r\n                props.onChange(props.tagState.reopenLastTag());\r\n            }\r\n        }\r\n    }\r\n\r\n    function onClickTag(tag: string) {\r\n        props.onChange(props.tagState.addTag(tag));\r\n        tagInput.current.focus();\r\n    }\r\n\r\n    function onFocus() {\r\n        clearTimeout(timeoutId.current);\r\n\r\n        if(focus) {\r\n            return;\r\n        }\r\n\r\n        setFocus(true);\r\n    }\r\n\r\n    function onBlur() {\r\n        if(!focus) {\r\n            return;\r\n        }\r\n\r\n        timeoutId.current = setTimeout(() => {\r\n            setFocus(false);\r\n        }, 100) as any;\r\n    }\r\n\r\n    return (\r\n        <div className=\"tag-input\" onFocus={() => onFocus()} onBlur={() => onBlur()}>\r\n            <div className=\"tags\">\r\n                {props.tagState.selectedTags.map((t, i) => <Tag key={`tag-${t}-${i}`} name={t} />)}\r\n                <input ref={tagInput} placeholder=\"Tag\" type=\"text\" className=\"\" onChange={e => onTextChange(e)} onKeyDown={e => onKeyPress(e)} value={props.tagState.text} />\r\n            </div>\r\n            {focus && props.tagState.getFilteredAvailableTags().length > 0 &&\r\n                <div className=\"panel\">\r\n                    {props.tagState.getFilteredAvailableTags().slice(0, 10).map((t, i) => <div key={`available-tag-${t}`} style={props.tagState.index === i ? { background: '#078263'} : {}} onClick={() => onClickTag(t)}>{t}</div>)}\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport class TagState {\r\n    availableTags: string[];\r\n    selectedTags: string[];\r\n    text: string;\r\n    index: number;\r\n\r\n    constructor(availableTags: string[], selectedTags: string[], text = \"\", index = 0) {\r\n        this.availableTags = availableTags;\r\n        this.selectedTags = selectedTags;\r\n        this.text = text;\r\n        this.index = index;\r\n    }\r\n\r\n    withText(text: string) {\r\n        return new TagState(this.availableTags, this.selectedTags, text, this.index);\r\n    }\r\n\r\n    withAvailableTags(availableTags: string[]) {\r\n        return new TagState(availableTags, this.selectedTags, this.text, this.index);\r\n    }\r\n\r\n    withSelectedTags(selectedTags: string[]) {\r\n        return new TagState(this.availableTags, selectedTags, this.text, this.index);\r\n    }\r\n\r\n    decrementIndex() {\r\n        return new TagState(this.availableTags, this.selectedTags, this.text, Math.max(0, this.index - 1));\r\n    }\r\n\r\n    incrementIndex() {\r\n        return new TagState(this.availableTags, this.selectedTags, this.text, Math.max(0, Math.min(this.availableTags.length - 1, this.index + 1)));\r\n    }\r\n\r\n    addSelectedTag() {\r\n        return new TagState(this.availableTags, this.selectedTags.concat([this.getFilteredAvailableTags()[this.index]]), '', 0);\r\n    }\r\n\r\n    addTag(tag: string) {\r\n        return new TagState(this.availableTags, this.selectedTags.concat([tag]), '', 0);\r\n    }\r\n\r\n    addText() {\r\n        return new TagState(this.availableTags, this.selectedTags.concat([this.text]), '', 0);\r\n    }\r\n\r\n    reopenLastTag() {\r\n        const lastTag = this.selectedTags[this.selectedTags.length - 1];\r\n        return new TagState(this.availableTags, this.selectedTags.slice(0, this.selectedTags.length - 1), lastTag, 0);\r\n    }\r\n\r\n    getFilteredAvailableTags() {\r\n        return this.availableTags.filter(t => this.selectedTags.indexOf(t) === -1).filter(t => t.toLowerCase().indexOf(this.text) !== -1);\r\n    }\r\n\r\n    getTags() {\r\n        return this.selectedTags.join(' ');\r\n    }\r\n}\r\n\r\nexport const Tag: React.FC<{ name: string }> = props => {\r\n    return (\r\n        <div className=\"tag is-dark\">{props.name}</div>\r\n    );\r\n}\r\n\r\nexport const TagList: React.FC<{tags: string}> = props => {\r\n    return (\r\n        <div className=\"tags\" style={{marginBottom: 0}}>{props.tags && props.tags.split(' ').map((t, i) => <Tag key={i} name={t} />)}</div>\r\n    );\r\n}","import { Entity } from \"./db\";\r\nimport moment from \"moment\";\r\n\r\nexport type NoteMode = 'markdown'|'tree';\r\n\r\nexport interface Note extends Entity {\r\n    type: 'note',\r\n    mode: NoteMode|null;\r\n    title: string;\r\n    tags: string;\r\n    content: string;\r\n    contextId: string|null;\r\n    noteFor: Reference|null;\r\n    dailyDate: string|null;\r\n};\r\n\r\nexport interface Reference {\r\n    type: string;\r\n    id: string;\r\n};\r\n\r\nexport interface HasNote extends Entity {\r\n    noteId: string|null;\r\n}\r\n\r\nexport function getNoteTitle(note: Pick<Note, 'dailyDate'|'title'|'content'>) {\r\n    if (note.dailyDate) {\r\n        return `Daily - ${moment(note.dailyDate).format('MMMM Do, YYYY')}`;\r\n    }\r\n\r\n    if (note.title && note.title.length) {\r\n        return note.title;\r\n    }\r\n\r\n    const parsedTitle = /# (.+)/.exec(note.content);\r\n\r\n    if (parsedTitle && parsedTitle.length > 1) {\r\n        return parsedTitle[1];\r\n    }\r\n\r\n    return '';\r\n}\r\n\r\nfunction escapeRegExp(str: string) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\r\n}\r\n\r\nexport function getNoteContextTitlePrefixRegExp(contextTitle: string) {\r\n    return new RegExp(`^${escapeRegExp(contextTitle)}/`, 'i')\r\n}\r\n\r\nexport function getNoteTitleMatchRegExp(reference: string) {\r\n    return new RegExp(`^${escapeRegExp(reference)}$`, 'i')\r\n}\r\n\r\nexport function getNoteReferenceMatchRegExp(reference: string) {\r\n    return new RegExp(`\\\\[\\\\[${escapeRegExp(reference)}\\\\]\\\\]`, 'i')\r\n}","import * as React from 'react';\r\nimport marked from 'marked';\r\nimport '../github-markdown.css';\r\nimport { useData } from '../model';\r\nimport { getNoteTitleMatchRegExp, getNoteContextTitlePrefixRegExp } from '../db/note';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst regex = /\\[\\[([^\\]]+)\\]\\]/ig;\r\n\r\nexport const MarkedViewer: React.FC<{ markdown: string; contextId: string|null }> = props => {\r\n    const history = useHistory();\r\n    const {data} = useData();\r\n\r\n    (window as any).lifeNavigate = function(url: string) {\r\n        history.push(url);\r\n        return false;\r\n    };\r\n\r\n    const markdown = props.markdown.replace(regex, (_, group1) => {\r\n        let matchContextId = props.contextId;\r\n        let matchTitle = group1;\r\n\r\n        const prefixContext = data.contexts.find(x => getNoteContextTitlePrefixRegExp(x.title).test(group1));\r\n        if (prefixContext) {\r\n            matchTitle = matchTitle.substring(prefixContext.title.length + 1);\r\n            matchContextId = prefixContext.id;\r\n        }\r\n\r\n        const referenceRegExp = getNoteTitleMatchRegExp(matchTitle);\r\n        const note = data.notes.find(x => x.contextId === matchContextId && referenceRegExp.test(x.title));\r\n\r\n        if (note) {\r\n            const url = `/notes/${note.id}`;\r\n            return `<span style=\"color: #444\">[[ </span><a onclick=\"return lifeNavigate('${url}')\" href=\"${url}\">${group1}</a><span style=\"color: #444\"> ]]</span>`;\r\n        }\r\n\r\n        const url = `/notes/new?title=${encodeURIComponent(group1)}${props.contextId ? `&context=${props.contextId}` : ''}`;\r\n        return `<span style=\"color: #444\">[[ </span><a onclick=\"return lifeNavigate('${url}')\" href=\"${url}\">${group1}</a><span style=\"color: #444\"> ? ]]</span>`;\r\n    });\r\n\r\n    const html = marked(markdown);\r\n    return (\r\n        <div className=\"marked-viewer note markdown-body\" dangerouslySetInnerHTML={{ __html: html }}></div>\r\n    );\r\n};","import * as React from 'react';\r\nimport { MarkedViewer } from './MarkedViewer';\r\nimport * as styles from '../layout/styles';\r\nimport { classes } from 'typestyle';\r\nimport { NoteMode } from '../db/note';\r\n\r\nimport AceEditor from \"react-ace\";\r\nimport {textCompleter, snippetCompleter, keyWordCompleter} from \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport \"ace-builds/src-noconflict/mode-markdown\";\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\nimport { Data } from '../model';\r\n\r\nexport enum SplitMode {\r\n    Split,\r\n    Editor,\r\n    Preview\r\n}\r\n\r\nexport const NoteModeSelector: React.SFC<{mode: NoteMode, onModeChange: (mode: NoteMode) => void}> = props => (\r\n    <div className={classes(styles.horizontalSpace('.5rem'))}>\r\n        <button className=\"button\" style={{background: !props.mode || props.mode !== 'markdown' ? '#444' : undefined}} onClick={() => props.onModeChange('markdown')}>Markdown</button>\r\n        <button className=\"button\" style={{background: props.mode !== 'tree' ? '#444' : undefined}} onClick={() => props.onModeChange('tree')}>Tree</button>\r\n    </div>\r\n);\r\n\r\n\r\nexport const SplitModeSelector: React.SFC<{mode: SplitMode, onModeChange: (mode: SplitMode) => void}> = props => (\r\n    <div className={classes(styles.horizontalSpace('.5rem'))}>\r\n        <button className=\"button\" style={{background: props.mode !== SplitMode.Split ? '#444' : undefined}} onClick={() => props.onModeChange(SplitMode.Split)}>Split</button>\r\n        <button className=\"button\" style={{background: props.mode !== SplitMode.Editor ? '#444' : undefined}} onClick={() => props.onModeChange(SplitMode.Editor)}>Editor</button>\r\n        <button className=\"button\" style={{background: props.mode !== SplitMode.Preview ? '#444' : undefined}} onClick={() => props.onModeChange(SplitMode.Preview)}>Preview</button>\r\n    </div>\r\n);\r\n\r\nexport class SimpleSplitEditor extends React.Component<{ text: string, onTextChanged: (text: string) => void, expand?: boolean, mode: SplitMode, data: Data, contextId: string|null }, {}> {\r\n\r\n    render() {\r\n        const style: React.CSSProperties = {};\r\n\r\n        if(this.props.expand) {\r\n            style.width = '100%';\r\n            style.height = '100%';\r\n            style.zIndex = 100;\r\n            style.display = 'flex';\r\n            style.maxHeight = '100%';\r\n        }\r\n\r\n        const border = '1px solid #666';\r\n        const components = [];\r\n\r\n        let textAreaStyle: React.CSSProperties = {\r\n            flexGrow: 1, \r\n            minWidth: '50%', \r\n            borderTop: border, \r\n            height: '100%'\r\n        };\r\n\r\n        let markedStyle: React.CSSProperties = {\r\n            flexGrow: 1, \r\n            minWidth: '50%', \r\n            background: 'transparent', \r\n            padding: '1rem', \r\n            borderTop: border\r\n        };\r\n\r\n        if (this.props.mode === SplitMode.Split) {\r\n            textAreaStyle.borderRight = border;\r\n            markedStyle.overflowY = 'scroll';\r\n        }\r\n\r\n        if (this.props.mode === SplitMode.Editor || this.props.mode === SplitMode.Split) {\r\n            components.push(\r\n                    <AceEditor \r\n                        key=\"editor\"\r\n                        value={this.props.text} \r\n                        fontSize={18}\r\n                        style={textAreaStyle}\r\n                        onChange={e => this.props.onTextChanged(e)} \r\n                        mode=\"markdown\"\r\n                        theme=\"monokai\"\r\n                        showGutter={false} \r\n                        showPrintMargin={false}\r\n                        wrapEnabled={true}\r\n                        enableBasicAutocompletion={[snippetCompleter, textCompleter, keyWordCompleter] as any}\r\n                        enableLiveAutocompletion={true}\r\n                        enableSnippets={true}\r\n                    />\r\n            );\r\n        }\r\n\r\n        if (this.props.mode === SplitMode.Preview || this.props.mode === SplitMode.Split) {\r\n            components.push(\r\n                <div key=\"2\" style={markedStyle}>\r\n                    <MarkedViewer markdown={this.props.text} contextId={this.props.contextId} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div style={style}>\r\n                {components}\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { useState, useRef } from 'react';\r\nimport { classes } from 'typestyle';\r\nimport { horizontalSpace } from '../layout/styles';\r\nimport { MarkedViewer } from './MarkedViewer';\r\nimport AceEditor, { ICommand } from \"react-ace\";\r\n\r\nimport {textCompleter, snippetCompleter, keyWordCompleter} from \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport \"ace-builds/src-noconflict/mode-markdown\";\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\nimport ReactAce from 'react-ace/lib/ace';\r\nimport { Loader } from './Loader';\r\nimport { getNoteReferenceMatchRegExp } from '../db/note';\r\nimport { useData } from '../model';\r\n\r\ninterface Node {\r\n    text: string;\r\n    nodes: Node[];\r\n}\r\n\r\nexport const TreeViewer: React.FC<{ json: string, contextId: string|null, referenceTitle?: string }> = (props) => {\r\n    const [nodes, setNodes] = useState<Node[]|null>(null);\r\n    const [invalid, setInvalid] = useState(false);\r\n\r\n    React.useEffect(() => {\r\n        try {\r\n            let nodes = [];\r\n            if (props.json) {\r\n                nodes = JSON.parse(props.json)\r\n            }\r\n            setNodes(nodes);\r\n        } catch {\r\n            setInvalid(true);\r\n        }\r\n    }, [props.json]);\r\n\r\n    if (invalid) {\r\n        return <div>Invalid json</div>;\r\n    }\r\n\r\n    if (!nodes) {\r\n        return <Loader />;\r\n    }\r\n\r\n    const renderNode = (node: Node, index: number, level: number, filter: RegExp|null) => {\r\n        const extra: JSX.Element[] = [];\r\n        if (filter) {\r\n            if (filter.test(node.text)) {\r\n                filter = null;\r\n                if (level > 0) {\r\n                    extra.push(<div key={`extra-${index}-${level}`} style={{paddingTop: 8, color: '#aaa'}}>{'... > '.repeat(level)}</div>)\r\n                }\r\n            } else {\r\n                return (\r\n                    <React.Fragment key={`${level}-${index}`}>\r\n                        {node.nodes.map((n, i) => renderNode(n, i, level + 1, filter))}\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <React.Fragment key={`${level}-${index}`}>\r\n                {extra}\r\n                <div style={{display: 'flex', padding: '.6rem .8rem'}}>\r\n                    <div style={{letterSpacing: '.5rem', color: '#777', lineHeight: 1.5}}>•</div>\r\n                    <MarkedViewer markdown={node.text} contextId={props.contextId} />\r\n                </div>\r\n                <div style={{borderLeft: '1px solid #555', paddingLeft: 16, marginLeft: 16}}>\r\n                    {node.nodes.map((n, i) => renderNode(n, i, level + 1, filter))}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const referenceRegExp = props.referenceTitle ? getNoteReferenceMatchRegExp(props.referenceTitle) : null;\r\n    return (\r\n        <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'space-between', height: '100%'}}>\r\n            <div style={{width: '100%'}}>\r\n                {nodes.map((n, i) => renderNode(n, i, 0, referenceRegExp))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const TreeEditor: React.FC<{text: string, onTextChanged: (text: string) => void, contextId: string|null}> = (props) => {\r\n    const {data} = useData();\r\n    const [invalid] = useState(() => {\r\n        if (!props.text || props.text === '') {\r\n            return false;\r\n        }\r\n        try {\r\n            JSON.parse(props.text);\r\n            return false;\r\n        } catch {\r\n            return true;\r\n        }\r\n    })\r\n\r\n    const [nodes, setNodes] = useState<Node[]>(() => {\r\n        if (invalid) {\r\n            return [];\r\n        }\r\n\r\n        if (!props.text || props.text === '') {\r\n            return [\r\n                { text: '', nodes: [] }\r\n            ];\r\n        }\r\n\r\n        return JSON.parse(props.text);\r\n    });\r\n\r\n    const inputRef = useRef<ReactAce>(null);\r\n    const [active, setActive] = useState(nodes[0]);\r\n\r\n    const [noteTitles] = React.useState(() => data.notes.map(n => {\r\n        if (!n.title || !n.title.length) {\r\n            return null;\r\n        }\r\n\r\n        if (n.contextId === props.contextId) {\r\n            return n.title;\r\n        }\r\n\r\n        const context = data.contexts.find(c => c.id === n.contextId);\r\n\r\n        if(!context) {\r\n            return null;\r\n        }\r\n\r\n        return `${context.title}/${n.title}`;\r\n    }).filter(t => t !== null) as string[])\r\n\r\n    if (invalid) {\r\n        return (\r\n            <div>Invalid tree content (not valid JSON).</div>\r\n        )\r\n    }\r\n\r\n    const updateText = () => {\r\n        props.onTextChanged(JSON.stringify(nodes));\r\n    }\r\n\r\n    const onInputChanged = (node: Node, value: string) => {\r\n        node.text = value; \r\n        setNodes([...nodes]);\r\n        updateText();\r\n    };\r\n\r\n    const getParentNode = (targetNode: Node, searchNodes: Node[] = nodes, parentNode: Node|null = null): Node|null => {\r\n      for(const node of searchNodes) {\r\n          if (node === targetNode) {\r\n              return parentNode;\r\n          }\r\n\r\n          const childResult = getParentNode(targetNode, node.nodes, node);\r\n          if (childResult) {\r\n              return childResult;\r\n          }\r\n      }\r\n\r\n      return null;\r\n    };\r\n\r\n    const preorderTraversal = () => {\r\n        const result: Node[] = [];\r\n        const stack = [...nodes].reverse();\r\n            \r\n        while(stack.length) {\r\n            let node = stack.pop();\r\n\r\n            if (!node) {\r\n                return result;\r\n            }\r\n\r\n            result.push(node);\r\n\r\n            for(let childNode of [...node.nodes].reverse()) {\r\n                stack.push(childNode);\r\n            }\r\n\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    const insertNode = (afterNode: Node, above = false) => {\r\n        const parentNode = getParentNode(afterNode);\r\n        const searchNodes = parentNode ? parentNode.nodes : nodes;\r\n        const nodeIndex = searchNodes.findIndex(x => x === afterNode);\r\n        const node: Node = { text: '', nodes: [] };\r\n        searchNodes.splice(nodeIndex + (above ? 0 : 1), 0, node);\r\n        setNodes([...nodes]);\r\n        return node;\r\n    };\r\n\r\n    const removeNode = (node: Node) => {\r\n        const parentNode = getParentNode(node);\r\n        const searchNodes = parentNode ? parentNode.nodes : nodes;\r\n        const nodeIndex = searchNodes.findIndex(x => x === node);\r\n        searchNodes.splice(nodeIndex, 1);\r\n        setNodes([...nodes]);\r\n        return node;\r\n    };\r\n\r\n    const removeNodeIfEmpty = (node: Node) => {\r\n        if (node.text.length || node.nodes.length) {\r\n            return;\r\n        }\r\n        removeNode(node);\r\n    };\r\n\r\n    const indentNode = (node: Node) => {\r\n        const parentNode = getParentNode(node);\r\n        const searchNodes = parentNode ? parentNode.nodes : nodes;\r\n        const nodeIndex = searchNodes.findIndex(x => x === node);\r\n\r\n        if (nodeIndex === 0) {\r\n            return;\r\n        } else {\r\n            searchNodes.splice(nodeIndex, 1);\r\n            searchNodes[nodeIndex - 1].nodes.push(node);\r\n            setNodes([...nodes]);\r\n        }\r\n    };\r\n\r\n    const unindentNode = (node: Node) => {\r\n        const parentNode = getParentNode(node);\r\n        \r\n        if(parentNode === null) {\r\n            return;\r\n        }\r\n\r\n        const parentParentNode = getParentNode(parentNode);\r\n        const targetNodes = parentParentNode ? parentParentNode.nodes : nodes;\r\n        const parentNodeIndex = targetNodes.findIndex(x => x === parentNode);\r\n        targetNodes.splice(parentNodeIndex + 1, 0, node);\r\n        const nodeIndex = parentNode.nodes.findIndex(x => x === node);\r\n        parentNode.nodes.splice(nodeIndex, 1);\r\n\r\n        setNodes([...nodes]);\r\n    };\r\n    \r\n    const commands: ICommand[] = [\r\n        { name: 'indent', bindKey: { win: 'tab', mac: 'tab' }, exec: () => {\r\n            setTimeout(() => {\r\n                indentNode(active);\r\n            }, 0);\r\n            return true;\r\n        }},\r\n        { name: 'unindent', bindKey: { win: 'shift+tab', mac: 'shift+tab' }, exec: () => {\r\n            setTimeout(() => {\r\n                unindentNode(active);\r\n            }, 0);\r\n            return true;\r\n        }},\r\n        { name: 'enter', bindKey: { win: 'enter', mac: 'enter' }, exec: () => {\r\n            if (active.text === '') {\r\n                return;\r\n            }\r\n            const above = inputRef.current && inputRef.current.editor.getCursorPosition().row === 0 && inputRef.current.editor.getCursorPosition().column === 0;\r\n            setTimeout(() => {\r\n                const newNode = insertNode(active, !!above);\r\n                setActive(newNode);\r\n            }, 0);\r\n            return true;\r\n        }},\r\n        { name: 'up', bindKey: { win: 'up', mac: 'up' }, exec: () => {\r\n            const searchNodes = preorderTraversal();\r\n            let activeIndex = searchNodes.findIndex(x => x === active);\r\n            activeIndex = Math.max(0, activeIndex - 1);\r\n            setTimeout(() => {\r\n                setActive(searchNodes[activeIndex]);\r\n                removeNodeIfEmpty(active);\r\n            }, 0);\r\n            return true;\r\n        }},\r\n        { name: 'down', bindKey: { win: 'down', mac: 'down' }, exec: () => {\r\n            const searchNodes = preorderTraversal();\r\n            let activeIndex = searchNodes.findIndex(x => x === active);\r\n            activeIndex = Math.min(searchNodes.length - 1, activeIndex + 1);\r\n            setTimeout(() => {\r\n                setActive(searchNodes[activeIndex]);\r\n                removeNodeIfEmpty(active);\r\n            }, 0);\r\n            return true;\r\n        }},\r\n        { name: 'space', bindKey: { win: 'space', mac: 'space' }, exec: () => {\r\n            const atStart = inputRef.current && inputRef.current.editor.getCursorPosition().row === 0 && inputRef.current.editor.getCursorPosition().column === 0;\r\n            if (atStart) {\r\n                setTimeout(() => {\r\n                    indentNode(active);\r\n                }, 0);\r\n                return true;\r\n            }\r\n            return false;\r\n        }},\r\n        { name: 'backspace', bindKey: { win: 'backspace', mac: 'backspace' }, exec: () => {\r\n            const atStart = inputRef.current && inputRef.current.editor.getCursorPosition().row === 0 && inputRef.current.editor.getCursorPosition().column === 0;\r\n            if (atStart) {\r\n                setTimeout(() => {\r\n                    unindentNode(active);\r\n                }, 0);\r\n                return true;\r\n            }\r\n            return false;\r\n        }}\r\n    ];\r\n\r\n    // Look at https://github.com/ajaxorg/ace/blob/41ac47ec9e26f65fe0ffedeedf14b525a22f5462/lib/ace/ext/language_tools.js#L42-L48\r\n    const completions = {\r\n        getCompletions: (editor: any, session: any, pos: any, prefix: any, callback: CompletionCallback) => {\r\n            // console.log('editor', editor, 'session', session, 'pos', pos, 'prefix', prefix, 'callback', callback);\r\n            const token = session.getTokenAt(pos.row, pos.column);\r\n\r\n            if (!token) {\r\n                return;\r\n            }\r\n\r\n            const requiredPrefix = '[[';\r\n            const strWithPrefix = token.value.substring(pos.column - prefix.length - requiredPrefix.length);\r\n\r\n            if (!strWithPrefix.startsWith(requiredPrefix)) {\r\n                return;\r\n            }\r\n\r\n            const completions = noteTitles.map(n => ({\r\n                caption: n,\r\n                snippet: n,\r\n                meta: 'note',\r\n            }))\r\n\r\n            callback(null, completions);\r\n        }\r\n    }\r\n\r\n    const renderNode = (node: Node, index: number, level: number) => {\r\n        const isActive = node === active;\r\n        return (\r\n            <React.Fragment key={`${level}-${index}`}>\r\n                <div style={{display: 'flex', background: isActive ? '#292929' : undefined, padding: '.6rem .8rem'}} onClick={() => { if(!isActive) { setActive(node); }; }}>\r\n                    <div style={{letterSpacing: '.5rem', color: isActive ? '#078263' : '#777', lineHeight: 1.5}}>•</div>\r\n                    {isActive \r\n                        ? <AceEditor\r\n                            key=\"editor\"\r\n                            ref={inputRef}\r\n                            value={node.text} \r\n                            fontSize={16}\r\n                            style={{background: 'transparent', width: '100%'}}\r\n                            onChange={e => onInputChanged(node, e)} \r\n                            mode=\"markdown\"\r\n                            theme=\"monokai\"\r\n                            focus\r\n                            highlightActiveLine={false}\r\n                            showGutter={false} \r\n                            showPrintMargin={false}\r\n                            wrapEnabled={true}\r\n                            maxLines={Infinity}\r\n                            commands={commands}\r\n                            // enableBasicAutocompletion={[snippetCompleter, textCompleter, keyWordCompleter] as any}\r\n                            enableBasicAutocompletion={[completions, snippetCompleter, textCompleter, keyWordCompleter] as any}\r\n                            enableLiveAutocompletion={true}\r\n                            enableSnippets={true}\r\n                            />\r\n                        : <MarkedViewer markdown={node.text} contextId={props.contextId} />}\r\n                </div>\r\n                <div style={{borderLeft: '1px solid #555', marginLeft: 16, paddingLeft: 16}}>\r\n                    {node.nodes.map((n, i) => renderNode(n, i, level + 1))}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div style={{display: 'flex', background: '#444', position: 'fixed', height: 36, bottom: 0, left: 0, right: 0}} className={classes(horizontalSpace('.5rem'))}>\r\n                    <div className=\"button\" onClick={e => { unindentNode(active); inputRef.current && inputRef.current.editor.focus(); }}>&larr;</div>\r\n                    <div className=\"button\" onClick={e => { indentNode(active); inputRef.current && inputRef.current.editor.focus(); }}>&rarr;</div>\r\n                    <div className=\"button\" onClick={e => { \r\n                        if (!inputRef.current) {\r\n                            return;\r\n                        }\r\n                        inputRef.current.editor.session.insert(inputRef.current.editor.getCursorPosition(), '[['); \r\n                        inputRef.current.editor.focus();\r\n                    }}>[[</div>\r\n                    <div className=\"button\" onClick={e => { \r\n                        if (!inputRef.current) {\r\n                            return;\r\n                        }\r\n                        inputRef.current.editor.session.insert(inputRef.current.editor.getCursorPosition(), ']]'); \r\n                        inputRef.current.editor.focus();\r\n                    }}>]]</div>\r\n            </div>\r\n            <div style={{height: '100%', marginBottom: 36}}>\r\n                {nodes.map((n, i) => renderNode(n, i, 0))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\ninterface Completion {\r\n    value?: string;\r\n    meta: string;\r\n    type?: string;\r\n    caption?: string;\r\n    snippet?: any;\r\n    score?: number;\r\n    exactMatch?: number;\r\n    docHTML?: string;\r\n}\r\n  \r\ntype CompletionCallback = (error: Error|null, results: Completion[]) => void;","import * as React from 'react';\r\nimport { Data } from '../model';\r\nimport { ContextState } from '../db/context';\r\nimport _ from 'lodash';\r\n\r\nexport const ContextSelector: React.FC<{contextId: string|null, data: Data, onChange: (contextId: string|null) => void}> = (props) => {\r\n    const activeContexts = _.orderBy(props.data.contexts.filter(x => x.state === ContextState.Active), x => x.title);\r\n    const inactiveContexts = _.orderBy(props.data.contexts.filter(x => x.state !== ContextState.Active), x => x.title);\r\n\r\n    return (\r\n        <select className=\"input is-large\" value={props.contextId || ''} onChange={e => props.onChange(e.target.value)}>\r\n            <option value=\"\">Not set</option>\r\n            {activeContexts.map(c => (<option key={c.id} value={c.id}>{c.title}</option>))}\r\n            <option value=\"--inactive--\" disabled>-- Inactive</option>\r\n            {inactiveContexts.map(c => (<option key={c.id} value={c.id}>{c.title}</option>))}\r\n        </select>\r\n    );\r\n}","import * as React from 'react';\r\nimport * as draftStorage from '../draftStorage';\r\nimport { TagInput, TagState } from './TagInput';\r\nimport { ToolSection } from '../framework/ToolSection';\r\nimport { SimpleSplitEditor, SplitMode, SplitModeSelector, NoteModeSelector } from './SimpleSplitEditor';\r\nimport { isMobile } from './Layout';\r\nimport { db } from '../db/db';\r\nimport { Reference, NoteMode, getNoteTitle } from '../db/note';\r\nimport { TreeEditor } from './TreeEditor';\r\nimport { SettingsCompactor } from './SettingsCompactor';\r\nimport './NoteEditor.scss';\r\nimport { Loader } from '../components/Loader';\r\nimport { ContextSelector } from '../components/ContextSelector';\r\nimport { Data } from '../model';\r\nimport moment from 'moment';\r\n\r\nexport class NoteEditor extends React.Component<{onNoteAdded: () => void, id?: string, title?: string, text?: string, tags?: string, contextId: string|null, availableTags: string[], noteFor: Reference|null, noteMode?: NoteMode, data: Data, dailyDate: string|null}, {title: string, text: string, tags: string, tagState: TagState, splitMode: SplitMode, noteMode: NoteMode, contextId: string|null, loaded: boolean, dailyDate: string|null}> {\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loaded: false,\r\n            title: '', \r\n            text: '', \r\n            tags: '', \r\n            tagState: new TagState([], []), \r\n            splitMode: isMobile() ? SplitMode.Editor : SplitMode.Split, \r\n            noteMode: 'tree',\r\n            contextId: null,\r\n            dailyDate: null,\r\n        };\r\n\r\n        this.onTextChanged = this.onTextChanged.bind(this);\r\n        this.onSave = this.onSave.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const draft = await draftStorage.getDraft(this.props.id);\r\n\r\n        const title = this.props.title;\r\n        let text = this.props.text;\r\n        const tags = this.props.tags;\r\n        const noteMode = this.props.noteMode;\r\n        const contextId = this.props.contextId;\r\n        const dailyDate = this.props.dailyDate;\r\n\r\n        let state: any = {};\r\n\r\n        if (draft !== null && draft !== text && draft.length > 0) {\r\n            text = draft;\r\n        }\r\n\r\n        if (title !== undefined) {\r\n            state.title = title;\r\n        }\r\n        \r\n        if (text !== undefined) {\r\n            state.text = text;\r\n        }\r\n\r\n        if (noteMode !== undefined) {\r\n            state.noteMode = noteMode;\r\n        }\r\n\r\n        if (contextId !== undefined) {\r\n            state.contextId = contextId;\r\n        }\r\n\r\n        if (dailyDate !== undefined) {\r\n            state.dailyDate = dailyDate;\r\n        }\r\n\r\n        state.tagState = this.state.tagState\r\n            .withAvailableTags(this.props.availableTags);\r\n\r\n        if (tags && tags.length > 0) {\r\n            state.tagState = state.tagState.withSelectedTags(tags.split(' '));\r\n        }\r\n\r\n        state.loaded = true;\r\n        this.setState(state);\r\n    }\r\n\r\n    componentWillReceiveProps(props: any) {\r\n        this.setState({tagState: this.state.tagState.withAvailableTags(props.availableTags)});\r\n    }\r\n\r\n    onTitleChanged(e: React.ChangeEvent<HTMLInputElement>) {\r\n        this.setState({ title: e.target.value });\r\n    }\r\n\r\n    onTextChanged(text: string) {\r\n        if (text !== this.props.text) {\r\n            draftStorage.setDraft(this.props.id, text);\r\n        }\r\n\r\n        this.setState({text})\r\n    }\r\n\r\n    async onSave() {\r\n        const id = this.props.id || null;\r\n\r\n        if (id) {\r\n            let note = await db.notes.get(id);\r\n\r\n            if (note === null) {\r\n                throw new Error('Note is null?');\r\n            }\r\n\r\n            note.title = this.state.title;\r\n            note.content = this.state.text;\r\n            note.tags = this.state.tagState.getTags();\r\n            note.mode = this.state.noteMode;\r\n            note.contextId = this.state.contextId;\r\n            note.dailyDate = this.state.dailyDate;\r\n\r\n            await db.notes.save(note);\r\n        } else {\r\n            await db.notes.create({\r\n                title: this.state.title,\r\n                content: this.state.text,\r\n                tags: this.state.tagState.getTags(),\r\n                noteFor: null,\r\n                mode: this.state.noteMode,\r\n                contextId: this.state.contextId,\r\n                dailyDate: this.state.dailyDate\r\n            });\r\n        }\r\n\r\n        await draftStorage.clearDraft(this.props.id);\r\n        this.props.onNoteAdded();\r\n    }\r\n\r\n    render() {\r\n        const updateDailyDate = (value: string) => {\r\n            if (value === '') {\r\n                this.setState({dailyDate: null});\r\n            } else {\r\n                this.setState({dailyDate: new Date(value).toISOString()});\r\n            }\r\n        }\r\n\r\n        if (!this.state.loaded) {\r\n            return <Loader />;\r\n        }\r\n\r\n        return (\r\n            <div style={{width: '100%', flex: 1, display: 'flex', flexDirection: 'column'}}>\r\n                <ToolSection verticalAround={false}>\r\n                    <SettingsCompactor wideStyle={{justifyContent: 'space-between'}} alwaysVisible={() => (\r\n                        <>\r\n                            {this.props.id === undefined ?\r\n                                <button className=\"button is-primary\" onClick={this.onSave}>Add note</button> :\r\n                                <button className=\"button is-primary\" onClick={this.onSave}>Update note</button>}\r\n                            <ContextSelector contextId={this.state.contextId} data={this.props.data} onChange={contextId => this.setState({ contextId })} />\r\n                            <input type=\"date\" className=\"input\" value={(this.state.dailyDate && moment(this.state.dailyDate).format('YYYY-MM-DD')) || ''} onChange={e => updateDailyDate(e.target.value)} />\r\n                        </>\r\n                    )}>\r\n                        <NoteModeSelector mode={this.state.noteMode} onModeChange={noteMode => this.setState({ noteMode })} />\r\n                        <SplitModeSelector mode={this.state.splitMode} onModeChange={splitMode => this.setState({ splitMode })} />\r\n                    </SettingsCompactor>\r\n                </ToolSection>\r\n                <ToolSection>\r\n                    {!this.props.noteFor && !this.state.dailyDate && (\r\n                        <>\r\n                            <input type=\"text\" placeholder=\"Title\" className=\"input is-large is-wide\" value={this.state.title} onChange={this.onTitleChanged.bind(this)} />\r\n                            <TagInput tagState={this.state.tagState} onChange={s => this.setState({tagState: s})} />\r\n                        </>\r\n                    )}\r\n                    {this.state.dailyDate && (\r\n                        <h1>{getNoteTitle({ dailyDate: this.state.dailyDate, title: this.state.title, content: this.state.text })}</h1>\r\n                    )}\r\n                </ToolSection>\r\n                <div style={{flex: 1}}>\r\n                    {this.state.noteMode === 'markdown' ? (\r\n                        <SimpleSplitEditor text={this.state.text} expand={true} onTextChanged={this.onTextChanged} mode={this.state.splitMode} data={this.props.data} contextId={this.state.contextId} />\r\n                    ) : (\r\n                        <TreeEditor text={this.state.text} onTextChanged={this.onTextChanged} contextId={this.state.contextId} />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { NoteEditor } from '../../components/NoteEditor';\r\nimport { useData } from '../../model';\r\nimport { ToolSection } from '../../framework/ToolSection';\r\nimport { useQueryState } from '../../lib/UseQueryState';\r\nimport { classes } from 'typestyle';\r\nimport * as styles from '../../layout/styles';\r\n\r\nexport const EditNotePage: React.FC<{id?: string }> = props => {\r\n    const {data, refreshData} = useData();\r\n    let tags: {[key: string]: number} = {};\r\n    const [goBack, setGoBack] = React.useState(false);\r\n    const [source] = useQueryState(null, 'source');\r\n\r\n    if (goBack) {\r\n        return <Redirect to={source ? decodeURIComponent(source) : '/'} />;\r\n    }\r\n\r\n    for (const note of data.notes || []) {\r\n\r\n        if(!note.tags || !note.tags.length) {\r\n            continue;\r\n        }\r\n\r\n        for(const tag of note.tags.split(' ')) {\r\n            if(!tags[tag]) {\r\n                tags[tag] = 0;\r\n            }\r\n\r\n            tags[tag] += 1;\r\n        }\r\n    }\r\n\r\n    const availableTags = Object.keys(tags).sort((a, b) => tags[b] - tags[a]);\r\n\r\n    if (props.id) {\r\n        let note = data.notes.find(x => x.id === props.id);\r\n\r\n        if (!note) {\r\n            return <div>Note not found.</div>\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div style={{height: '100%', display: 'flex', flexDirection: 'column'}}>\r\n                    <ToolSection>\r\n                        <div className={classes(styles.horizontalSpace('.5rem'))}>\r\n                            <NavLink to={source ? decodeURIComponent(source) : '/'} className=\"button\">Back</NavLink>\r\n                            {!note.noteFor && <NavLink to={`/notes/${note.id}`} className=\"button\">Show</NavLink>}\r\n                        </div>\r\n                    </ToolSection>\r\n                    <NoteEditor {...note} data={data} text={note.content}  availableTags={availableTags} noteMode={note.mode||'tree'} dailyDate={note.dailyDate} onNoteAdded={() => { refreshData(); setGoBack(true); }} />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const title = urlParams.get('title');\r\n    const contextId = urlParams.get('context');\r\n\r\n    return (\r\n        <>\r\n            <div style={{height: '100%', display: 'flex', flexDirection: 'column'}} >\r\n                <ToolSection>\r\n                    <NavLink to={`/`} className=\"button\">Back</NavLink>\r\n                </ToolSection>\r\n                <NoteEditor title={title || undefined} contextId={contextId} availableTags={availableTags} data={data} noteFor={null} dailyDate={null} noteMode={'tree'} onNoteAdded={() => { refreshData(); setGoBack(true); }} />\r\n            </div>\r\n        </>\r\n    );\r\n}","import * as React from 'react';\r\nimport { useData } from '../model';\r\nimport { MarkedViewer } from './MarkedViewer';\r\nimport { TreeViewer } from './TreeEditor';\r\nimport { getNoteTitle, getNoteReferenceMatchRegExp } from '../db/note';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nexport const ReferenceViewer: React.FC<{ title: string, contextId: string|null }> = (props) => {\r\n    const {data} = useData();\r\n    const referenceRegExp = getNoteReferenceMatchRegExp(props.title);\r\n    const contextNotes = data.notes.filter(x => x.contextId === props.contextId && referenceRegExp.test(x.content));\r\n\r\n    if (contextNotes.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div style={{paddingTop: 32}}>\r\n            <div style={{fontWeight: 'bold'}}>{contextNotes.length} linked references for \"{props.title}\"</div>\r\n            {contextNotes.map(note => (\r\n                <div key={note.id} style={{marginTop: 16}}>\r\n                    <Link to={`/notes/${note.id}`} style={{color: '#078263'}}>{getNoteTitle(note)}</Link>\r\n                    <div style={{paddingLeft: 16, background: '#222', marginTop: 8}}>\r\n                        {note.mode === 'markdown' \r\n                        ? <MarkedViewer markdown={note.content} contextId={note.contextId} /> \r\n                        : <TreeViewer json={note.content} contextId={note.contextId} referenceTitle={props.title} />}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { MarkedViewer } from '../../components/MarkedViewer';\r\nimport { ReferenceViewer } from '../../components/ReferenceViewer';\r\nimport { useData } from '../../model';\r\nimport { ToolSection } from '../../framework/ToolSection';\r\nimport { useQueryState } from '../../lib/UseQueryState';\r\nimport { TreeViewer } from '../../components/TreeEditor';\r\nimport { TagList } from '../../components/TagInput';\r\nimport { ContextTag } from '../../components/ContextTag';\r\nimport { getNoteTitle } from '../../db/note';\r\n\r\nexport const ShowNotePage: React.SFC<{id: string}> = (props) => {\r\n    const {data} = useData();\r\n    const [source] = useQueryState(null, 'source');\r\n    const note = data.notes.find(x => x.id === props.id);\r\n\r\n    if (!note) {\r\n        return <div>Note not found.</div>\r\n    }\r\n\r\n    let viewer = null;\r\n\r\n    if (!note.mode || note.mode === 'markdown') {\r\n        viewer = <MarkedViewer markdown={note.content} contextId={note.contextId} />;\r\n    } else {\r\n        viewer = <TreeViewer json={note.content} contextId={note.contextId} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToolSection>\r\n                <NavLink to={source ? decodeURIComponent(source) : '/'} className=\"button\">Back</NavLink>\r\n                <NavLink to={`/notes/${note.id}/edit`} className=\"button\">Edit</NavLink>\r\n            </ToolSection>\r\n            <div className=\"panel\">\r\n                <div className=\"content\" style={{padding: '1rem'}}>\r\n                    <h1>{getNoteTitle(note)}</h1>\r\n                    <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                        <TagList tags={note.tags} />\r\n                        <ContextTag contextId={note.contextId} />\r\n                    </div>\r\n                    {viewer}\r\n                    <ReferenceViewer title={getNoteTitle(note)} contextId={note.contextId} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}","import * as React from 'react';\r\nimport moment from 'moment';\r\nimport * as draftStorage from '../../draftStorage';\r\nimport { TagList } from '../../components/TagInput';\r\nimport { NavLink } from 'react-router-dom';\r\nimport lunr from 'lunr';\r\nimport { debounce } from 'throttle-debounce';\r\nimport { useData } from '../../model';\r\nimport { classes } from 'typestyle';\r\nimport * as styles from '../../layout/styles';\r\nimport { ToolSection } from '../../framework/ToolSection';\r\nimport { getNoteTitle } from '../../db/note';\r\nimport { List } from '../../framework/List';\r\nimport { isMobile } from '../../components/Layout';\r\nimport { useQueryState, useQueryStateT, useQueryStateBoolean } from '../../lib/UseQueryState';\r\nimport { SettingsCompactor } from '../../components/SettingsCompactor';\r\nimport { ContextTag } from '../../components/ContextTag';\r\n\r\nexport const NotePage: React.SFC<{ }> = (props) => {\r\n    const {data, refreshData} = useData();\r\n\r\n    const [text, setText] = useQueryState(null, 'search');\r\n    const [filterTags, setFilterTags] = useQueryStateT<string[]>([], 'tags', s => s !== null ? s.split('|') : [], a => a.join('|'));\r\n    const [showTagsBar, setShowTagsBar] = React.useState(!isMobile());\r\n    const [searchResult, setSearchResult] = React.useState<{ id: string, score: number }[]|null>(null);\r\n    const [searchIndex, setSearchIndex] = React.useState<lunr.Index|null>(null);\r\n    const [showNotesFor, setShowNotesFor] = React.useState(false);\r\n    const [draftIds, setDraftIds] = React.useState<string[]>([]);\r\n    const [showNoContext, setShowNoContext] = useQueryStateBoolean(false, 'no-context');\r\n\r\n    React.useEffect(() => {\r\n        draftStorage.getDraftIds().then(setDraftIds);\r\n    }, []);\r\n\r\n    const onClearDraft = (id: string) => {\r\n        draftStorage.clearDraft(id);\r\n        refreshData();\r\n    }\r\n\r\n    const onSearch = (text: string) => {\r\n        if (!text || !text.length) {\r\n            setSearchResult(null);\r\n            return;\r\n        }\r\n\r\n        if (searchIndex === null) {\r\n            const idx = lunr(function() {\r\n                this.field('title');\r\n                this.field('text');\r\n    \r\n                for(let note of data.notes) {\r\n                    this.add({\r\n                        id: note.id,\r\n                        title: note.title,\r\n                        text: note.content\r\n                    });\r\n                }\r\n            });\r\n\r\n            setSearchIndex(idx);\r\n            const result = idx.search(text);\r\n            setSearchResult(result.map(r => { return { id: r.ref, score: r.score }; }));\r\n            return;\r\n        }\r\n\r\n        const result = searchIndex.search(text);\r\n        setSearchResult(result.map(r => { return { id: r.ref, score: r.score }; }));\r\n    };\r\n\r\n    const debouncedSearch = debounce(100, onSearch);\r\n\r\n    const toggleTag = (tag: string) => {\r\n        if (filterTags.indexOf(tag) === -1) {\r\n            setFilterTags(filterTags.concat([ tag ]));\r\n        } else {\r\n            setFilterTags(filterTags.filter(x => x !== tag));\r\n        }\r\n    }\r\n\r\n    let notes = data.notes || [];\r\n    let tags: {[key: string]: number} = {};\r\n\r\n    for(const tag of filterTags) {\r\n        notes = notes.filter(x => x.tags.split(' ').indexOf(tag) !== -1);\r\n    }\r\n\r\n    if (!showNotesFor) {\r\n        notes = notes.filter(x => !x.noteFor);\r\n    }\r\n\r\n    if (showNoContext) {\r\n        notes = notes.filter(x => !x.contextId);\r\n    }\r\n\r\n    if (searchResult) {\r\n        notes = searchResult.map(r => {\r\n            let idx =  notes.findIndex(n => n.id === r.id);\r\n            return notes[idx];\r\n        }).filter(n => n);\r\n    }\r\n\r\n    for (const note of notes) {\r\n\r\n        if(!note.tags) {\r\n            continue;\r\n        }\r\n\r\n        for(const tag of note.tags.split(' ')) {\r\n            if(!tags[tag]) {\r\n                tags[tag] = 0;\r\n            }\r\n\r\n            tags[tag] += 1;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const tagCounts = Object.keys(tags).map(k => { return { key: k, count: tags[k], active: filterTags.indexOf(k) !== -1 }; }).sort((a, b) => b.count - a.count);\r\n\r\n    let source: string|null = null;\r\n    if (window.location.search.length) {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        source = `?source=${encodeURIComponent(`${window.location.pathname}?${urlParams.toString()}`)}`\r\n    }\r\n\r\n    return (\r\n        <div style={{display: 'flex', height: '100%'}}>\r\n            {showTagsBar && <div style={{borderRight: '1px solid #666', width: 200}}>\r\n                <List<{key: string, count: Number, active: boolean}> items={tagCounts} renderItem={i => {\r\n                    return (\r\n                        <div key={i.key} style={{background: i.active ? '#444' : undefined}} onClick={() => toggleTag(i.key)} className={classes('item', styles.hoverGlow)}>{i.key} <span style={{color: '#999'}}>{i.count}</span></div>\r\n                    );\r\n                }} />\r\n            </div>}\r\n            <div style={{width: '100%'}}>\r\n                <ToolSection>\r\n                    <SettingsCompactor alwaysVisible={() => (\r\n                        <>\r\n                            <NavLink to={`/notes/new`} className=\"button\">New Note</NavLink>\r\n                        </>\r\n                    )}>\r\n                        <div>\r\n                            <input id=\"tags-box\" type=\"checkbox\" checked={showTagsBar} onChange={() =>setShowTagsBar(!showTagsBar)} />\r\n                            <label htmlFor=\"tags-box\">Show tags bar</label>\r\n                        </div>\r\n                        <div>\r\n                            <input id=\"show-notes-for-box\" type=\"checkbox\" checked={showNotesFor} onChange={() =>setShowNotesFor(!showNotesFor)} />\r\n                            <label htmlFor=\"show-notes-for-box\">Show notes for</label>\r\n                        </div>\r\n                        <div>\r\n                            <input id=\"show-no-context-box\" type=\"checkbox\" checked={showNoContext} onChange={() =>setShowNoContext(!showNoContext)} />\r\n                            <label htmlFor=\"show-no-context-box\">Show no context</label>\r\n                        </div>\r\n                    </SettingsCompactor>\r\n                    <input style={{fontSize: 16, padding: '.3rem', width: '100%'}} placeholder=\"Search...\" type=\"text\" value={text || ''} onChange={e => { setText(e.target.value); debouncedSearch(e.target.value); }}/>\r\n                </ToolSection>\r\n                <div className=\"list\">\r\n                    {notes.slice(0).reverse().map((n, i) => (\r\n                        <React.Fragment key={i}>\r\n                            <NavLink to={`/notes/${n.id}${source ? source : ''}`} className={classes('item', 'note', styles.hoverGlow)}>\r\n                                <div className=\"note-title\">\r\n                                    <div>{getNoteTitle(n)}</div>\r\n                                </div> \r\n                                <div className=\"note-details\">\r\n                                    <TagList tags={n.tags} />\r\n                                    <div className=\"tags\">\r\n                                        <ContextTag contextId={n.contextId} />\r\n                                    </div>\r\n                                    {draftIds.indexOf(n.id) !== -1 && <div className=\"button is-danger\" onClick={e => { e.preventDefault(); onClearDraft(n.id)}}>{'Clear draft'}</div>}\r\n                                    <div className=\"note-date\">{moment(n.updatedAt).format('ddd MMM Do HH:mm')}</div>\r\n                                </div>\r\n                            </NavLink>\r\n                        </React.Fragment>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {classes} from 'typestyle/lib';\r\nimport * as styles from '../layout/styles';\r\nimport { ToolSection } from '../framework/ToolSection';\r\nimport { Context, ContextState } from '../db/context';\r\nimport { db } from '../db/db';\r\nimport { useData } from '../model';\r\n\r\nexport const ContextPage: React.FC<{ }> = props => {\r\n    const {data, refreshData} = useData();\r\n\r\n    const [text, setText] = React.useState('');\r\n\r\n    async function onKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\r\n        if (e.key === 'Enter') {\r\n            await db.contexts.create({\r\n                title: text,\r\n                state: ContextState.Active,\r\n                contextId: null\r\n            });\r\n\r\n            setText('');\r\n            refreshData();\r\n        }\r\n    }\r\n\r\n    function renderTarget(target: Context) {\r\n        return (\r\n            <NavLink key={target.id} to={`/contexts/${target.id}`} className={classes('item', styles.hoverGlow)}>\r\n                <div>\r\n                    {target.title}\r\n                </div>\r\n            </NavLink>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToolSection>\r\n                <input type=\"text\" className=\"input is-large is-wide\" placeholder=\"Add context...\" value={text} onChange={e => setText(e.target.value)} onKeyPress={onKeyPress} />\r\n            </ToolSection>\r\n\r\n            <div className=\"list\">\r\n                <div className=\"header\">Active</div>\r\n                {data.contexts.filter(p => !p.state || p.state === ContextState.Active).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => renderTarget(t))}\r\n                <div className=\"header\">Not Active</div>\r\n                {data.contexts.filter(p => p.state === ContextState.Inactive).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => renderTarget(t))}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {classes} from 'typestyle/lib';\r\nimport * as styles from '../layout/styles';\r\nimport { Data } from '../model';\r\nimport { ToolSection } from '../framework/ToolSection';\r\nimport { ProjectState, Project } from '../db/project';\r\nimport { db } from '../db/db';\r\nimport { ContextTag } from '../components/ContextTag';\r\n\r\nexport class ProjectPage extends React.Component<{ data: Data, refreshData: () => void }, { text: string }> {\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            text: ''\r\n        };\r\n    } \r\n    \r\n    async onKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\r\n        if (e.key === 'Enter') {\r\n            await db.projects.create({\r\n                title: this.state.text,\r\n                state: ProjectState.Active,\r\n                contextId: null\r\n            });\r\n            this.setState({ text: '' }, this.props.refreshData);\r\n        }\r\n    }\r\n\r\n    renderProject(target: Project) {\r\n        return (\r\n            <NavLink to={`/projects/${target.id}`} className={classes('item', styles.hoverGlow)}>\r\n                <div>\r\n                    {target.title}\r\n                </div>\r\n                <div className=\"tags\">\r\n                    <div className=\"tag\">{target.state}</div>\r\n                    <ContextTag contextId={target.contextId} />\r\n                </div>\r\n            </NavLink>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <ToolSection>\r\n                    <input type=\"text\" className=\"input is-large is-wide\" placeholder=\"Add project...\" value={this.state.text} onChange={e => this.setState({ text: e.target.value })} onKeyPress={this.onKeyPress.bind(this)} />\r\n                </ToolSection>\r\n\r\n                <div className=\"list\">\r\n                    <div className=\"header\">Active</div>\r\n                    {this.props.data.projects.filter(p => !p.state || p.state === ProjectState.Active).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => this.renderProject(t))}\r\n                    <div className=\"header\">Incubated</div>\r\n                    {this.props.data.projects.filter(p => !p.state || p.state === ProjectState.Incubated).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => this.renderProject(t))}\r\n                    <div className=\"header\">Not Active</div>\r\n                    {this.props.data.projects.filter(p => p.state !== ProjectState.Active && p.state !== ProjectState.Incubated).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => this.renderProject(t))}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { useData } from '../model';\r\nimport { db } from '../db/db';\r\nimport { Person } from '../db/person';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { MarkedViewer } from './MarkedViewer';\r\nimport { Task } from '../db/task';\r\nimport { HasNote } from '../db/note';\r\nimport { TreeViewer } from './TreeEditor';\r\n\r\nexport const EmbeddedNoteEdit: React.FC<{ targetEntity: Person|Task|null }> = (props) => {\r\n    const {data, refreshData} = useData();\r\n\r\n    if (!props.targetEntity) {\r\n        return null;\r\n    }\r\n\r\n    const {noteId} = props.targetEntity;\r\n\r\n    const addNode = async () => {\r\n        if (!props.targetEntity) {\r\n            return;\r\n        }\r\n\r\n        const note = await db.notes.create({\r\n            title: '',\r\n            content: '',\r\n            tags: '',\r\n            contextId: null,\r\n            noteFor: {\r\n                type: props.targetEntity.type,\r\n                id: props.targetEntity.id,\r\n            },\r\n            mode: 'tree',\r\n            dailyDate: null\r\n        });\r\n\r\n        if (props.targetEntity.type === 'person') {\r\n            props.targetEntity.noteId = note.id;\r\n            await db.people.save(props.targetEntity);\r\n        }\r\n\r\n        if (props.targetEntity.type === 'task') {\r\n            props.targetEntity.noteId = note.id;\r\n            await db.tasks.save(props.targetEntity);\r\n        }\r\n\r\n        refreshData();\r\n    };\r\n\r\n    if (!noteId) {\r\n        return (\r\n            <div>\r\n                <div className=\"button\" onClick={addNode}>Add note</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const note = data.notes.find(x => x.id === noteId);\r\n\r\n    if (!note) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NavLink to={`/notes/${note.id}/edit?source=${encodeURIComponent(`${window.location.pathname}`)}`} className=\"button\">Edit note</NavLink>\r\n            {!note.mode || note.mode === 'markdown' ? (\r\n                <MarkedViewer markdown={note.content} contextId={note.contextId} />\r\n            ) : (\r\n                <TreeViewer json={note.content} contextId={note.contextId} />\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const EmbeddedNoteShow: React.FC<{ targetEntity: HasNote|null }> = (props) => {\r\n    const {data} = useData();\r\n\r\n    if (!props.targetEntity) {\r\n        return null;\r\n    }\r\n\r\n    const {noteId} = props.targetEntity;\r\n    if (!noteId) {\r\n        return null;\r\n    }\r\n\r\n    const note = data.notes.find(x => x.id === noteId);\r\n\r\n    if (!note) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!note.mode || note.mode === 'markdown' ? (\r\n                <MarkedViewer markdown={note.content} contextId={note.contextId} />\r\n            ) : (\r\n                <TreeViewer json={note.content} contextId={note.contextId} />\r\n            )}\r\n        </div>\r\n    )\r\n};","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Data } from '../model';\r\nimport { ToolSection } from '../framework/ToolSection';\r\nimport { Task, TaskState } from '../db/task';\r\nimport { db } from '../db/db';\r\nimport { ProjectState } from '../db/project';\r\nimport moment from 'moment';\r\nimport { classes } from 'typestyle';\r\nimport * as styles from '../layout/styles';\r\nimport { EmbeddedNoteEdit } from '../components/EmbeddedNote';\r\n\r\nexport class ShowTaskPage extends React.Component<{ data: Data, id: string, refreshData(): void }, { title: string, source: string }> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: '',\r\n            source: '/tasks'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n\r\n        let task = this.props.data.tasks.find(x => x.id === this.props.id);\r\n        this.setState({ title: task!.title }, () => {\r\n            if (urlParams.has('source')) {\r\n                this.setState({ source: decodeURIComponent(urlParams.get('source')!)});\r\n            }\r\n        });\r\n    }\r\n\r\n    async setContext(task: Task, event: React.ChangeEvent<HTMLSelectElement>) {\r\n        let contextId: string|null = event.target.value;\r\n\r\n        if (contextId === '') {\r\n            contextId = null;\r\n        }\r\n\r\n        task.contextId = contextId;\r\n        await db.tasks.save(task);\r\n        this.props.refreshData();\r\n    }\r\n\r\n    async setProject(task: Task, event: React.ChangeEvent<HTMLSelectElement>) {\r\n        let projectId: string|null = event.target.value;\r\n\r\n        if (projectId === '') {\r\n            projectId = null;\r\n        }\r\n\r\n        task.projectId = projectId;\r\n        await db.tasks.save(task);\r\n        this.props.refreshData();\r\n    }\r\n\r\n    async setDefer(task: Task, event: React.ChangeEvent<HTMLInputElement>) {\r\n        let value: string|null = event.target.value;\r\n\r\n        if (value === '') {\r\n            task.deferredUntil = null;\r\n        } else {\r\n            task.deferredUntil = new Date(value).toISOString();\r\n        }\r\n\r\n        await db.tasks.save(task);\r\n        this.props.refreshData();\r\n    }\r\n\r\n    async onKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\r\n        if (e.key === 'Enter') {\r\n            let task = this.props.data.tasks.find(x => x.id === this.props.id);\r\n\r\n            if (!task) {\r\n                return;\r\n            }\r\n\r\n            if (task.title !== this.state.title) {\r\n                task.title = this.state.title;\r\n                await db.tasks.save(task);\r\n                this.props.refreshData();\r\n            }\r\n        }\r\n    }\r\n\r\n    async setTaskState(state: TaskState) {\r\n        const task = this.props.data.tasks.find(x => x.id === this.props.id);\r\n\r\n        if (!task) {\r\n            return;\r\n        }\r\n\r\n        if (task.state === state) {\r\n            return;\r\n        }\r\n\r\n        task.state = state;\r\n        task.stateChangedAt = new Date().toISOString();\r\n        await db.tasks.save(task);\r\n        this.props.refreshData();\r\n    }\r\n\r\n    render() {\r\n        let task = this.props.data.tasks.find(x => x.id === this.props.id);\r\n\r\n        if (!task) {\r\n            return <div>Task not found.</div>\r\n        }\r\n\r\n        let isDirty = false;\r\n\r\n        if (task.title !== this.state.title) {\r\n            isDirty = true;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <ToolSection>\r\n                    <NavLink to={this.state.source} className=\"button\">Back</NavLink>\r\n                    {/* <NavLink to={`/tasks/${task.id}/edit`} className=\"button\">Edit</NavLink> */}\r\n                </ToolSection>\r\n\r\n                <ToolSection>\r\n                    <div>Task</div>\r\n                    <input type=\"text\" className=\"input is-large is-wide\" style={{border: isDirty ? '2px solid orange' : undefined}} value={this.state.title} onKeyDown={e => this.onKeyDown(e)} onChange={e => this.setState({ title: e.target.value })} />\r\n\r\n                    <div>State</div>\r\n                    <div className={classes(styles.horizontalSpace('.5rem'))}>\r\n                        <div className={classes('button', task.state !== 'active' ? 'inactive' : null)} onClick={() => this.setTaskState('active')}>Active</div>\r\n                        <div className={classes('button', task.state !== 'incubated' ? 'inactive' : null)} onClick={() => this.setTaskState('incubated')}>Incubated</div>\r\n                        <div className={classes('button', task.state !== 'completed' ? 'inactive' : null)} onClick={() => this.setTaskState('completed')}>Completed</div>\r\n                    </div>\r\n\r\n                    <div>Context</div>\r\n                    <select className=\"input is-large\" value={task.contextId || ''} onChange={e => this.setContext(task!, e)}>\r\n                        <option value=\"\">Not set</option>\r\n                        {this.props.data.contexts.map(c => (\r\n                            <option key={c.id} value={c.id}>{c.title}</option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <div>Project</div>\r\n                    <select className=\"input is-large\" value={task.projectId || ''} onChange={e => this.setProject(task!, e)}>\r\n                        <option value=\"\">Not set</option>\r\n                        {this.props.data.projects.filter(p => p.state === ProjectState.Active || p.id === task!.projectId).map(c => (\r\n                            <option key={c.id} value={c.id}>{c.title}</option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <div>Defer</div>\r\n                    <input type=\"date\" className=\"input is-large\" value={(task.deferredUntil && moment(task.deferredUntil).format('YYYY-MM-DD')) || ''} onChange={e => this.setDefer(task!, e)} />\r\n                </ToolSection>\r\n\r\n                <ToolSection>\r\n                    <EmbeddedNoteEdit targetEntity={task} {...this.props} />\r\n                </ToolSection>\r\n            </>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Data } from '../model';\r\nimport { ToolSection } from '../framework/ToolSection';\r\nimport { Project, ProjectState } from '../db/project';\r\nimport { db } from '../db/db';\r\nimport { Loader } from '../components/Loader';\r\nimport { ContextSelector } from '../components/ContextSelector';\r\n\r\nexport class ShowProjectPage extends React.Component<{ data: Data, refreshData: () => void, id: string }, { title: string }> {\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let target = this.props.data.projects.find(x => x.id === this.props.id);\r\n        this.setState({title: target!.title});\r\n    }\r\n\r\n    async setContext(target: Project, contextId: string|null) {\r\n        if (contextId === '') {\r\n            contextId = null;\r\n        }\r\n\r\n        target.contextId = contextId;\r\n        await db.projects.save(target);\r\n        this.props.refreshData();\r\n    }\r\n\r\n    async setProjectState(target: Project, event: React.ChangeEvent<HTMLSelectElement>) {\r\n        let projectState: ProjectState = event.target.value as ProjectState;\r\n\r\n        target.state = projectState;\r\n        await db.projects.save(target);\r\n        this.props.refreshData();\r\n    }\r\n\r\n    async onKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\r\n        if (e.key === 'Enter') {\r\n            let target = this.props.data!.projects.find(x => x.id === this.props.id);\r\n\r\n            if (!target) {\r\n                return;\r\n            }\r\n\r\n            if (target.title !== this.state.title) {\r\n                target.title = this.state.title;\r\n                await db.projects.save(target);\r\n                this.props.refreshData();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.data === null) {\r\n            return <Loader />;\r\n        }\r\n\r\n        let target = this.props.data.projects.find(x => x.id === this.props.id);\r\n\r\n        if (!target) {\r\n            return <div>Project not found.</div>\r\n        }\r\n\r\n        let isDirty = false;\r\n\r\n        if (target.title !== this.state.title) {\r\n            isDirty = true;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <ToolSection>\r\n                    <NavLink to={`/projects`} className=\"button\">Back</NavLink>\r\n                </ToolSection>\r\n\r\n                <ToolSection>\r\n                    <div>Project</div>\r\n                    <input type=\"text\" className=\"input is-large is-wide\" style={{border: isDirty ? '2px solid orange' : undefined}} value={this.state.title} onKeyDown={e => this.onKeyDown(e)} onChange={e => this.setState({ title: e.target.value })} />\r\n                    \r\n                    <div>Context</div>\r\n                    <ContextSelector contextId={target.contextId} onChange={e => this.setContext(target!, e)} data={this.props.data} />\r\n                    <div>State</div>\r\n                    <select className=\"input is-large\" value={target.state || ProjectState.Active} onChange={e => this.setProjectState(target!, e)}>\r\n                        {Object.keys(ProjectState).map(c => (\r\n                            <option key={c} value={c}>{c}</option>\r\n                        ))}\r\n                    </select>\r\n\r\n                </ToolSection>\r\n\r\n            </>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Data } from '../model';\r\nimport { ToolSection } from '../framework/ToolSection';\r\nimport { Context, ContextState } from '../db/context';\r\nimport { db } from '../db/db';\r\n\r\nexport class ShowContextPage extends React.Component<{id: string, data: Data, refreshData(): void }, { title: string }> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let target = this.props.data.contexts.find(x => x.id === this.props.id);\r\n        this.setState({ title: target!.title })\r\n    }\r\n\r\n    async onKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\r\n        if (e.key === 'Enter') {\r\n            const target = this.props.data.contexts.find(x => x.id === this.props.id);\r\n\r\n            if (!target) {\r\n                return;\r\n            }\r\n\r\n            if (target.title !== this.state.title) {\r\n                target.title = this.state.title;\r\n                await db.contexts.save(target);\r\n                this.props.refreshData();\r\n            }\r\n        }\r\n    }\r\n\r\n    async setContext(target: Context, event: React.ChangeEvent<HTMLSelectElement>) {\r\n        let contextId: string|null = event.target.value;\r\n\r\n        if (contextId === '') {\r\n            contextId = null;\r\n        }\r\n\r\n        target.contextId = contextId;\r\n        await db.contexts.save(target);\r\n        this.props.refreshData();\r\n    }\r\n\r\n    async setContextState(target: Context, event: React.ChangeEvent<HTMLSelectElement>) {\r\n        let contextState: ContextState = event.target.value as ContextState;\r\n\r\n        target.state = contextState;\r\n        await db.contexts.save(target);\r\n        this.props.refreshData();\r\n    }\r\n\r\n    render() {\r\n        let target = this.props.data.contexts.find(x => x.id === this.props.id);\r\n\r\n        if (!target) {\r\n            return <div>Context not found.</div>\r\n        }\r\n\r\n        let isDirty = false;\r\n\r\n        if (target.title !== this.state.title) {\r\n            isDirty = true;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <ToolSection>\r\n                    <NavLink to={`/contexts`} className=\"button\">Back</NavLink>\r\n                </ToolSection>\r\n\r\n                <ToolSection>\r\n                    <div>Context</div>\r\n                    <input type=\"text\" className=\"input is-large is-wide\" style={{border: isDirty ? '2px solid orange' : undefined}} value={this.state.title} onKeyDown={e => this.onKeyDown(e)} onChange={e => this.setState({ title: e.target.value })} />\r\n\r\n                    <div>Parent Context</div>\r\n                    <select className=\"input is-large\" value={target.contextId || ''} onChange={e => this.setContext(target!, e)}>\r\n                        <option value=\"\">Not set</option>\r\n                        {this.props.data.contexts.filter(c => c.id !== target!.id).map(c => (\r\n                            <option key={c.id} value={c.id}>{c.title}</option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <div>State</div>\r\n                    <select className=\"input is-large\" value={target.state || ContextState.Active} onChange={e => this.setContextState(target!, e)}>\r\n                        {Object.keys(ContextState).map(c => (\r\n                            <option key={c} value={c}>{c}</option>\r\n                        ))}\r\n                    </select>\r\n                </ToolSection>\r\n            </>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { Data } from '../model';\r\nimport { ToolSection } from '../framework/ToolSection';\r\nimport { syncer } from '../db/syncer';\r\nimport { Loader } from '../components/Loader';\r\n\r\ninterface DataPageProps {\r\n    data: Data;\r\n    refreshData(): void;\r\n}\r\n\r\nexport class DataPage extends React.Component<{ render: (props: DataPageProps)=>React.ReactNode }, { data: Data|null, error: string|null }> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            error: null,\r\n            data: null\r\n        };\r\n\r\n        this.refreshData = this.refreshData.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        syncer.registerDataListener(data => this.setState({ data }));\r\n        this.setState({ data: await syncer.getData() }, async () => {\r\n            await syncer.startServerSync();\r\n            await syncer.ensureServerSyncEnqueued();\r\n        });\r\n    }\r\n\r\n    async refreshData() {\r\n        this.setState({ data: await syncer.getData() }, async () => {\r\n            syncer.startServerSync();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return (\r\n                <>\r\n                    <div>{this.state.error}</div>\r\n                    <ToolSection>\r\n                        <div className=\"button\" onClick={() => this.refreshData()}>Retry</div>\r\n                        <div className=\"button\" onClick={() => window.location.reload()}>Reload</div>\r\n                        <div className=\"button\" onClick={() => window.location.reload(true)}>Force Reload</div>\r\n                        <a className=\"button\" href=\"/login\" >Login</a>\r\n                    </ToolSection>\r\n                </>\r\n            );\r\n        }      \r\n        \r\n        if (!this.state.data) {\r\n            return <Loader />;\r\n        }\r\n\r\n        return this.props.render({ data: this.state.data, refreshData: this.refreshData });\r\n    }\r\n}","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {classes} from 'typestyle/lib';\r\nimport * as styles from '../../layout/styles';\r\nimport { useData } from '../../model';\r\nimport { ToolSection } from '../../framework/ToolSection';\r\nimport { Person } from '../../db/person';\r\n\r\nexport const PeoplePage: React.FC<{}> = props => {\r\n    const {data} = useData();\r\n\r\n    const renderTarget = (target: Person) => {\r\n        return (\r\n            <NavLink key={target.id} to={`/people/${target.id}`} className={classes('item', styles.hoverGlow)}>\r\n                <div>\r\n                    {target.name}\r\n                </div>\r\n            </NavLink>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ToolSection>\r\n                <NavLink to={`/people/new`} className=\"button\">New Person</NavLink>\r\n            </ToolSection>\r\n\r\n            <div className=\"list\">\r\n                {data.people.sort((a, b) =>  b.name! < a.name! ?  -1 : b.name! > a.name! ? 1 : 0).map(t => renderTarget(t))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import * as React from 'react';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { ToolSection } from '../../framework/ToolSection';\r\nimport { db } from '../../db/db';\r\nimport { useState } from 'react';\r\nimport { EmbeddedNoteEdit } from '../../components/EmbeddedNote';\r\nimport { useData } from '../../model';\r\n\r\nconst useForm = <T extends {}>(initialState: ()=>T) => {\r\n    const [values, setValues] = useState<T>(initialState);\r\n    \r\n    const handleChange = (event: any) => {\r\n        event.persist();\r\n        setValues((values) => ({ ...values, [event.target.name]: event.target.value }));\r\n    };\r\n\r\n    return {\r\n        values,\r\n        handleChange\r\n    };\r\n};\r\n\r\nexport const EditPersonPage: React.FC<{id?: string }> = (props) => {\r\n    const {data, refreshData} = useData();\r\n    const [goBack, setGoBack] = useState<string|null>(null);\r\n\r\n    const {values, handleChange} = useForm(() => {\r\n        const person = props.id ? data.people.find(x => x.id === props.id) : null;\r\n        return {\r\n            name:  person ? person.name : '',\r\n            birthday: person ? person.birthday : null\r\n        }\r\n    });\r\n\r\n    const onSave = async () => {\r\n        const id = props.id || null;\r\n\r\n        if (id) {\r\n            let person = await db.people.get(id)!;\r\n\r\n            if (person === null) {\r\n                throw new Error('Person is null?');\r\n            }\r\n\r\n            person.name = values.name;\r\n            person.birthday = values.birthday;\r\n\r\n            await db.people.save(person);\r\n            refreshData();\r\n            setGoBack(person.id);\r\n        } else {\r\n            const person = await db.people.create({\r\n                name: values.name,\r\n                birthday: values.birthday,\r\n                noteId: null,\r\n            });\r\n\r\n            refreshData();\r\n            setGoBack(person.id);\r\n        }\r\n    };\r\n\r\n    const person = props.id ? data.people.find(x => x.id === props.id) || null : null;\r\n\r\n    return (\r\n        <>\r\n            {goBack && <Redirect to={`/people/${goBack}`} />}\r\n            <div style={{height: '100%', display: 'flex', flexDirection: 'column'}} >\r\n                <ToolSection>\r\n                    <NavLink to={`/people`} className=\"button\">Back</NavLink>\r\n                    {props.id && <NavLink to={`/people/${props.id}`} className=\"button\">Show</NavLink>}\r\n                </ToolSection>\r\n                <ToolSection>\r\n                    {props.id === undefined ?\r\n                            <button type=\"button\" className=\"button is-primary\" onClick={onSave}>Add person</button> :\r\n                            <button type=\"button\" className=\"button is-primary\" onClick={onSave}>Update person</button>}\r\n                </ToolSection>\r\n                <ToolSection>\r\n                    <div>Name</div>\r\n                    <input type=\"text\" name=\"name\" className=\"input is-large is-wide\" value={values.name} onChange={handleChange} />\r\n                    <div>Birthday</div>\r\n                    <input type=\"date\" name=\"birthday\" className=\"input is-large\" value={values.birthday || ''} onChange={handleChange} />\r\n                </ToolSection>\r\n                <ToolSection>\r\n                    <EmbeddedNoteEdit targetEntity={person} />\r\n                </ToolSection>\r\n            </div>\r\n        </>\r\n    );\r\n};","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useData } from '../../model';\r\nimport { ToolSection } from '../../framework/ToolSection';\r\nimport moment from 'moment';\r\nimport { EmbeddedNoteShow } from '../../components/EmbeddedNote';\r\n\r\nexport const ShowPersonPage: React.FC<{id: string}> = (props) => {\r\n    const {data} = useData();\r\n    const person = data.people.find(x => x.id === props.id);\r\n\r\n    if (!person) {\r\n        return <div>Person not found.</div>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToolSection>\r\n                <NavLink to={`/people`} className=\"button\">Back</NavLink>\r\n                <NavLink to={`/people/${person.id}/edit`} className=\"button\">Edit</NavLink>\r\n            </ToolSection>\r\n            <div className=\"panel\">\r\n                <div className=\"content\" style={{padding: '1rem'}}>\r\n                    <h1>{person.name}</h1>\r\n                    {person.birthday && <div>Birthday: {moment(person.birthday).format('YYYY-MM-DD')}</div>}\r\n                    <EmbeddedNoteShow targetEntity={person} {...props} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}; ","import * as React from 'react';\r\nimport { ToolSection } from '../framework/ToolSection';\r\nimport { db } from '../db/db';\r\nimport { useData } from '../model';\r\n\r\nexport const StatsPage: React.SFC<{}> = (props) => {\r\n    const {data} = useData();\r\n    const [noteTotalCount, setNoteTotalCount] = React.useState<number|null>(null);\r\n    const [taskTotalCount, setTaskTotalCount] = React.useState<number|null>(null);\r\n    const [peopleTotalCount, setPeopleTotalCount] = React.useState<number|null>(null);\r\n    const [projectTotalCount, setProjectTotalCount] = React.useState<number|null>(null);\r\n    const [contextTotalCount, setContextTotalCount] = React.useState<number|null>(null);\r\n    \r\n    React.useEffect(() => {\r\n        db.notes.getSyncKeys().then(c => setNoteTotalCount(c.length));\r\n        db.tasks.getSyncKeys().then(c => setTaskTotalCount(c.length));\r\n        db.people.getSyncKeys().then(c => setPeopleTotalCount(c.length));\r\n        db.projects.getSyncKeys().then(c => setProjectTotalCount(c.length));\r\n        db.contexts.getSyncKeys().then(c => setContextTotalCount(c.length));\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <ToolSection>\r\n            </ToolSection>\r\n            <div className=\"panel\">\r\n                <div className=\"content\" style={{padding: '1rem'}}>\r\n                    <h1>Stats</h1>\r\n                    <ul>\r\n                        <li>Notes: {data.notes.length}, versions: {noteTotalCount ? noteTotalCount : '...'}</li>\r\n                        <li>Tasks: {data.tasks.length}, versions: {taskTotalCount ? taskTotalCount : '...'}</li>\r\n                        <li>People: {data.people.length}, versions: {peopleTotalCount ? peopleTotalCount : '...'}</li>\r\n                        <li>Projects: {data.projects.length}, versions: {projectTotalCount ? projectTotalCount : '...'}</li>\r\n                        <li>Contexts: {data.contexts.length}, versions: {contextTotalCount ? contextTotalCount : '...'}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}","import * as React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Layout } from './components/Layout';\r\nimport { TaskPage } from './pages/TaskPage';\r\nimport { EditNotePage } from './pages/notes/EditNotePage';\r\nimport { ShowNotePage } from './pages/notes/ShowNotePage';\r\nimport { NotePage } from './pages/notes/NotePage';\r\nimport { PlaygroundPage } from './pages/PlaygroundPage';\r\nimport { ContextPage } from './pages/ContextPage';\r\nimport { ProjectPage } from './pages/ProjectPage';\r\nimport { ShowTaskPage } from './pages/ShowTaskPage';\r\nimport { ShowProjectPage } from './pages/ShowProjectPage';\r\nimport { ShowContextPage } from './pages/ShowContextPage';\r\nimport { DataPage } from './pages/DataPage';\r\nimport { SyncPage } from './pages/SyncPage';\r\nimport { SettingsPage } from './pages/SettingsPage';\r\nimport { PeoplePage } from './pages/people/PeoplePage';\r\nimport { EditPersonPage } from './pages/people/EditPersonPage';\r\nimport { ShowPersonPage } from './pages/people/ShowPersonPage';\r\nimport { StatsPage } from './pages/StatsPage';\r\nimport {DataProvider} from './model';\r\n\r\nexport const routes = <Layout>\r\n    <DataProvider>\r\n        <Switch>\r\n            <Route exact path='/' render={routeProps => <NotePage />} />\r\n            <Route exact path='/notes/new' render={routeProps => <EditNotePage />} />\r\n            <Route exact path='/notes/:id' render={routeProps => <ShowNotePage id={routeProps.match.params.id} />} />\r\n            <Route exact path='/notes/:id/edit' render={routeProps => <EditNotePage id={routeProps.match.params.id} />} />\r\n            <Route exact path='/tasks' render={routeProps => <TaskPage />} />\r\n            <Route exact path='/tasks/:id' render={routeProps => <DataPage render={(props) => <ShowTaskPage {...props} id={routeProps.match.params.id} />} />} />\r\n            <Route exact path='/contexts' render={routeProps => <ContextPage />} />\r\n            <Route exact path='/contexts/:id' render={routeProps => <DataPage render={(props) => <ShowContextPage {...props} id={routeProps.match.params.id} />} />} />\r\n            <Route exact path='/projects' render={routeProps => <DataPage render={(props) => <ProjectPage {...props} />} />} />\r\n            <Route exact path='/projects/:id' render={routeProps => <DataPage render={(props) => <ShowProjectPage {...props} id={routeProps.match.params.id} />} />} />\r\n            <Route exact path='/people' render={routeProps => <PeoplePage />} />} />\r\n            <Route exact path='/people/new' render={routeProps => <EditPersonPage />} />\r\n            <Route exact path='/people/:id' render={routeProps => <ShowPersonPage id={routeProps.match.params.id} />} />\r\n            <Route exact path='/people/:id/edit' render={routeProps => <EditPersonPage id={routeProps.match.params.id} />} />\r\n            <Route path='/playground' component={PlaygroundPage} />\r\n            <Route path='/sync' component={SyncPage} />\r\n            <Route path='/stats' render={routeProps => <StatsPage />} />\r\n            <Route path='/settings' component={SettingsPage} />\r\n        </Switch>\r\n    </DataProvider>\r\n</Layout>;\r\n","import * as React from 'react';\r\nimport { ToolSection } from '../framework/ToolSection';\r\n\r\nexport const PlaygroundPage: React.FC<{}> = () => {\r\n    return (\r\n        <div style={{height: '100%'}}>\r\n            <ToolSection>\r\n            </ToolSection>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { ToolSection } from '../framework/ToolSection';\r\nimport { syncer, SyncStatus } from '../db/syncer';\r\nimport moment from 'moment';\r\n\r\nexport const SyncPage: React.FC<{}> = props => {\r\n    const [count, setCount] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n        syncer.registerSyncListener(() => {\r\n            setCount(c => c + 1);\r\n        });\r\n    }, []);\r\n   \r\n    return (\r\n        <>\r\n            <React.Fragment key={count}></React.Fragment>\r\n            <ToolSection>\r\n                <div>Status: {SyncStatus[syncer.status]}</div>\r\n                <div className=\"button\" onClick={() => syncer.startServerSync()}>Sync Now</div>\r\n            </ToolSection>\r\n            <div className=\"list\">\r\n                {syncer.getResults().slice(0).reverse().map((result, i) =>\r\n                    <React.Fragment key={i}>\r\n                        <div className=\"item\">{result.endAt.getTime() - result.startAt.getTime()} ms - start: {moment(result.startAt).format('HH:mm:ss')}, end: {moment(result.endAt).format('HH:mm:ss')}, fetch: {result.fetch}, send: {result.send}{result.error ? `, error: ${result.error}` : null}</div>\r\n                    </React.Fragment>)}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport { ToolSection } from '../framework/ToolSection';\r\nimport { db } from '../db/db';\r\nimport { getCurrentKey, generateRsaKey, importLifeKey, LifeKey } from '../db/crypt';\r\nimport * as dropboxApi from '../lib/dropboxApi';\r\n\r\nexport const SettingsPage: React.FC<{}> = () => {\r\n    const [pushSubscribed, setPushSubscribed] = React.useState<boolean|null>(null);\r\n    const [currentKey, setCurrentKey] = React.useState<LifeKey|null>(null);\r\n    const [swState, setSwState] = React.useState<string>('no-update');\r\n    const [generatedKey, setGeneratedKey] = React.useState<string|null>(null);\r\n    const [privateKey, setPrivateKey] = React.useState<string|null>(null);\r\n\r\n    async function clearEntities() {\r\n        if(!window.confirm('Clear all local data?')) {\r\n            return;\r\n        }\r\n\r\n        db.contexts.dropInstance();\r\n        db.tasks.dropInstance();\r\n        db.notes.dropInstance();\r\n        db.projects.dropInstance();\r\n        db.people.dropInstance();\r\n    }\r\n\r\n    const [dropboxConnected, setDropboxConnected] = React.useState<boolean|null>(null);\r\n    React.useEffect(() => {\r\n        dropboxApi.isSignedIn().then(status => {\r\n            setDropboxConnected(status);\r\n        });\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        async function componentDidMount() {\r\n            navigator.serviceWorker.ready.then(async (registration) => {\r\n                const subscription = await registration.pushManager.getSubscription();\r\n                setPushSubscribed(!!subscription);\r\n            });\r\n    \r\n            navigator.serviceWorker.ready.then(registration => {\r\n                registration.addEventListener('updatefound', () => {\r\n                    const installingWorker = registration.installing;\r\n                    if (!installingWorker) {\r\n                        setSwState('not-installing');\r\n                        return;\r\n                    }\r\n    \r\n                    installingWorker.addEventListener('statechange', () => {\r\n                        if (installingWorker.state === 'installed') {\r\n                            if (navigator.serviceWorker.controller) {\r\n                                console.log('New content is available; please refresh.');\r\n                                setSwState('content-ready');\r\n                            } else {\r\n                                console.log('Content is cached for offline use.');\r\n                                setSwState('cached');\r\n                            }\r\n                        } else {\r\n                            setSwState('state-not-installed');\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n    \r\n            await refreshKeys();\r\n        }\r\n        componentDidMount() \r\n    }, [])\r\n\r\n    async function refreshKeys() {\r\n        try {\r\n            const newCurrentKey = await getCurrentKey();\r\n            setCurrentKey(newCurrentKey)\r\n        } catch(err) {\r\n\r\n        }\r\n    }\r\n\r\n    function unsubscribePush() {\r\n        navigator.serviceWorker.ready.then(async (registration) => {\r\n            const subscription = await registration.pushManager.getSubscription();\r\n            if (subscription) {\r\n                await subscription.unsubscribe();\r\n                setPushSubscribed(!!(await registration.pushManager.getSubscription()));\r\n            }\r\n        });\r\n    }\r\n\r\n    function subscribePush() {\r\n        navigator.serviceWorker.ready.then(async (registration) => {\r\n            try {\r\n                const options = {\r\n                    applicationServerKey: 'BEl6vcKrENjrQk-LikFlZ5hy6VuVgSUUZ2uCYOQsuYjMP_WbigIOfDITEkF6JhEbd9MVw9RKiMODYxmpONuYsqY',\r\n                    userVisibleOnly: true\r\n                };\r\n                const subscription = await registration.pushManager.subscribe(options);\r\n                console.log(JSON.stringify(subscription))\r\n                setPushSubscribed(!!subscription);\r\n                // Api.testPush(subscription);\r\n            } catch (err) {\r\n                console.log('Error', err)\r\n            }\r\n        });\r\n    }\r\n\r\n    function clearServiceWorker() {\r\n        navigator.serviceWorker.ready.then(async (registration) => {\r\n            await registration.update();\r\n        });\r\n    }\r\n\r\n    function unregisterServiceWorker() {\r\n        navigator.serviceWorker.ready.then(async (registration) => {\r\n            await registration.unregister();\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToolSection>\r\n                <div className=\"button\" onClick={() => window.location.reload()}>Reload</div>\r\n                <div className=\"button\" onClick={() => window.location.reload(true)}>Force Reload</div>\r\n            </ToolSection>\r\n            <ToolSection>\r\n                <div className=\"button\" onClick={async () => { await dropboxApi.signIn(); setDropboxConnected(await dropboxApi.isSignedIn()) }}>Connect Dropbox</div>\r\n                {/* <div className=\"button\" onClick={async () => { await signOut(); setDropboxConnected(await isLoggedIn()) }}>Disconnect Google Drive</div> */}\r\n                <div style={{display: 'inline-block', background: '#222', padding: '.5rem'}}>Status: {dropboxConnected === null ? 'unknown' : dropboxConnected ? 'connected' : 'not connected'}</div>\r\n                {dropboxApi.isLocalMode && <div style={{display: 'inline-block', background: '#222', padding: '.5rem'}}>Local [ {window.location.host} ]</div>}\r\n            </ToolSection>\r\n            <ToolSection>\r\n                <div className=\"button\" onClick={async () => await clearEntities()}>Clear Entities</div>\r\n                <div className=\"button\" onClick={() => clearServiceWorker()}>Update SW</div>\r\n                <div className=\"button\" onClick={() => unregisterServiceWorker()}>Unregister SW</div>\r\n                <div>ServiceWorker state: {swState}</div>\r\n            </ToolSection>\r\n            <ToolSection>\r\n                {pushSubscribed === true && <div className=\"button\" onClick={async () => await unsubscribePush()}>Unsubscribe Push</div>}\r\n                {pushSubscribed === false && <div className=\"button\" onClick={async () => await subscribePush()}>Subscribe Push</div>}\r\n            </ToolSection>\r\n            <ToolSection>\r\n                <h2>Encryption</h2>\r\n                {!currentKey && (\r\n                    <>\r\n                        <div>\r\n                            <textarea style={{width: '100%'}} onChange={e => setPrivateKey(e.target.value)} />\r\n                        </div>\r\n                        <button className=\"button\" onClick={async () => { await importLifeKey(privateKey!); await refreshKeys(); }}>Set private key</button>\r\n                        <h4>Generate key</h4>\r\n                        <div className=\"button\" onClick={async () => setGeneratedKey((await generateRsaKey()).privateKey)}>Generate</div>\r\n                        <textarea style={{width: '100%', background: '#555', color: '#ddd'}} readOnly value={generatedKey || ''} />\r\n                    </>\r\n                )}\r\n                <h4>Keys</h4>\r\n                <div className=\"list\">\r\n                    {!currentKey && <div>No keys</div>}\r\n                    {currentKey && (\r\n                        <div className=\"item\">\r\n                            {currentKey.fingerprint}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </ToolSection>\r\n            <ToolSection>\r\n            </ToolSection>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { routes } from './routes';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter children={ routes } />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}