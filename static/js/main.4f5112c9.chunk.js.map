{"version":3,"sources":["layout/styles.ts","components/Loader.tsx","model.tsx","db/EventListener.ts","bridge/HostBridge.ts","db/syncer.ts","layout/theme.ts","components/Layout.tsx","db/task.ts","db/project.ts","framework/ToolSection.tsx","lib/contextActions.ts","db/context.ts","lib/UseQueryState.ts","components/SettingsCompactor.tsx","components/ContextTag.tsx","components/ContextBar.tsx","db/note.ts","pages/TaskPage.tsx","db/person.ts","components/MarkedViewer.tsx","components/SimpleSplitEditor.tsx","components/TreeEditor.tsx","components/ContextSelector.tsx","components/TagInput.tsx","components/NoteEditor.tsx","db/stagingArea.ts","pages/notes/EditNotePage.tsx","components/TreeViewer.tsx","components/ReferenceViewer.tsx","pages/notes/ShowNotePage.tsx","framework/List.tsx","pages/notes/NotePage.tsx","pages/PlaygroundPage.tsx","pages/ContextPage.tsx","pages/ProjectPage.tsx","components/EmbeddedNote.tsx","pages/ShowTaskPage.tsx","pages/ShowProjectPage.tsx","pages/ShowContextPage.tsx","pages/DataPage.tsx","pages/people/PeoplePage.tsx","pages/people/EditPersonPage.tsx","pages/people/ShowPersonPage.tsx","pages/StatsPage.tsx","pages/notes/DailyNotes.tsx","routes.tsx","pages/SyncPage.tsx","pages/SettingsPage.tsx","index.tsx"],"names":["hoverGlow","cursorPointer","css","cursor","display","alignItems","horizontalSpace","width","around","paddingLeft","undefined","paddingRight","marginLeft","marginRight","verticalSpace","height","paddingTop","paddingBottom","marginBottom","Loader","props","style","justifyContent","border","padding","background","Data","notes","tasks","contexts","projects","people","virtualTasks","this","DataContext","React","createContext","data","refresh","DataProvider","useState","setData","useEffect","a","syncer","registerDataListener","getData","startServerSync","ensureServerSyncEnqueued","init","value","Provider","children","useData","useContext","EventListener","listeners","listener","push","filter","x","arg","getBridge","desktop","window","chrome","webview","hostObjects","dotnet","android","AndroidBridge","id","JSON","getContext","parse","getContexts","entity","saveContext","stringify","getPeople","savePerson","getProjects","saveProject","getTasks","getVirtualTasks","saveTask","getNotes","getNote","saveNote","syncRemote","syncRemoteConnected","disconnectBlobStorage","connectionString","connectBlobStorage","SyncStatus","Api","hasBridge","status","Idle","results","intervalHandle","syncListener","dataListener","register","force","loadData","trigger","setInterval","Syncing","runBridgeSync","startAt","Date","console","log","Failed","toString","endAt","error","message","fetch","send","_","updatedAt","orderBy","themeStore","createInstance","name","themeListener","currentTheme","getItem","setTheme","theme","setItem","getVariable","variable","getComputedStyle","document","documentElement","getPropertyValue","isDark","isMobile","matchMedia","matches","TaskState","ProjectState","Layout","sidebar","setSidebar","count","setCount","onNavClick","registerSyncListener","c","className","overflow","key","cx","styles","to","onClick","exact","activeClassName","overflowY","overflowX","ToolSection","verticalAround","getNestedContexts","grouped","contextId","taskCounts","state","Active","topContexts","nestedContexts","getFilteredContextIds","contextIds","queue","length","next","pop","nested","map","ContextState","useQueryState","initialValue","queryParam","URLSearchParams","location","search","get","rawValue","setRawValue","urlParams","set","delete","queryString","history","replaceState","pathname","dispatchEvent","CustomEvent","useQueryStateT","convertTo","convertFrom","strValue","SettingsCompactor","expanded","setExpanded","alwaysVisible","wideStyle","mobileOnly","flexDirection","ContextTag","context","find","p","title","NoteMode","ContextBar","ContextActions","borderRight","onChange","i","renderListContext","depth","Inactive","showTaskCount","color","perspectives","groupedProject","groupedContext","defaultPerspective","TaskPage","text","setText","showCompleted","showDeferred","showIncubated","showContextBar","includeNested","options","setOptions","setContextId","projectId","setProjectId","perspectiveId","setPerspectiveId","onKeyPress","e","content","stateChangedAt","toISOString","noteId","onCompleteChange","task","Completed","renderProject","project","renderDeferred","deferredUntil","moment","format","fromNow","renderNote","renderTitle","pattern","split","match","replace","href","stopPropagation","target","rel","filterTasks","complete","t","Incubated","incubatedProjectIds","indexOf","sort","b","createdAt","renderTask","skipProjectContext","source","encodeURIComponent","type","checked","preventDefault","textDecoration","perspective","taskBlock","filteredContextIds","stateOrder","Dropped","emptyActiveProjects","filteredProjects","forEach","projectTasks","noProjectTasks","readOnly","renderVirtualTask","htmlFor","placeholder","getNoteTitle","note","dailyDate","parsedTitle","exec","noteReferenceRegex","escapeRegExp","str","getNoteReferenceMatchRegExp","reference","RegExp","getNoteAliasReferenceMatchRegExp","alias","extractReferences","matchAll","extractAllReferences","getKey","toLowerCase","existing","Set","n","references","has","existingResult","Object","values","mentionRegex","convertAliasToName","substring","toUpperCase","g","getAlias","person","extractPersonReferences","getAllVirtualPersonAliases","refs","add","extractAllPersonReferences","Array","from","SplitMode","MarkedViewer","useHistory","lifeNavigate","url","markdown","group1","matchContextId","matchTitle","prefixContext","contextTitle","test","referenceRegExp","extra","html","marked","dangerouslySetInnerHTML","__html","NoteModeSelector","mode","Markdown","onModeChange","Tree","SplitModeSelector","Split","Editor","Preview","SimpleSplitEditor","expand","zIndex","maxHeight","components","textAreaStyle","flexGrow","minWidth","borderTop","markedStyle","fontSize","onTextChanged","showGutter","showPrintMargin","wrapEnabled","enableBasicAutocompletion","snippetCompleter","textCompleter","keyWordCompleter","enableLiveAutocompletion","enableSnippets","TreeEditor","invalid","selectMode","setSelectMode","selectedNodes","setSelectedNodes","nodes","setNodes","inputRef","useRef","active","setActive","noteTitles","setNoteTitles","noteCompletions","titles","flat","peopleAliases","setPeopleAliases","aliases","concat","onInputChanged","node","getParentNode","targetNode","searchNodes","parentNode","childResult","preorderTraversal","result","stack","reverse","childNode","removeNodeIfEmpty","nodeIndex","findIndex","splice","removeNode","indentNode","unindentNode","parentParentNode","targetNodes","parentNodeIndex","commands","bindKey","win","mac","setTimeout","above","current","editor","getCursorPosition","row","column","newNode","afterNode","insertNode","activeIndex","Math","max","getSession","doc","getLength","min","completions","getCompletions","session","pos","editorPrefix","callback","line","getLine","hasPrefix","caption","snippet","meta","requiredPrefix","position","prefix","getPrefix","startsWith","toggleSelected","includes","renderNode","index","level","isActive","isSelected","clickNode","lineHeight","letterSpacing","ref","focus","highlightActiveLine","maxLines","Infinity","borderLeft","bottom","left","right","visit","visitNodes","repeat","copy","insert","ContextSelector","activeContexts","inactiveContexts","disabled","TagInput","setFocus","TagState","availableTags","tags","tagState","setTagState","timeoutId","tagInput","onTextChange","withText","newTagState","getTags","onFocus","clearTimeout","onBlur","selectedTags","onKeyDown","decrementIndex","incrementIndex","addSelectedTag","addText","reopenLastTag","getFilteredAvailableTags","slice","tag","addTag","lastTag","join","Tag","TagList","NoteEditor","splitMode","setSplitMode","flex","updateNote","noteFor","registered","ensureRegister","listen","onNavigate","store","keys","removeItem","processQueue","queuedPath","queuedNote","action","hasChanges","useNote","pristineNote","pristine","setNote","setHasChanges","newNote","newHasChanges","EditNotePage","goBack","setGoBack","daily","decodeURIComponent","onNoteAdded","TreeViewer","setInvalid","json","referenceTitle","personAlias","ReferenceViewer","contextNotes","fontWeight","marginTop","PersonReferenceViewer","matchingNotes","ShowNotePage","viewer","ShowVirtualNotePage","List","items","renderItem","NotePage","s","filterTags","setFilterTags","showTagsBar","setShowTagsBar","searchResult","setSearchResult","searchIndex","setSearchIndex","showNotesFor","setShowNotesFor","showNoContext","setShowNoContext","virtualReferences","setVirtualReferences","setInactiveContexts","debouncedSearch","debounce","r","score","idx","lunr","field","tagCounts","k","notesOutput","isRef","virtualReferencesOutput","v","output","o","toggleTag","ContextPage","refreshData","renderTarget","ProjectPage","setState","bind","EmbeddedNoteEdit","targetEntity","addNode","EmbeddedNoteShow","ShowTaskPage","setTitle","setSource","event","setTaskState","isDirty","setContext","setProject","setDefer","ShowProjectPage","projectState","setProjectState","ShowContextPage","contextState","setContextState","isNaN","DataPage","reload","render","PeoplePage","virtualPeople","allPeople","localeCompare","EditPersonPage","initialState","setValues","handleChange","persist","useForm","birthday","onSave","Error","ShowPersonPage","ShowVirtualPersonPage","StatsPage","noteTotalCount","taskTotalCount","peopleTotalCount","projectTotalCount","contextTotalCount","DailyNotePage","oneMonthAgo","filteredContexts","dailyNotes","contextCounts","countBy","routes","path","routeProps","params","component","Fragment","getResults","diff","remoteConnected","setRemoteConnected","blobConnectionString","setBlobConnectionString","check","createBrowserHistory","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4f5112c9.chunk.js","sourcesContent":["import {css} from 'emotion';\n\nexport const hoverGlow = 'hover-glow';\n\nexport const cursorPointer = css({\n    cursor: 'pointer'\n});\n\nexport const verticalCenter = css({\n    display: 'flex',\n    alignItems: 'center'\n});\n\nexport function horizontalSpace(width = '.3rem', around = false) {\n    return css({\n        paddingLeft: around ? width : undefined,\n        paddingRight: around ? width : undefined,\n        '&': {\n            '& > *:first-child': {\n                marginLeft: 0\n            },\n            '& > *': {\n                marginRight: width\n            },\n            '& > *:last-child': {\n                marginRight: 0\n            }\n        }\n    });\n}\n\nexport function verticalSpace(height = '.3rem', around = false) {\n    return css({\n        paddingTop: around ? height : undefined,\n        paddingBottom: around ? height : undefined,\n        '&': {\n            '& > *': {\n                marginBottom: height\n            },\n            '& > *:last-child': {\n                marginBottom: 0\n            }\n        }\n    });\n}","import * as React from 'react';\n\nexport const Loader: React.FC = (props) => {\n    return (\n        <div style={{display: 'flex', height: '100%', justifyContent: 'center', alignItems: 'center'}}>\n            <div style={{border: '1px solid #555', padding: '1rem 2rem', background: '#2e2e2e'}}>Loading...</div>\n        </div>\n    );\n}","import { Note } from \"./db/note\";\nimport { Task, VirtualTask } from \"./db/task\";\nimport { Context } from \"./db/context\";\nimport { Project } from \"./db/project\";\nimport { Person } from \"./db/person\";\nimport React, { useContext, useEffect } from \"react\";\nimport { syncer } from \"./db/syncer\";\nimport { Loader } from \"./components/Loader\";\n\nexport class Data {\n    constructor(notes: Note[], tasks: Task[], contexts: Context[], projects: Project[], people: Person[], virtualTasks: VirtualTask[]) {\n        this.notes = notes;\n        this.tasks = tasks;\n        this.contexts = contexts;\n        this.projects = projects;\n        this.people = people;\n        this.virtualTasks = virtualTasks;\n    }\n\n    notes: Note[];\n    readonly tasks: Task[];\n    readonly virtualTasks: VirtualTask[];\n    readonly contexts: Context[];\n    readonly projects: Project[];\n    readonly people: Person[];\n};\n\ninterface DataContextState {\n    data: Data;\n    refresh(): void;\n}\n\nconst DataContext = React.createContext<DataContextState>({\n    data: null as any,\n    refresh() {},\n});\n\nexport const DataProvider: React.FC = props => {\n    const [data, setData] = React.useState<Data>(null as any);\n\n    useEffect(() => {\n        async function init() {\n            syncer.registerDataListener(async data => setData(data));\n            setData(await syncer.getData());\n            await syncer.startServerSync();\n            await syncer.ensureServerSyncEnqueued();\n        };\n        init();\n    }, []);\n\n    const value: DataContextState = {\n        data,\n        refresh() {\n            syncer.getData(true);\n        }\n    };\n\n    if (!data) {\n        return <Loader />;\n    }\n\n    return (\n      <DataContext.Provider value={value}>\n        {props.children}\n      </DataContext.Provider>\n    );\n};\n\nexport const useData = () => {\n    const value = useContext(DataContext);\n    return value;\n};","export class EventListener<T> {\n    listeners: ((arg: T) => void)[] = [];\n\n    register(listener: (arg: T) => void) {\n        this.listeners.push(listener);\n        return () =>  {\n            this.listeners = this.listeners.filter(x => x !== listener);\n        };\n    }\n\n    trigger(arg: T) {\n        for(const listener of this.listeners) {\n            listener(arg);\n        }\n    }\n}","import React from \"react\";\nimport { Context } from \"../db/context\";\nimport { Note } from \"../db/note\";\nimport { Person } from \"../db/person\";\nimport { Project } from \"../db/project\";\nimport { Task, VirtualTask } from \"../db/task\";\n\nfunction getBridge() {\n    const desktop: HostBridge = (window as any).chrome?.webview?.hostObjects?.dotnet;\n    const android: HostBridge = (window as any).AndroidBridge;\n    return desktop || android || null;\n}\n\nfunction hasBridge() {\n    return !!getBridge();\n}\n\ninterface HostBridge {\n    getNotes(): Promise<string>\n    getNote(id: string): Promise<string>;\n    saveNote(entityJson: string): Promise<string>;\n    getContexts(): Promise<string>;\n    getContext(id: string): Promise<string>;\n    saveContext(entityJson: string): Promise<string>;\n    getPeople(): Promise<string>;\n    savePerson(entityJson: string): Promise<string>;\n    getProjects(): Promise<string>;\n    saveProject(entityJson: string): Promise<string>;\n    getTasks(): Promise<string>;\n    getVirtualTasks(): Promise<string>;\n    saveTask(entityJson: string): Promise<string>;\n    getEntity(key: string): Promise<string>;\n    sendEntity(key: string, contents: string): Promise<void>;\n    syncRemote(): Promise<string>\n    syncRemoteConnected(): Promise<boolean>\n    disconnectBlobStorage(): Promise<void>\n    connectBlobStorage(connectionString: String): Promise<void>\n}\n\nasync function getContext(id: string) {\n    return JSON.parse(await getBridge().getContext(id)) as Context;\n}\n\nasync function getContexts() {\n    return JSON.parse(await getBridge().getContexts()) as Context[];\n}\n\nasync function saveContext(entity: Context) {\n    return JSON.parse(await getBridge().saveContext(JSON.stringify(entity))) as Context;\n}\n\nasync function getPeople() {\n    return JSON.parse(await getBridge().getPeople()) as Person[];\n}\n\nasync function savePerson(entity: Person) {\n    return JSON.parse(await getBridge().savePerson(JSON.stringify(entity))) as Person;\n}\n\nasync function getProjects() {\n    return JSON.parse(await getBridge().getProjects()) as Project[];\n}\n\nasync function saveProject(entity: Project) {\n    return JSON.parse(await getBridge().saveProject(JSON.stringify(entity))) as Project;\n}\n\nasync function getTasks() {\n    return JSON.parse(await getBridge().getTasks()) as Task[];\n}\n\nasync function getVirtualTasks() {\n    return JSON.parse(await getBridge().getVirtualTasks()) as VirtualTask[];\n}\n\nasync function saveTask(entity: Task) {\n    return JSON.parse(await getBridge().saveTask(JSON.stringify(entity))) as Task;\n}\n\nasync function getNotes() {\n    return JSON.parse(await getBridge().getNotes()) as Note[];\n}\n\nasync function getNote(id: string) {\n    return JSON.parse(await getBridge().getNote(id)) as Note;\n}\n\nasync function saveNote(entity: Note) {\n    return JSON.parse(await getBridge().saveNote(JSON.stringify(entity))) as Note;\n}\n\nasync function syncRemote() {\n    return JSON.parse(await getBridge().syncRemote()) as SyncResult;\n}\n\nasync function syncRemoteConnected() {\n    return await getBridge().syncRemoteConnected();\n}\n\nasync function disconnectBlobStorage() {\n    await getBridge().disconnectBlobStorage();\n}\n\nasync function connectBlobStorage(connectionString: string) {\n    await getBridge().connectBlobStorage(connectionString);\n}\n\nexport const useNotes = () => {\n    const [data, setData] = React.useState<Note[]|null>(null);\n  \n    async function fetchData() {\n        console.time('getNotes');\n        const response = await Api.getNotes();\n        console.timeEnd('getNotes');\n        setData(response);\n    }\n  \n    React.useEffect(() => {fetchData()}, []);\n    return data;\n};\n\nexport const useNote = (id: string|null) => {\n    const [data, setData] = React.useState<Note|null>(null);\n  \n    async function fetchData(id: string|null) {\n        if(!id) {\n            return;\n        }\n\n        console.time('getNote');\n        const response = await Api.getNote(id);\n        console.timeEnd('getNote');\n        setData(response);\n    }\n  \n    React.useEffect(() => {fetchData(id)}, [id]);\n    return data;\n};\n\nexport const useContext = (id: string|null) => {\n    const [data, setData] = React.useState<Context|null>(null);\n  \n    async function fetchData(id: string|null) {\n        if(!id) {\n            return;\n        }\n\n        const response = await Api.getContext(id);\n        setData(response);\n    }\n  \n    React.useEffect(() => {fetchData(id)}, [id]);\n    return data;\n};\n\nexport interface SyncResult {\n    startAt: string;\n    endAt: string;\n    fetch: number;\n    send: number;\n    error: Error|null;\n}\n\nexport const Api = {\n    hasBridge,\n    getNotes,\n    getNote,\n    saveNote,\n    getContexts,\n    getContext,\n    saveContext,\n    getProjects,\n    saveProject,\n    getPeople,\n    savePerson,\n    getTasks,\n    getVirtualTasks,\n    saveTask,\n    syncRemote,\n    syncRemoteConnected,\n    connectBlobStorage,\n    disconnectBlobStorage,\n};\n\n","import * as _ from \"lodash\";\nimport { Data } from \"../model\";\nimport {EventListener} from './EventListener';\nimport { Api, SyncResult } from \"../bridge/HostBridge\";\n\nexport enum SyncStatus {\n    Idle,\n    Syncing,\n    Failed,\n};\n\nclass Syncer {\n    status = SyncStatus.Idle;\n    results: SyncResult[] = [];\n    data: Data|null = null;\n    intervalHandle: number|null = null;\n\n    syncListener = new EventListener<SyncStatus>();\n    dataListener = new EventListener<Data>();\n\n    registerSyncListener(listener: (status: SyncStatus) => void) {\n        this.syncListener.register(listener)\n    }\n\n    registerDataListener(listener: (status: Data) => void) {\n        this.dataListener.register(listener)\n    }\n\n    getResults() {\n        return this.results;\n    }\n\n    async getData(force?: boolean) {\n        if (!this.data || force) {\n            this.data = await this.loadData();\n            this.dataListener.trigger(this.data);\n        }\n\n        return this.data;\n    }\n\n    async ensureServerSyncEnqueued() {\n        if (this.intervalHandle !== null) {\n            return;\n        }\n\n        this.intervalHandle = setInterval(async () => {\n            await this.startServerSync();\n        }, 60000) as any;\n    }\n\n    async startServerSync() {\n        if (this.status === SyncStatus.Syncing) {\n            return;\n        }\n\n        await this.runBridgeSync();\n    }\n    \n    async runBridgeSync() {\n        if(!Api.hasBridge()) {\n            return;\n        }\n\n        const startAt = new Date();\n\n        try {\n            this.results.push(await Api.syncRemote());\n            console.log(this.results);\n            this.status = SyncStatus.Idle;\n            this.syncListener.trigger(this.status);            \n        } catch (e) {\n            this.status = SyncStatus.Failed;\n            this.results.push({ startAt: startAt.toString(), endAt: new Date().toString(), error: e && e.message ? e.message : e, fetch: 0, send: 0 });\n            this.syncListener.trigger(this.status);\n        }\n    }\n\n    private async loadData(): Promise<Data> {\n        const contexts = Api.getContexts();\n        const tasks = Api.getTasks();\n        const projects = Api.getProjects();\n        const people = Api.getPeople();\n        const virtualTasks = Api.getVirtualTasks();\n        const notes = _.orderBy(await Api.getNotes(), x => x.updatedAt);\n        \n        return new Data(notes, await tasks, await contexts, await projects, await people, await virtualTasks);\n    }\n}\n\nexport const syncer = new Syncer();\n\n\n\n","import {createInstance} from 'localforage';\nimport { EventListener } from '../db/EventListener';\n\nconst themeStore = createInstance({ name: 'theme' });\nconst themeListener = new EventListener<string>();\n\nconst defaultTheme = 'dark-theme';\nlet currentTheme = defaultTheme;\n\nasync function init() {\n    currentTheme = await themeStore.getItem<string>('theme');\n    currentTheme = currentTheme || defaultTheme;\n    themeListener.trigger(currentTheme);\n}\n\ninit();\n\nexport async function setTheme(theme: string) {\n    currentTheme = theme;\n    await themeStore.setItem('theme', currentTheme);\n    themeListener.trigger(currentTheme);\n}\n\nexport function registerThemeListener(listener: (theme: string) => void) {\n    themeListener.register(listener)\n}\n\nexport function getVariable(variable: string) {\n    return getComputedStyle(document.documentElement).getPropertyValue(variable);\n}\n\nexport function isDark() {\n    return currentTheme === defaultTheme;\n}\n\n","import * as React from 'react';\nimport './Layout.scss';\nimport { NavLink } from 'react-router-dom';\nimport * as styles from '../layout/styles';\nimport { syncer, SyncStatus } from '../db/syncer';\nimport { cx } from 'emotion';\nimport { registerThemeListener } from '../layout/theme';\n\nexport function isMobile() {\n    return window.matchMedia(\"(max-width: 768px)\").matches;\n}\n\nexport const Layout: React.FC<{}> = (props) => {\n    const [sidebar, setSidebar] = React.useState(() => !isMobile())\n    const [count, setCount] = React.useState(0);\n    const [theme, setTheme] = React.useState<string|null>(null);\n\n    React.useEffect(() => {\n        syncer.registerSyncListener(() => setCount(c => c +  1));\n    }, []);\n\n    React.useEffect(() => {\n        registerThemeListener(x => {\n            document.documentElement.className = x;\n            setTheme(x)\n        });\n    }, []);\n\n    function onNavClick() {\n        if(isMobile()) {\n            setSidebar(false);\n        }\n    }\n\n    if (theme == null)\n    {\n        return <></>;\n    }\n\n    return <>\n        <section style={{display: 'flex', overflow: 'hidden', height: '100%'}} className={theme}>\n            <React.Fragment key={count} />\n            <div className={cx('navbar')}>\n                <div className={cx(styles.horizontalSpace('1rem'))}>\n                    {!sidebar && (\n                        <>\n                            <NavLink className={cx('button', 'hover-glow')} to={ '/' } onClick={onNavClick} exact activeClassName='is-active'>Notes</NavLink>\n                            <NavLink className={cx('button', 'hover-glow')} to={ '/tasks' } onClick={onNavClick} exact activeClassName='is-active'>Tasks</NavLink>\n                        </>\n                    )}\n                </div>\n                <div className={cx(styles.horizontalSpace('1rem'))}>\n                    {syncer.status !== SyncStatus.Idle && <NavLink className=\"button\" to=\"/sync\">Sync: {SyncStatus[syncer.status]}</NavLink>}\n                    <button className=\"button\" onClick={() => setSidebar(!sidebar)}>\n                        Menu\n                    </button>\n                </div>\n            </div>\n\n            <div className={cx('sidebar', 'list')} style={{overflowY: 'auto', paddingTop: 52, height: '100%', width: sidebar ? undefined : 0, overflowX: 'hidden'}}>\n                <NavLink className={cx('item', 'hover-glow')} to={ '/' } onClick={onNavClick} exact activeClassName='is-active'>Notes</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/notes/daily' } onClick={onNavClick} exact activeClassName='is-active'>Daily Notes</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/tasks' } onClick={onNavClick} exact activeClassName='is-active'>Tasks</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/projects' } onClick={onNavClick} exact activeClassName='is-active'>Projects</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/contexts' } onClick={onNavClick} exact activeClassName='is-active'>Contexts</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/people' } onClick={onNavClick} exact activeClassName='is-active'>People</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/playground' } onClick={onNavClick} exact activeClassName='is-active'>Playground</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/stats' } onClick={onNavClick} exact activeClassName='is-active'>Stats</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/settings' } onClick={onNavClick} exact activeClassName='is-active'>Settings</NavLink>\n                <NavLink className={cx('item', styles.hoverGlow)} to={ '/sync' } onClick={onNavClick} exact activeClassName='is-active'>Sync Status</NavLink>\n            </div>\n\n            <div className=\"main\" style={{paddingTop: 52}}>\n                { props.children }\n            </div>\n        </section>\n    </>;\n}\n","import { Entity } from \"./entity\";\nimport { HasNote } from \"./note\";\n\nexport enum TaskState {\n    Active,\n    Incubated,\n    Completed,\n};\n\nexport interface Task extends Entity, HasNote {\n    type: 'task',\n    title: string;\n    content: string|null;\n    state: TaskState;\n    stateChangedAt: string;\n    contextId: string|null;\n    projectId: string|null;\n    deferredUntil: string|null;\n}\n\nexport interface VirtualTask {\n    title: string;\n    state: TaskState;\n    noteId: string;\n}","import { Entity } from \"./entity\";\n\nexport enum ProjectState {\n    Active,\n    Incubated,\n    Completed,\n    Dropped,\n}\n\nexport interface Project extends Entity {\n    type: 'project',\n    title: string;\n    contextId: string|null;\n    state: ProjectState;\n}","import * as React from 'react';\nimport * as styles from '../layout/styles';\nimport { cx } from 'emotion';\n\nexport const ToolSection: React.SFC<{ verticalAround?: boolean }> = (props) => {\n    let verticalAround = props.verticalAround;\n\n    if (verticalAround === undefined) {\n        verticalAround = true;\n    }\n\n    return (\n        <div className={cx(styles.horizontalSpace('8px', true), styles.verticalSpace('8px', verticalAround))}>{props.children}</div>\n    );\n}","import { Data } from \"../model\";\nimport * as _ from 'lodash';\nimport { Context } from \"../db/context\";\nimport { TaskState } from \"../db/task\";\n\nexport interface NestedContexts {\n    topContexts: Context[];\n    nestedContexts: {[id: string]: Context[]};\n    taskCounts: {[id: string]: number};\n}\n\nexport function getNestedContexts(data: Data): NestedContexts {\n    const grouped = _.groupBy(data.contexts, x => x.contextId);\n    const taskCounts = _.countBy(data.tasks.filter(x => x.state === TaskState.Active), x => x.contextId);\n\n    return {\n        topContexts: data.contexts.filter(x => !x.contextId),\n        nestedContexts: grouped,\n        taskCounts\n    };\n}\n\nexport function getFilteredContextIds(contextId: string|null, data: Data) {\n    const contexts = getNestedContexts(data);\n\n    if (contextId) {\n        const contextIds = [contextId];\n        const queue = [contextId];\n\n        while (queue.length) {\n            const next = queue.pop();\n\n            if (!next) {\n                break;\n            }\n\n            for(const nested of contexts.nestedContexts[next] || []) {\n                contextIds.push(nested.id);\n                queue.push(nested.id);\n            }\n        }\n\n        return contextIds;\n    } else {\n        return data.contexts.map(c => c.id);\n    }\n};","import { Entity } from \"./entity\";\n\nexport enum ContextState {\n    Active,\n    Inactive,\n}\n\nexport interface Context extends Entity {\n    type: 'context';\n    title: string;\n    contextId: string|null;\n    state: ContextState;\n}","import * as React from \"react\";\n\nexport const useQueryState = (initialValue: string|null, queryParam: string): [string|null, (value: string|null) => void] => {\n    const [rawValue, setRawValue] = React.useState(() => {\n        const urlParams = new URLSearchParams(window.location.search);\n        return urlParams.get(queryParam) || initialValue;\n    });\n\n    const setValue = (value: string|null) => {\n        const urlParams = new URLSearchParams(window.location.search);\n        setRawValue(value);\n        if (!value || value === initialValue) {\n            urlParams.delete(queryParam);\n        } else {\n            urlParams.set(queryParam, value);\n        }\n\n        const queryString = urlParams.toString();\n\n        if (queryString.length) {\n            window.history.replaceState(null, '', `?${queryString}`);\n        } else {\n            window.history.replaceState(null, '', window.location.pathname);\n        }\n\n        window.dispatchEvent(new (window as any).CustomEvent('popstate'));\n    };\n\n    return [rawValue, setValue];\n};\n\nexport const useQueryStateT = <T extends {}>(initialValue: T, queryParam: string, convertTo: (value: string|null) => T, convertFrom: (value: T) => string|null): [T, (value: T) => void] => {\n    const [rawValue, setRawValue] = React.useState<T>(() => {\n        const urlParams = new URLSearchParams(window.location.search);\n        return convertTo(urlParams.get(queryParam)) || initialValue;\n    });\n\n    const setValue = (value: T) => {\n        const urlParams = new URLSearchParams(window.location.search);\n        setRawValue(value);\n        if (!value || value === initialValue) {\n            urlParams.delete(queryParam);\n        } else {\n            const strValue = convertFrom(value);\n            if (strValue) {\n                urlParams.set(queryParam, strValue);\n            } else {\n                urlParams.delete(queryParam);\n            }\n        }\n\n        const queryString = urlParams.toString();\n\n        if (queryString.length) {\n            window.history.replaceState(null, '', `?${queryString}`);\n        } else {\n            window.history.replaceState(null, '', window.location.pathname);\n        }\n\n        window.dispatchEvent(new (window as any).CustomEvent('popstate'));\n    };\n\n    return [rawValue, setValue];\n};\n\nexport const useQueryStateBoolean = (initialValue: boolean, queryParam: string) => {\n    return useQueryStateT<boolean>(initialValue, queryParam, x => x === 'true', x => x === initialValue ? null : x.toString());\n};","import * as React from 'react';\nimport { isMobile } from './Layout';\nimport * as styles from '../layout/styles';\nimport { cx } from 'emotion';\n\nexport const SettingsCompactor : React.FC<{className?: string, alwaysVisible?: () => JSX.Element, mobileOnly?: () => JSX.Element, wideStyle?:React.CSSProperties}> = props => {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const alwaysVisible = props.alwaysVisible ? props.alwaysVisible() : null;\n\n    if(!isMobile()) {\n        return (\n            <div style={{display: 'flex', alignItems: 'center', ...props.wideStyle}} className={styles.horizontalSpace('.3rem')}>\n                {alwaysVisible}\n                {props.children}\n            </div>\n        );\n    }\n\n    const mobileOnly = props.mobileOnly ? props.mobileOnly() : null;\n\n    if(!expanded) {\n        return (\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\n                {alwaysVisible}\n                {mobileOnly}\n                <div className=\"button\" onClick={() => setExpanded(true)}>S</div>\n            </div>\n        );\n    }\n\n    return (\n        <div style={{display: 'flex', flexDirection: 'column'}} className={styles.verticalSpace('.3rem')}>\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\n                {alwaysVisible}\n                <div className=\"button\" onClick={() => setExpanded(false)}>S</div>\n            </div>\n            <div className={cx(styles.verticalSpace('.3rem'), props.className)}>\n                {props.children}\n            </div>\n        </div>\n    );\n};","import * as React from 'react';\nimport { useData } from '../model';\n\nexport const ContextTag: React.FC<{contextId: string|null}> = (props) => {\n    const {data} = useData();\n\n    if (!props.contextId) {\n        return null;\n    }\n\n    const context = data.contexts.find(p => p.id === props.contextId);\n\n    if (!context) {\n        return null;\n    }\n\n    return <div className=\"tag is-context\">{context.title}</div>;\n}","import * as React from 'react';\nimport { useData } from '../model';\nimport { ContextState, Context } from '../db/context';\nimport * as styles from '../layout/styles';\nimport * as ContextActions from '../lib/contextActions';\nimport { cx } from 'emotion';\nimport { getVariable } from '../layout/theme';\n\nexport const ContextBar: React.FC<{contextId: string|null, onChange: (contextId: string|null) => void, showTaskCount?: boolean}> = (props) => {\n    const {data} = useData();\n\n    const nestedContexts = ContextActions.getNestedContexts(data);\n\n    const renderListContext = (context: Context, contexts: ContextActions.NestedContexts, depth = 0) => {\n        if (context.state && context.state === ContextState.Inactive) {\n            return <React.Fragment key={context.id}></React.Fragment>;\n        }\n\n        return (\n            <React.Fragment key={context.id}>\n                <div onClick={() => props.onChange(context.id)} style={{paddingLeft: 10 + depth * 10, background: props.contextId === context.id ? getVariable('--active-context-background') : undefined}} className={cx('item', styles.hoverGlow, styles.cursorPointer)}>\n                    {context.title} {props.showTaskCount && <span style={{color: '#999'}}>{contexts.taskCounts[context.id]}</span>}\n                </div>\n                {contexts.nestedContexts[context.id] && contexts.nestedContexts[context.id].map(c => (\n                    renderListContext(c, contexts, depth + 1)\n                ))}\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <div style={{borderRight: '1px solid #666', width: 200}}>\n            <div className=\"list\">\n                <div className={cx('item', styles.hoverGlow, styles.cursorPointer)} style={{paddingLeft: 10, background: props.contextId === null ? getVariable('--active-context-background') : undefined}} onClick={() => props.onChange(null)}>All</div>\n                {nestedContexts.topContexts.map(i => renderListContext(i, nestedContexts))}\n            </div>\n        </div>\n    )\n}","import { Entity } from \"./entity\";\nimport moment from \"moment\";\n\nexport enum NoteMode {\n    Tree,\n    Markdown\n};\n\nexport interface Note extends Entity {\n    type: 'note',\n    mode: NoteMode;\n    title: string;\n    tags: string;\n    content: string;\n    contextId: string|null;\n    noteFor: string|null;\n    dailyDate: string|null;\n};\n\nexport interface HasNote extends Entity {\n    noteId: string|null;\n}\n\nexport function getNoteTitle(note: Pick<Note, 'dailyDate'|'title'|'content'>) {\n    if (note.dailyDate) {\n        return `Daily - ${moment(note.dailyDate).format('MMMM Do, YYYY')}`;\n    }\n\n    if (note.title && note.title.length) {\n        return note.title;\n    }\n\n    const parsedTitle = /# (.+)/.exec(note.content);\n\n    if (parsedTitle && parsedTitle.length > 1) {\n        return parsedTitle[1];\n    }\n\n    return '';\n}\n\nexport function getNoteTitleType(note: Note): 'daily'|'title'|'parsed'|'none' {\n    if (note.dailyDate) {\n        return 'daily';\n    }\n\n    if (note.title && note.title.length) {\n        return 'title';\n    }\n\n    const parsedTitle = /# (.+)/.exec(note.content);\n\n    if (parsedTitle && parsedTitle.length > 1) {\n        return 'parsed';\n    }\n\n    return 'none';\n}\n\nexport const noteReferenceRegex = /\\[\\[([^\\]]+)\\]\\]/ig;\n\nfunction escapeRegExp(str: string) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nexport function getNoteContextTitlePrefixRegExp(contextTitle: string) {\n    return new RegExp(`^${escapeRegExp(contextTitle)}/`, 'i')\n}\n\nexport function getNoteTitleMatchRegExp(reference: string) {\n    return new RegExp(`^${escapeRegExp(reference)}$`, 'i')\n}\n\nexport function getNoteReferenceMatchRegExp(reference: string) {\n    return new RegExp(`\\\\[\\\\[${escapeRegExp(reference)}\\\\]\\\\]`, 'i')\n}\n\nexport function getNoteAliasReferenceMatchRegExp(alias: string) {\n    return new RegExp(`\\\\B@${escapeRegExp(alias)}`, 'i')\n}\n\nexport function extractReferences(text: string) {\n    if(!text) {\n        return [];\n    }\n\n    const regex = /\\[\\[([^\\]]+)\\]\\]/ig;\n    const results = [];\n    for(const match of text.matchAll(regex)) {\n        results.push(match[1])\n    }\n\n    return results;\n}\n\nexport function extractAllReferences(notes: Note[]) {\n    const results: { [reference: string]: { title: string, contextId: string|null, updatedAt: Date } } = {};\n\n    function getKey(title: string, contextId: string|null) {\n        return `${contextId}-${title.toLowerCase()}`\n    }\n\n    const existing = new Set<string>(notes.filter(n => n.title).map(n => getKey(n.title, n.contextId)));\n\n    for(const note of notes) {\n        const references = extractReferences(note.content);\n\n        for(const reference of references) {\n            const key = getKey(reference, note.contextId);\n            \n            if (existing.has(key)) {\n                continue;\n            }\n            \n            const existingResult = results[key];\n\n            if (existingResult && existingResult.updatedAt > new Date(note.updatedAt)) {\n                continue;\n            }\n\n            results[key] = {\n                title: reference,\n                contextId: note.contextId,\n                updatedAt: new Date(note.updatedAt)\n            };\n        }\n    }\n\n    return Object.values(results);\n}","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as styles from '../layout/styles';\nimport { useData } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport * as ContextActions from '../lib/contextActions';\nimport { isMobile } from '../components/Layout';\nimport { Task, TaskState, VirtualTask } from '../db/task';\nimport { ProjectState, Project } from '../db/project';\nimport moment from 'moment';\nimport { useQueryState } from '../lib/UseQueryState';\nimport { SettingsCompactor } from '../components/SettingsCompactor';\nimport { ContextTag } from '../components/ContextTag';\nimport { ContextBar } from '../components/ContextBar';\nimport { cx } from 'emotion';\nimport _ from 'lodash';\nimport { getVariable } from '../layout/theme';\nimport { Api } from '../bridge/HostBridge';\n\ninterface Perspective {\n    id: string;\n    title: string;\n    groupedProject: boolean;\n    groupedContext: boolean;\n}\n\nlet perspectives: Perspective[] = [\n    { id: '1', title: 'All', groupedProject: false, groupedContext: false },\n    { id: '2', title: 'Grouped', groupedProject: false, groupedContext: true },\n    { id: '3', title: 'Grouped Project', groupedProject: true, groupedContext: false }\n]\n\nlet defaultPerspective = perspectives[1];\n\ninterface TaskFilters {\n    showCompleted: boolean;\n    showContextBar: boolean;\n    includeNested: boolean;\n    showDeferred: boolean;\n    showIncubated: boolean;\n}\n\nexport const TaskPage: React.FC<{}> = (props) => {\n    const {data, refresh} = useData();\n    const [text, setText] = React.useState('');\n    const [options, setOptions] = React.useState<TaskFilters>({\n        showCompleted: false,\n        showDeferred: false,\n        showIncubated: false,\n        showContextBar: isMobile() ? false : true,\n        includeNested: true,\n    });\n\n    const [contextId, setContextId] = useQueryState(null, 'context');\n    const [projectId, setProjectId] = useQueryState(null, 'project');\n    const [perspectiveId, setPerspectiveId] = useQueryState('2', 'perspective');\n\n    const onKeyPress = async (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter') {\n            await Api.saveTask({\n                title: text,\n                contextId: contextId,\n                projectId: projectId,\n                content: null,\n                state: TaskState.Active,\n                stateChangedAt: new Date().toISOString(),\n                noteId: null,\n            } as Task);\n\n            setText('');\n\n            refresh();\n        }\n    }\n\n    const onCompleteChange = async (task: Task, e: React.ChangeEvent<HTMLInputElement>) => {\n        task.state = task.state === TaskState.Completed ? TaskState.Active : TaskState.Completed;\n        task.stateChangedAt = new Date().toISOString();\n        await Api.saveTask(task);\n        refresh();\n    }\n\n    const renderProject = (task: Task) => {\n        const project = data.projects.find(p => p.id === task.projectId);\n\n        if (project) {\n            return <div className=\"tag is-info\">{project.title}</div>;\n        }\n\n        return null;\n    };\n\n    const renderDeferred = (task: Task) => {\n        if (task.deferredUntil && new Date(task.deferredUntil) > new Date()) {\n            return <div className=\"tag is-primary\" title={`${moment(task.deferredUntil).format('YYYY-MM-DD')}`}>deferred {moment(task.deferredUntil).fromNow(true)}</div>;\n        }\n        return null;\n    };\n\n    const renderNote = (task: Task) => {\n        if (task.noteId) {\n            return <div className=\"tag is-primary\" >N</div>;\n        }\n        return null;\n    };\n\n    const renderTitle = (title: string) => {\n        const pattern = /(https?:\\/\\/[^\\s]+)/;\n        return title.split(pattern).map((c, i) => {\n            if (c.match(pattern)) {\n                let title = c.replace(/https?:\\/\\//, '');\n                title = title.replace(/\\/.*/, '/...');\n                return <a key={i} href={c} onClick={e => { e.stopPropagation(); }} target=\"_blank\"  rel=\"noopener noreferrer\" className=\"button is-small is-link\" style={{display: 'inline-block', marginLeft: '5px', marginRight: '5px'}}>{title}</a>;\n            }\n\n            return <span key={i}>{c}</span>;\n        });\n    };\n\n    const filterTasks = (complete: boolean, contexts: ContextActions.NestedContexts) => {\n        let tasks = data.tasks;\n\n        if (complete) {\n            tasks = tasks.filter(t => t.state === TaskState.Completed)\n        } else {\n            tasks = tasks.filter(t => t.state !== TaskState.Completed)\n        }\n\n        if (projectId) {\n            tasks = tasks.filter(t => t.projectId === projectId);\n        }\n\n        if (!options.showDeferred) {\n            tasks = tasks.filter(t => t.deferredUntil == null || new Date(t.deferredUntil) < new Date());\n        }\n\n        if (!options.showIncubated) {\n            tasks = tasks.filter(t => t.state !== TaskState.Incubated);\n\n            const incubatedProjectIds = data.projects.filter(p => p.state === ProjectState.Incubated).map(p => p.id);\n            tasks = tasks.filter(t => !t.projectId || incubatedProjectIds.indexOf(t.projectId) === -1);\n        }\n\n        if (contextId) {\n            const contextIds = ContextActions.getFilteredContextIds(contextId, data);\n            tasks = tasks.filter(t => t.contextId && contextIds.indexOf(t.contextId) !== -1);\n        }\n\n        return tasks.sort((a, b) =>  b.createdAt! < a.createdAt! ?  -1 : b.createdAt! > a.createdAt! ? 1 : 0);\n    }\n\n    const renderTask = (task: Task, skipProjectContext = false) => {\n        let source: string|null = null;\n        if (window.location.search.length) {\n            const urlParams = new URLSearchParams(window.location.search);\n            source = `?source=${encodeURIComponent(`${window.location.pathname}?${urlParams.toString()}`)}`\n        }\n\n        return (\n            <NavLink key={task.id} to={`/tasks/${task.id}${source ? source : ''}`} className={cx('item', 'task', styles.hoverGlow)}>\n                <div className=\"task-checkbox\">\n                    <input type=\"checkbox\" style={{display: 'block', padding: 10}} checked={task.state === TaskState.Completed} onClick={e => e.preventDefault()} onChange={e => onCompleteChange(task, e)}/>\n                </div>\n                <div className=\"task-title\" style={{color: task.state === TaskState.Incubated ? '#999' : undefined}}>\n                    {task.state === TaskState.Completed ? <span style={{textDecoration: 'line-through'}}>{renderTitle(task.title)}</span> : renderTitle(task.title)}\n                    {task.state === TaskState.Incubated ? <span> [Incubated]</span> : null}\n                </div>\n                <div className=\"task-details\">\n                    <div className=\"tags\">\n                        {renderNote(task)}\n                        {renderDeferred(task)}\n                        {!skipProjectContext && <ContextTag contextId={task.contextId} /> }\n                        {!skipProjectContext && renderProject(task)}\n                    </div>\n                </div>\n            </NavLink>\n        );\n    };\n\n    const renderVirtualTask = (task: VirtualTask, skipProjectContext = false) => {\n        let source: string|null = null;\n        if (window.location.search.length) {\n            const urlParams = new URLSearchParams(window.location.search);\n            source = `?source=${encodeURIComponent(`${window.location.pathname}?${urlParams.toString()}`)}`\n        }\n\n        return (\n            <NavLink key={task.noteId} to={`/notes/${task.noteId}${source ? source : ''}`} className={cx('item', 'task', styles.hoverGlow)}>\n                <div className=\"task-checkbox\">\n                    <input type=\"checkbox\" style={{display: 'block', padding: 10}} checked={task.state === TaskState.Completed} onClick={e => e.preventDefault()} readOnly={true} />\n                </div>\n                <div className=\"task-title\" style={{color: task.state === TaskState.Incubated ? '#999' : undefined}}>\n                    {task.state === TaskState.Completed ? <span style={{textDecoration: 'line-through'}}>{renderTitle(task.title)}</span> : renderTitle(task.title)}\n                    {task.state === TaskState.Incubated ? <span> [Incubated]</span> : null}\n                </div>\n                <div className=\"task-details\">\n                    <div className=\"tags\">\n                        {/* {!skipProjectContext && <ContextTag contextId={task.contextId} /> }\n                        {!skipProjectContext && renderProject(task)} */}\n                    </div>\n                </div>\n            </NavLink>\n        );\n    };\n\n\n    const perspective = perspectives.find(x => x.id === perspectiveId) || defaultPerspective;\n    const nestedContexts = ContextActions.getNestedContexts(data);\n\n    let taskBlock: JSX.Element[] = [];\n\n    if (perspective.groupedContext) {\n        const filteredContextIds: (string|null)[] = ContextActions.getFilteredContextIds(contextId, data);\n\n        if (!contextId) {\n            filteredContextIds.push(null);\n        }\n\n        for (const contextId of filteredContextIds) {\n            const context = data.contexts.find(p => p.id === contextId);\n\n            let tasks = filterTasks(false, nestedContexts);\n\n            if (contextId) {\n                if (!context) {\n                    continue;\n                }\n\n                tasks = tasks.filter(t => t.contextId === contextId);\n\n                if (!tasks.length) {\n                    continue;\n                }\n\n                taskBlock.push(\n                    <div key={contextId} style={{display: 'flex', justifyContent: 'space-between', padding: '.6rem', background: getVariable('--task-context-background'), cursor: 'pointer'}} onClick={() => setContextId(context.id)}>\n                        {context.title}\n                        <NavLink className=\"button small\" to={`/contexts/${context.id}`}>Edit</NavLink>\n                    </div>\n                )\n            } else {\n                tasks = tasks.filter(t => t.contextId === contextId);\n\n                if (!tasks.length) {\n                    continue;\n                }\n\n                taskBlock.push(<div key={'no-context'} style={{padding: '.6rem', background: getVariable('--task-context-background')}}>No Context</div>)\n            }\n\n            let stateOrder = [ProjectState.Active, ProjectState.Incubated, ProjectState.Completed, ProjectState.Dropped];\n    \n            const emptyActiveProjects: Project[] = [];\n    \n            let filteredProjects = data.projects;\n    \n            if (projectId !== null) {\n                filteredProjects = filteredProjects.filter(p => p.id === projectId);\n            }\n    \n            filteredProjects.sort((a, b) => stateOrder.indexOf(a.state) - stateOrder.indexOf(b.state)).forEach(p => {\n                let projectTasks = tasks.filter(t => t.projectId === p.id);\n    \n                if (!projectTasks.length) {\n                    if (p.state === ProjectState.Active) {\n                        if (contextId) {\n                            if (p.contextId && filteredContextIds.indexOf(p.contextId) !== -1) {\n                                emptyActiveProjects.push(p);\n                            }\n                        } else {\n                            emptyActiveProjects.push(p);\n                        }\n                    }\n                    return;\n                }\n    \n                taskBlock.push(\n                    <React.Fragment key={`p-${p.id}`}>\n                        <div className=\"header link\" onClick={() => { setProjectId(p.id); setContextId(p.contextId); }} style={{background: getVariable('--task-project-background')}}>\n                            {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''}\n                            <div style={{display: 'flex'}}>\n                                <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\n                            </div>\n                        </div>\n                        {projectTasks.map(t => renderTask(t, true))}\n                    </React.Fragment>\n                );\n            });\n    \n            const noProjectTasks = tasks.filter(t => t.projectId === null);\n    \n            if (noProjectTasks.length) {\n                taskBlock.push(\n                    <React.Fragment key={`no-p-${contextId}`}>\n                        <div className=\"header\" style={{background: getVariable('--task-project-background')}}>No Project</div>\n                        {noProjectTasks.map(t => renderTask(t, true))}\n                    </React.Fragment>\n                );\n            }\n    \n            for(const p of emptyActiveProjects) {\n                if (p.contextId !== contextId) {\n                    continue;\n                }\n\n                taskBlock.push(\n                    <div key={p.id} className=\"header link\" style={{background: getVariable('--task-project-background')}} onClick={() => { setProjectId(p.id); setContextId(p.contextId); }}>\n                        {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''} [Empty]\n                        <div style={{display: 'flex'}}>\n                            <div className=\"tags\">\n                                <ContextTag contextId={p.contextId} />\n                            </div>\n                            <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\n                        </div>\n                    </div>\n                );\n            }\n        }\n\n        if (options.showCompleted) {\n            taskBlock.push(\n                <React.Fragment key=\"completed\">\n                    <div className=\"header\">Completed</div>\n                    {_.orderBy(filterTasks(true, nestedContexts), x => x.stateChangedAt, 'desc').map(t => renderTask(t))}\n                </React.Fragment>\n            );\n        }\n\n    } else if (perspective.groupedProject) {\n        let tasks = filterTasks(false, nestedContexts);\n\n        let stateOrder = [ProjectState.Active, ProjectState.Incubated, ProjectState.Completed, ProjectState.Dropped];\n\n        const emptyActiveProjects: Project[] = [];\n\n        let filteredProjects = data.projects;\n\n        if (projectId !== null) {\n            filteredProjects = filteredProjects.filter(p => p.id === projectId);\n        }\n\n        const filteredContextIds = ContextActions.getFilteredContextIds(contextId, data);\n\n        filteredProjects.sort((a, b) => stateOrder.indexOf(a.state) - stateOrder.indexOf(b.state)).forEach(p => {\n            let projectTasks = tasks.filter(t => t.projectId === p.id);\n\n            if (!projectTasks.length) {\n                if (p.state === ProjectState.Active) {\n                    if (contextId) {\n                        if (p.contextId && filteredContextIds.indexOf(p.contextId) !== -1) {\n                            emptyActiveProjects.push(p);\n                        }\n                    } else {\n                        emptyActiveProjects.push(p);\n                    }\n                }\n                return;\n            }\n\n            taskBlock.push(\n                <React.Fragment key={`p-${p.id}`}>\n                    <div className=\"header link\" onClick={() => { setProjectId(p.id); setContextId(p.contextId); }}>\n                        {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''}\n                        <div style={{display: 'flex'}}>\n                            <div className=\"tags\">\n                                <ContextTag contextId={p.contextId} />\n                            </div>\n                            <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\n                        </div>\n                    </div>\n                    {projectTasks.map(t => renderTask(t))}\n                </React.Fragment>\n            );\n        });\n\n        const noProjectTasks = tasks.filter(t => t.projectId === null);\n\n        if (noProjectTasks.length) {\n            taskBlock.push(\n                <React.Fragment key=\"no-p\">\n                    <div className=\"header\">No Project</div>\n                    {noProjectTasks.map(t => renderTask(t))}\n                </React.Fragment>\n            );\n        }\n\n        for(const p of emptyActiveProjects) {\n            taskBlock.push(\n                <React.Fragment key={`p-${p.id}`}>\n                    <div className=\"header link\" onClick={() => { setProjectId(p.id); setContextId(p.contextId); }}>\n                        {p.title} {p.state !== ProjectState.Active ? `[${p.state}]` : ''} [Empty]\n                        <div style={{display: 'flex'}}>\n                            <div className=\"tags\">\n                                <ContextTag contextId={p.contextId} />\n                            </div>\n                            <NavLink className=\"button small\" to={`/projects/${p.id}`}>Edit</NavLink>\n                        </div>\n                    </div>\n                </React.Fragment>\n            );\n        }\n\n        if (options.showCompleted) {\n            taskBlock.push(\n                <React.Fragment key=\"completed\">\n                    <div className=\"header\">Completed</div>\n                    {filterTasks(true, nestedContexts).map(t => renderTask(t))}\n                </React.Fragment>\n            );\n        }\n    } else {\n        taskBlock.push(\n            <React.Fragment key=\"tasks\">\n                {filterTasks(false, nestedContexts).map(t => renderTask(t))}\n                {options.showCompleted && <>\n                    <div className=\"header\">Completed</div>\n                    {filterTasks(true, nestedContexts).map(t => renderTask(t))}\n                </>}\n            </React.Fragment>\n        );\n    }\n\n    let {virtualTasks} = data;\n\n    if (!options.showCompleted) {\n        virtualTasks = virtualTasks.filter(t => t.state === TaskState.Active);\n    }\n\n    if (virtualTasks.length) {\n        taskBlock.push(\n            <React.Fragment key=\"virtualtasks\">\n                <div className=\"header\" style={{background: getVariable('--task-context-background')}}>Virtual Tasks</div>\n                {virtualTasks.map(t => renderVirtualTask(t))}\n            </React.Fragment>\n        );\n    }\n\n\n    return (\n        <div style={{display: 'flex', height: '100%'}}>\n            {options.showContextBar && <ContextBar contextId={contextId} onChange={setContextId} showTaskCount={true} />}\n            <div style={{width: '100%'}}>\n                <ToolSection>\n                    <SettingsCompactor alwaysVisible={() => (\n                        <div className=\"button\" onClick={() => { setContextId(null); setProjectId(null); }}>R</div>\n                    )} mobileOnly={() => (\n                        <div className=\"button\" style={{marginLeft: 'auto', marginRight: 8}} onClick={() => setOptions({ ...options, showContextBar: !options.showContextBar })}>C</div>\n                    )}>\n                        <select style={{padding: '0.3rem', display: 'block'}} value={contextId || ''} onChange={e => setContextId(e.target.value === '' ? null : e.target.value) }>\n                            <option value=\"\">All contexts</option>\n                            {data.contexts.map(c => (\n                                <option key={c.id} value={c.id}>{c.title}</option>\n                            ))}\n                        </select>\n                        <select style={{padding: '0.3rem', display: 'block'}} value={projectId || ''} onChange={e => setProjectId(e.target.value === '' ? null : e.target.value)}>\n                            <option value=\"\">All projects</option>\n                            {data.projects.filter(c => c.state === ProjectState.Active).map(c => (\n                                <option key={c.id} value={c.id}>{c.title}</option>\n                            ))}\n                        </select>\n                        <select style={{padding: '0.3rem', display: 'block'}} value={perspectiveId || ''} onChange={e => setPerspectiveId(e.target.value === '' ? null : e.target.value)}>\n                            <option value=\"\">Select Perspective</option>\n                            {perspectives.map(c => (\n                                <option key={c.id} value={c.id}>{c.title}</option>\n                            ))}\n                        </select>\n                        <div>\n                            <input id=\"completed-box\" type=\"checkbox\" checked={options.showCompleted} onChange={() => setOptions({ ...options, showCompleted: !options.showCompleted })} />\n                            <label htmlFor=\"completed-box\">Show completed</label>\n                        </div>\n                        <div>\n                            <input id=\"deferred-box\" type=\"checkbox\" checked={options.showDeferred} onChange={() => setOptions({ ...options, showDeferred: !options.showDeferred })} />\n                            <label htmlFor=\"deferred-box\">Show deferred</label>\n                        </div>\n                        <div>\n                            <input id=\"incubated-box\" type=\"checkbox\" checked={options.showIncubated} onChange={() => setOptions({ ...options, showIncubated: !options.showIncubated })} />\n                            <label htmlFor=\"incubated-box\">Show incubated</label>\n                        </div>\n                        <div>\n                            <input id=\"context-box\" type=\"checkbox\" checked={options.showContextBar} onChange={() => setOptions({ ...options, showContextBar: !options.showContextBar })} />\n                            <label htmlFor=\"context-box\">Show context bar</label>\n                        </div>\n                        <div>\n                            <input id=\"include-nested-box\" type=\"checkbox\" checked={options.includeNested} onChange={() => setOptions({ ...options, includeNested: !options.includeNested })} />\n                            <label htmlFor=\"include-nested-box\">Include nested contexts</label>\n                        </div>\n                    </SettingsCompactor>\n                    <input type=\"text\" className=\"input is-large is-wide\" placeholder=\"Add task...\" value={text} onChange={e => setText(e.target.value)} onKeyPress={onKeyPress} />\n                </ToolSection>\n                <div className=\"list\">\n                    {taskBlock}\n                </div>\n            </div>\n        </div>\n    );\n};\n","import { Entity } from \"./entity\";\nimport { HasNote, Note } from \"./note\";\n\nexport interface Person extends Entity, HasNote {\n    type: 'person';\n    name: string;\n    alias: string|null;\n    birthday: string|null;\n}\n\nexport const mentionRegex = /(?:^|\\s)(@[^\\s()[\\].,!:'/\"=]+)/g;\n\nexport function convertNameToAlias(name: string) {\n    if(!name) {\n        return null;\n    }\n\n    return name.toLowerCase().replace(/ /g, '_');\n}\n\nexport function convertAliasToName(alias: string) {\n    if (alias[0] === '@') {\n        alias = alias.substring(1);\n    }\n\n    alias = alias[0].toUpperCase() + alias.substring(1);\n    return alias.replace( /([-_]\\w)/g, g => ` ${g[1].toUpperCase()}`)\n}\n\nexport function getAlias(person: Person) {\n    return `${person.alias || convertNameToAlias(person.name)}`;\n}\n\nexport function extractPersonReferences(text: string) {\n    if(!text) {\n        return [];\n    }\n\n    const results = [];\n    for(const match of text.matchAll(mentionRegex)) {\n        results.push(match[1].substring(1))\n    }\n\n    return results;\n}\n\nexport function extractAllPersonReferences(notes: Note[]) {\n    const results = new Set<string>();\n\n    for(const note of notes) {\n        const references = extractPersonReferences(note.content);\n\n        for(const reference of references) {\n            results.add(reference);\n        }\n    }\n\n    return results;\n}\n\nexport function getAllVirtualPersonAliases(people: Person[], notes: Note[]) {\n    const refs = extractAllPersonReferences(notes);\n\n    for(const person of people) {\n        refs.delete(getAlias(person))\n    }\n\n    return Array.from(refs);    \n}\n","import * as React from 'react';\nimport marked from 'marked';\nimport '../github-markdown.css';\nimport { useData } from '../model';\nimport { getNoteTitleMatchRegExp, getNoteContextTitlePrefixRegExp, noteReferenceRegex } from '../db/note';\nimport {useHistory} from 'react-router-dom';\nimport { mentionRegex, getAlias, convertAliasToName } from '../db/person';\n\n\nexport const MarkedViewer: React.FC<{ markdown: string; contextId: string|null }> = props => {\n    const history = useHistory();\n    const {data} = useData();\n\n    (window as any).lifeNavigate = function(url: string) {\n        history.push(url);\n        return false;\n    };\n\n    let markdown = props.markdown.replace(noteReferenceRegex, (_, group1) => {\n        let matchContextId = props.contextId;\n        let matchTitle = group1;\n\n        const prefixContext = data.contexts.find(x => getNoteContextTitlePrefixRegExp(x.title).test(group1));\n        if (prefixContext) {\n            matchTitle = matchTitle.substring(prefixContext.title.length + 1);\n            matchContextId = prefixContext.id;\n        }\n\n        const referenceRegExp = getNoteTitleMatchRegExp(matchTitle);\n        const note = data.notes.find(x => x.contextId === matchContextId && referenceRegExp.test(x.title));\n\n        if (note) {\n            const url = `/notes/${note.id}`;\n            return `<span style=\"color: #444\">[[ </span><a onclick=\"return lifeNavigate('${url}')\" href=\"${url}\">${group1}</a><span style=\"color: #444\"> ]]</span>`;\n        }\n\n        const url = `/notes/virtual?title=${encodeURIComponent(group1)}${props.contextId ? `&context=${props.contextId}` : ''}&source=${encodeURIComponent(`${window.location.pathname}`)}`;\n        return `<span style=\"color: #444\">[[ </span><a onclick=\"return lifeNavigate('${url}')\" href=\"${url}\">${group1}</a><span style=\"color: #444\"> ? ]]</span>`;\n    });\n\n    markdown = markdown.replace(mentionRegex, (match, group1) => {\n        const extra = match.replace(group1, '');\n        const person = data.people.find(x => `@${getAlias(x)}` === group1);\n\n        if (person) {\n            const url = `/people/${person.id}?source=${encodeURIComponent(`${window.location.pathname}`)}`;\n            return `${extra}<a onclick=\"return lifeNavigate('${url}')\" href=\"${url}\" style=\"background: #333; padding: 0px 4px; border-radius: 4px\">${person.name}</a>`;\n        }\n\n        const url = `/people/virtual?alias=${encodeURIComponent(group1)}&source=${encodeURIComponent(`${window.location.pathname}`)}`;\n        return `${extra}<a onclick=\"return lifeNavigate('${url}')\" href=\"${url}\" style=\"background: #333; padding: 0px 4px; border-radius: 4px\">${convertAliasToName(group1)}</a><span style=\"color: #444\"> ?</span>`;\n    });\n\n    const html = marked(markdown);\n    return (\n        <div className=\"marked-viewer note markdown-body\" dangerouslySetInnerHTML={{ __html: html }}></div>\n    );\n};","import * as React from 'react';\nimport { MarkedViewer } from './MarkedViewer';\nimport * as styles from '../layout/styles';\nimport { NoteMode } from '../db/note';\n\nimport AceEditor from \"react-ace\";\nimport {textCompleter, snippetCompleter, keyWordCompleter} from \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/mode-markdown\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/theme-textmate\";\nimport { Data } from '../model';\nimport { cx } from 'emotion';\nimport { isDark } from '../layout/theme';\n\nexport enum SplitMode {\n    Split,\n    Editor,\n    Preview\n}\n\nexport const NoteModeSelector: React.SFC<{mode: NoteMode, onModeChange: (mode: NoteMode) => void}> = props => (\n    <div className={cx(styles.horizontalSpace('.5rem'))}>\n        <button className=\"button\" style={{background: props.mode !== NoteMode.Markdown ? '#444' : undefined}} onClick={() => props.onModeChange(NoteMode.Markdown)}>Markdown</button>\n        <button className=\"button\" style={{background: props.mode !== NoteMode.Tree ? '#444' : undefined}} onClick={() => props.onModeChange(NoteMode.Tree)}>Tree</button>\n    </div>\n);\n\n\nexport const SplitModeSelector: React.SFC<{mode: SplitMode, onModeChange: (mode: SplitMode) => void}> = props => (\n    <div className={cx(styles.horizontalSpace('.5rem'))}>\n        <button className=\"button\" style={{background: props.mode !== SplitMode.Split ? '#444' : undefined}} onClick={() => props.onModeChange(SplitMode.Split)}>Split</button>\n        <button className=\"button\" style={{background: props.mode !== SplitMode.Editor ? '#444' : undefined}} onClick={() => props.onModeChange(SplitMode.Editor)}>Editor</button>\n        <button className=\"button\" style={{background: props.mode !== SplitMode.Preview ? '#444' : undefined}} onClick={() => props.onModeChange(SplitMode.Preview)}>Preview</button>\n    </div>\n);\n\nexport class SimpleSplitEditor extends React.Component<{ text: string, onTextChanged: (text: string) => void, expand?: boolean, mode: SplitMode, data: Data, contextId: string|null }, {}> {\n\n    render() {\n        const style: React.CSSProperties = {};\n\n        if(this.props.expand) {\n            style.width = '100%';\n            style.height = '100%';\n            style.zIndex = 100;\n            style.display = 'flex';\n            style.maxHeight = '100%';\n        }\n\n        const border = '1px solid #666';\n        const components = [];\n\n        let textAreaStyle: React.CSSProperties = {\n            flexGrow: 1, \n            minWidth: '50%', \n            borderTop: border, \n            height: '100%'\n        };\n\n        let markedStyle: React.CSSProperties = {\n            flexGrow: 1, \n            minWidth: '50%', \n            background: 'transparent', \n            padding: '1rem', \n            borderTop: border\n        };\n\n        if (this.props.mode === SplitMode.Split) {\n            textAreaStyle.borderRight = border;\n            markedStyle.overflowY = 'scroll';\n        }\n\n        if (this.props.mode === SplitMode.Editor || this.props.mode === SplitMode.Split) {\n            components.push(\n                    <AceEditor \n                        key=\"editor\"\n                        value={this.props.text} \n                        fontSize={18}\n                        style={textAreaStyle}\n                        onChange={e => this.props.onTextChanged(e)} \n                        mode=\"markdown\"\n                        theme={isDark() ? \"monokai\" : 'textmate'}\n                        showGutter={false} \n                        showPrintMargin={false}\n                        wrapEnabled={true}\n                        enableBasicAutocompletion={[snippetCompleter, textCompleter, keyWordCompleter] as any}\n                        enableLiveAutocompletion={true}\n                        enableSnippets={true}\n                    />\n            );\n        }\n\n        if (this.props.mode === SplitMode.Preview || this.props.mode === SplitMode.Split) {\n            components.push(\n                <div key=\"2\" style={markedStyle}>\n                    <MarkedViewer markdown={this.props.text} contextId={this.props.contextId} />\n                </div>\n            );\n        }\n\n        return (\n            <div style={style}>\n                {components}\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { useState, useRef } from 'react';\nimport { horizontalSpace, hoverGlow } from '../layout/styles';\nimport { MarkedViewer } from './MarkedViewer';\nimport AceEditor, { ICommand } from \"react-ace\";\nimport copy from 'copy-to-clipboard';\nimport {textCompleter, snippetCompleter, keyWordCompleter} from \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/mode-markdown\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/theme-textmate\";\nimport ReactAce from 'react-ace/lib/ace';\nimport { Loader } from './Loader';\nimport { extractReferences } from '../db/note';\nimport { useData } from '../model';\nimport { cx } from 'emotion';\nimport { getAlias, getAllVirtualPersonAliases } from '../db/person';\nimport { isDark, getVariable } from '../layout/theme';\n\nexport interface Node {\n    text: string;\n    nodes: Node[];\n}\n\nexport const TreeEditor: React.FC<{text: string, onTextChanged: (text: string) => void, contextId: string|null}> = (props) => {\n    const {data} = useData();\n    const [invalid] = useState(() => {\n        if (!props.text || props.text === '') {\n            return false;\n        }\n        try {\n            JSON.parse(props.text);\n            return false;\n        } catch {\n            return true;\n        }\n    })\n\n    // const [mouseDown, setMouseDown] = useState<Node|null>();\n    // const [mouseOver, setMouseOver] = useState<Node|null>();\n    const [selectMode, setSelectMode] = useState(false);\n    const [selectedNodes, setSelectedNodes] = useState<Node[]>([]);\n\n    const [nodes, setNodes] = useState<Node[]>(() => {\n        if (invalid) {\n            return [];\n        }\n\n        if (!props.text || props.text === '') {\n            return [\n                { text: '', nodes: [] }\n            ];\n        }\n\n        return JSON.parse(props.text);\n    });\n\n    const inputRef = useRef<ReactAce>(null);\n    const [active, setActive] = useState(nodes[0]);\n\n    const [noteTitles, setNoteTitles] = React.useState<{ title: string; context: string|null }[]>();\n\n    React.useEffect(() => {\n        const noteCompletions  = data.notes.map(n => {\n            let titles = extractReferences(n.content);\n\n            if (n.title && n.title.length) {\n                titles.push(n.title);\n            }\n\n            const context = data.contexts.find(c => c.id === n.contextId)?.title || null;\n\n            return titles.map(t => ({ title: t, context }));\n        }).flat().filter(t => t.title !== null);\n\n        setNoteTitles(noteCompletions);\n    }, [props.contextId, data.contexts, data.notes]);\n\n    const [peopleAliases, setPeopleAliases] = React.useState<string[]>();\n\n    React.useEffect(() => {\n        const aliases  = data.people.map(n => getAlias(n))\n            .concat(getAllVirtualPersonAliases(data.people, data.notes))\n            .filter(t => t !== null);\n            \n        setPeopleAliases(aliases);\n    }, [data.people, data.notes]);\n\n    if (invalid) {\n        return (\n            <div>Invalid tree content (not valid JSON).</div>\n        )\n    }\n\n    if (!noteTitles || !peopleAliases) {\n        return <Loader />;\n    }\n\n    const updateText = () => {\n        props.onTextChanged(JSON.stringify(nodes));\n    }\n\n    const onInputChanged = (node: Node, value: string) => {\n        node.text = value;\n        setNodes([...nodes]);\n        updateText();\n    };\n\n    const getParentNode = (targetNode: Node, searchNodes: Node[] = nodes, parentNode: Node|null = null): Node|null => {\n      for(const node of searchNodes) {\n          if (node === targetNode) {\n              return parentNode;\n          }\n\n          const childResult = getParentNode(targetNode, node.nodes, node);\n          if (childResult) {\n              return childResult;\n          }\n      }\n\n      return null;\n    };\n\n    const preorderTraversal = () => {\n        const result: Node[] = [];\n        const stack = [...nodes].reverse();\n\n        while(stack.length) {\n            let node = stack.pop();\n\n            if (!node) {\n                return result;\n            }\n\n            result.push(node);\n\n            for(let childNode of [...node.nodes].reverse()) {\n                stack.push(childNode);\n            }\n\n        }\n\n        return result;\n    };\n\n    \n    function visitNodes(visit: (n: Node, depth: number, index: number) => void) {\n        const stack = nodes.map((node, index) => ({ node, depth: 0, index })).reverse();\n\n        while(stack.length) {\n            let next = stack.pop();\n\n            if (!next) {\n                return;\n            }\n\n            visit(next.node, next.depth, next.index)\n\n            const depth = next.depth;\n            for(const childNode of next.node.nodes.map((node, index) => ({ node, depth: depth + 1, index })).reverse()) {\n                stack.push(childNode);\n            }\n        }\n    }\n\n    const insertNode = (afterNode: Node, above = false) => {\n        const parentNode = getParentNode(afterNode);\n        const searchNodes = parentNode ? parentNode.nodes : nodes;\n        const nodeIndex = searchNodes.findIndex(x => x === afterNode);\n        const node: Node = { text: '', nodes: [] };\n        searchNodes.splice(nodeIndex + (above ? 0 : 1), 0, node);\n        setNodes([...nodes]);\n        return node;\n    };\n\n    const removeNode = (node: Node) => {\n        const parentNode = getParentNode(node);\n        const searchNodes = parentNode ? parentNode.nodes : nodes;\n        const nodeIndex = searchNodes.findIndex(x => x === node);\n        searchNodes.splice(nodeIndex, 1);\n        setNodes([...nodes]);\n        return node;\n    };\n\n    const removeNodeIfEmpty = (node: Node) => {\n        if (node.text.length || node.nodes.length) {\n            return;\n        }\n        removeNode(node);\n    };\n\n    const indentNode = (node: Node) => {\n        const parentNode = getParentNode(node);\n        const searchNodes = parentNode ? parentNode.nodes : nodes;\n        const nodeIndex = searchNodes.findIndex(x => x === node);\n\n        if (nodeIndex === 0) {\n            return;\n        } else {\n            searchNodes.splice(nodeIndex, 1);\n            searchNodes[nodeIndex - 1].nodes.push(node);\n            setNodes([...nodes]);\n        }\n    };\n\n    const unindentNode = (node: Node) => {\n        const parentNode = getParentNode(node);\n\n        if(parentNode === null) {\n            return;\n        }\n\n        const parentParentNode = getParentNode(parentNode);\n        const targetNodes = parentParentNode ? parentParentNode.nodes : nodes;\n        const parentNodeIndex = targetNodes.findIndex(x => x === parentNode);\n        targetNodes.splice(parentNodeIndex + 1, 0, node);\n        const nodeIndex = parentNode.nodes.findIndex(x => x === node);\n        parentNode.nodes.splice(nodeIndex, 1);\n\n        setNodes([...nodes]);\n    };\n\n    const commands: ICommand[] = [\n        { name: 'indent', bindKey: { win: 'tab', mac: 'tab' }, exec: () => {\n            setTimeout(() => {\n                indentNode(active);\n            }, 0);\n            return true;\n        }},\n        { name: 'unindent', bindKey: { win: 'shift+tab', mac: 'shift+tab' }, exec: () => {\n            setTimeout(() => {\n                unindentNode(active);\n            }, 0);\n            return true;\n        }},\n        { name: 'enter', bindKey: { win: 'enter', mac: 'enter' }, exec: () => {\n            if (active.text === '') {\n                return;\n            }\n            const above = inputRef.current && inputRef.current.editor.getCursorPosition().row === 0 && inputRef.current.editor.getCursorPosition().column === 0;\n            setTimeout(() => {\n                const newNode = insertNode(active, !!above);\n                setActive(newNode);\n            }, 0);\n            return true;\n        }},\n        { name: 'up', bindKey: { win: 'up', mac: 'up' }, exec: () => {\n            const onFirstRow = inputRef.current && inputRef.current.editor.getCursorPosition().row === 0;\n            if (!onFirstRow) {\n                return false;\n            }\n            const searchNodes = preorderTraversal();\n            let activeIndex = searchNodes.findIndex(x => x === active);\n            activeIndex = Math.max(0, activeIndex - 1);\n            setTimeout(() => {\n                setActive(searchNodes[activeIndex]);\n                removeNodeIfEmpty(active);\n            }, 0);\n            return true;\n        }},\n        { name: 'down', bindKey: { win: 'down', mac: 'down' }, exec: () => {\n            const onLastRow = inputRef.current && inputRef.current.editor.getCursorPosition().row + 1 === inputRef.current.editor.getSession().doc.getLength();\n            if(!onLastRow) {\n                return false;\n            }\n            const searchNodes = preorderTraversal();\n            let activeIndex = searchNodes.findIndex(x => x === active);\n            activeIndex = Math.min(searchNodes.length - 1, activeIndex + 1);\n            setTimeout(() => {\n                setActive(searchNodes[activeIndex]);\n                removeNodeIfEmpty(active);\n            }, 0);\n            return true;\n        }},\n        { name: 'space', bindKey: { win: 'space', mac: 'space' }, exec: () => {\n            const atStart = inputRef.current && inputRef.current.editor.getCursorPosition().row === 0 && inputRef.current.editor.getCursorPosition().column === 0;\n            if (atStart) {\n                setTimeout(() => {\n                    indentNode(active);\n                }, 0);\n                return true;\n            }\n            return false;\n        }},\n        { name: 'backspace', bindKey: { win: 'backspace', mac: 'backspace' }, exec: () => {\n            const atStart = inputRef.current && inputRef.current.editor.getCursorPosition().row === 0 && inputRef.current.editor.getCursorPosition().column === 0;\n            if (atStart) {\n                setTimeout(() => {\n                    unindentNode(active);\n                }, 0);\n                return true;\n            }\n            return false;\n        }}\n    ];\n\n    // Look at https://github.com/ajaxorg/ace/blob/41ac47ec9e26f65fe0ffedeedf14b525a22f5462/lib/ace/ext/language_tools.js#L42-L48\n    const completions = {\n        getCompletions: (editor: any, session: any, pos: any, editorPrefix: string, callback: CompletionCallback) => {\n            const line: string = session.getLine(pos.row);\n\n            if (!line) {\n                return;\n            }\n\n            function getPrefix(position: any) {\n                let prefix = '';\n\n                for(let i=position.column - 1;i>=0;i--) {\n                    if (line[i] === ' ') {\n                        break;\n                    }\n                    \n                    prefix = line[i] + prefix;\n                }\n\n                return prefix;    \n            }\n\n            function hasPrefix(requiredPrefix: string) {\n                return getPrefix(pos).startsWith(requiredPrefix);\n            }\n\n            if (hasPrefix('[[')) {\n                const completions = noteTitles.map(n => ({\n                    caption: n.title,\n                    snippet: n.title,\n                    meta: n.context || 'note',\n                }))\n\n                callback(null, completions);\n            } else if (hasPrefix('@')) {\n                const completions = peopleAliases.map(n => ({\n                    caption: n,\n                    snippet: n,\n                    meta: 'person',\n                }))\n\n                callback(null, completions);\n            } else if (hasPrefix('::')) {\n                // To use for properties\n                //\n                // const completions = peopleAliases.map(n => ({\n                //     caption: n+'::',\n                //     snippet: n+'::',\n                //     meta: 'person',\n                //     completer: {\n                //         insertMatch: function (insertEditor: any, data: any) {\n                //             var insertValue = data.snippet;\n                //             var position = editor.selection.getCursor();\n\n                //             insertEditor.session.replace({\n                //                 start: { row: position.row, column: position.column - getPrefix(position).length },\n                //                 end: { row: position.row, column: position.column }\n                //             }, insertValue);\n                //         }\n                //     }\n                // }))\n\n                // callback(null, completions);\n            }\n        }\n    }\n\n    function toggleSelected(node: Node) {\n        if(selectedNodes.includes(node)) {\n            setSelectedNodes(selectedNodes.filter(n => n !== node));\n        } else {\n            setSelectedNodes(selectedNodes.concat(node))\n        }\n    }\n\n    function clickNode(node: Node) {\n        if (selectMode) {\n            toggleSelected(node);\n            return;\n        }\n        \n        if(node !== active) {\n            setActive(node);\n        }\n    }\n\n    const renderNode = (node: Node, index: number, level: number, selectedNodes: Node[]) => {\n        const isActive = node === active;\n        const isSelected = selectedNodes.includes(node);\n        return (\n            <React.Fragment key={`${level}-${index}`}>\n                <div style={{display: 'flex', background: isSelected ? '#003838' : !selectMode && isActive ? getVariable('--active-tree-editor-background') : undefined, padding: '.6rem .8rem'}} className={hoverGlow} onClick={() => clickNode(node)}>\n                    {selectMode && <div style={{lineHeight: 1.5, marginRight: 8}}><input type=\"checkbox\" checked={isSelected} onChange={() => toggleSelected(node)} /></div>}\n                    {!selectMode && <div style={{letterSpacing: '.5rem', color: isActive ? '#078263' : '#777', lineHeight: 1.5}}>•</div>}\n                    {!selectMode && isActive\n                        ? <AceEditor\n                            key=\"editor\"\n                            ref={inputRef}\n                            value={node.text}\n                            fontSize={16}\n                            style={{background: 'transparent', width: '100%', lineHeight: 1.5, marginLeft: -4}}\n                            onChange={e => onInputChanged(node, e)}\n                            mode=\"markdown\"\n                            theme={isDark() ? \"monokai\" : 'textmate'}\n                            focus\n                            highlightActiveLine={false}\n                            showGutter={false}\n                            showPrintMargin={false}\n                            wrapEnabled={true}\n                            maxLines={Infinity}\n                            commands={commands}\n                            enableBasicAutocompletion={[completions, snippetCompleter, textCompleter, keyWordCompleter] as any}\n                            enableLiveAutocompletion={true}\n                            enableSnippets={true}\n                            />\n                        : <MarkedViewer markdown={node.text} contextId={props.contextId} />}\n                </div>\n                <div style={{borderLeft: '1px solid #555', marginLeft: 16, paddingLeft: 16}}>\n                    {node.nodes.map((n, i) => renderNode(n, i, level + 1, selectedNodes))}\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    // function onMouseDown(node: Node) {\n    //     console.log('mouseDown', node);\n    //     setMouseDown(node);\n    // }\n\n    // function onMouseUp(node: Node) {\n    //     console.log('mouseUp', node);\n    //     setMouseDown(null);\n    //     setMouseOver(null);\n    // }\n\n    // function onMouseOver(node: Node) {\n    //     if(mouseDown) {\n    //         console.log('mouseOver', node);\n    //         setMouseOver(node);\n\n    //         const newSelection: Node[] = [];\n\n    //         if (mouseDown && mouseOver && mouseDown !== mouseOver) {\n    //             let count = 0;\n        \n    //             const stack: Node[] = [];\n        \n    //             for(let i=nodes.length-1;i>=0;i--) {\n    //                 stack.push(nodes[i]);\n    //             }\n        \n    //             while (stack.length) {\n    //                 const node = stack.pop();\n        \n    //                 if (!node) {\n    //                     continue;\n    //                 }\n        \n    //                 for(let i=node.nodes.length-1;i>=0;i--) {\n    //                     stack.push(node.nodes[i]);\n    //                 }\n        \n    //                 if (node === mouseDown || node === mouseOver) {\n    //                     count += 1;\n    //                     newSelection.push(node);\n    //                 } else if (count === 1) {\n    //                     newSelection.push(node);\n    //                 }\n    //             }\n\n    //             setSelectedNodes(newSelection);\n    //         }\n    //     }\n    // }\n\n    function toggleSelectMode() {\n        if(selectMode) {\n            setSelectMode(false);\n            setSelectedNodes([]);\n        } else {\n            setSelectMode(true);\n        }\n    }\n\n    function copySelected() {\n        let result = \"\";\n\n        visitNodes((node, depth, index) => {\n            if(!selectedNodes.includes(node)) {\n                return;\n            }\n\n            console.log(node, depth);\n\n            result += `${'  '.repeat(depth)}- ${node.text}\\n`;\n        });\n\n        copy(result);\n    }\n\n    return (\n        <>\n            <div style={{display: 'flex', background: '#444', position: 'fixed', height: 36, bottom: 0, left: 0, right: 0, zIndex: 100}} className={cx(horizontalSpace('.5rem'))}>\n                    <div className=\"button\" onClick={toggleSelectMode}>Select</div>\n                    {selectMode ? <>\n                        <div className=\"button\" onClick={() => setSelectedNodes(preorderTraversal())}>All</div>\n                        <div className=\"button\" onClick={copySelected}>Copy</div>\n                    </> : <>\n                        <div className=\"button\" onClick={e => { unindentNode(active); inputRef.current && inputRef.current.editor.focus(); }}>&larr;</div>\n                        <div className=\"button\" onClick={e => { indentNode(active); inputRef.current && inputRef.current.editor.focus(); }}>&rarr;</div>\n                        <div className=\"button\" onClick={e => {\n                            if (!inputRef.current) {\n                                return;\n                            }\n                            inputRef.current.editor.session.insert(inputRef.current.editor.getCursorPosition(), '[[');\n                            inputRef.current.editor.focus();\n                        }}>[[</div>\n                        <div className=\"button\" onClick={e => {\n                            if (!inputRef.current) {\n                                return;\n                            }\n                            inputRef.current.editor.session.insert(inputRef.current.editor.getCursorPosition(), ']]');\n                            inputRef.current.editor.focus();\n                        }}>]]</div>\n                    </>}\n\n            </div>\n            <div style={{height: '100%', marginBottom: 36}}>\n                {nodes.map((n, i) => renderNode(n, i, 0, selectedNodes))}\n            </div>\n        </>\n    );\n};\n\ninterface Completion {\n    value?: string;\n    meta: string;\n    type?: string;\n    caption?: string;\n    snippet?: any;\n    score?: number;\n    exactMatch?: number;\n    docHTML?: string;\n}\n\ntype CompletionCallback = (error: Error|null, results: Completion[]) => void;","import * as React from 'react';\nimport { Data } from '../model';\nimport { ContextState } from '../db/context';\nimport _ from 'lodash';\n\nexport const ContextSelector: React.FC<{contextId: string|null, data: Data, onChange: (contextId: string|null) => void}> = (props) => {\n    const activeContexts = _.orderBy(props.data.contexts.filter(x => x.state === ContextState.Active), x => x.title);\n    const inactiveContexts = _.orderBy(props.data.contexts.filter(x => x.state !== ContextState.Active), x => x.title);\n\n    return (\n        <select className=\"input is-large\" value={props.contextId || ''} onChange={e => props.onChange(e.target.value)}>\n            <option value=\"\">Not set</option>\n            {activeContexts.map(c => (<option key={c.id} value={c.id}>{c.title}</option>))}\n            <option value=\"--inactive--\" disabled>-- Inactive</option>\n            {inactiveContexts.map(c => (<option key={c.id} value={c.id}>{c.title}</option>))}\n        </select>\n    );\n}","import * as React from 'react';\n\nexport function TagInput(props: { tags: string; availableTags: string[]; onChange: (tags: string) => void }) {\n    const [focus, setFocus] = React.useState(false)\n\n    const [tagState, setTagState] = React.useState(new TagState(props.availableTags, props.tags && props.tags.length > 0 ? props.tags.split(' ') : []))\n\n    const timeoutId = React.useRef<number|undefined>(undefined);\n    const tagInput = React.useRef<any>();\n\n    function onTextChange(e: React.ChangeEvent<HTMLInputElement>) {\n        onChange(tagState.withText(e.target.value))\n    }\n\n    function onChange(newTagState: TagState) {\n        setTagState(newTagState);\n        props.onChange(newTagState.getTags());\n    }\n\n    function onKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'ArrowUp') {\n            onChange(tagState.decrementIndex());\n        } else if (e.key === 'ArrowDown') {\n            onChange(tagState.incrementIndex());\n        } else if (e.key === 'Enter') {\n            if (tagState.text === '') {\n                onChange(tagState.addSelectedTag());\n            } else {\n                onChange(tagState.addText());\n            }\n        } else if (e.key === 'Tab') {\n            onChange(tagState.addSelectedTag());\n            e.preventDefault();\n        } else if (e.key === 'Backspace') {\n            if (tagState.text === '') {\n                onChange(tagState.reopenLastTag());\n            }\n        }\n    }\n\n    function onClickTag(tag: string) {\n        onChange(tagState.addTag(tag));\n        tagInput.current.focus();\n    }\n\n    function onFocus() {\n        clearTimeout(timeoutId.current);\n\n        if(focus) {\n            return;\n        }\n\n        setFocus(true);\n    }\n\n    function onBlur() {\n        if(!focus) {\n            return;\n        }\n\n        timeoutId.current = setTimeout(() => {\n            setFocus(false);\n        }, 100) as any;\n    }\n\n    return (\n        <div className=\"tag-input\" onFocus={() => onFocus()} onBlur={() => onBlur()}>\n            <div className=\"tags\">\n                {tagState.selectedTags.map((t, i) => <Tag key={`tag-${t}-${i}`} name={t} />)}\n                <input ref={tagInput} placeholder=\"Tag\" type=\"text\" className=\"\" onChange={e => onTextChange(e)} onKeyDown={e => onKeyPress(e)} value={tagState.text} />\n            </div>\n            {focus && tagState.getFilteredAvailableTags().length > 0 &&\n                <div className=\"panel\">\n                    {tagState.getFilteredAvailableTags().slice(0, 10).map((t, i) => <div key={`available-tag-${t}`} style={tagState.index === i ? { background: '#078263'} : {}} onClick={() => onClickTag(t)}>{t}</div>)}\n                </div>\n            }\n        </div>\n    );\n}\n\nexport class TagState {\n    availableTags: string[];\n    selectedTags: string[];\n    text: string;\n    index: number;\n\n    constructor(availableTags: string[], selectedTags: string[], text = \"\", index = 0) {\n        this.availableTags = availableTags;\n        this.selectedTags = selectedTags;\n        this.text = text;\n        this.index = index;\n    }\n\n    withText(text: string) {\n        return new TagState(this.availableTags, this.selectedTags, text, this.index);\n    }\n\n    withAvailableTags(availableTags: string[]) {\n        return new TagState(availableTags, this.selectedTags, this.text, this.index);\n    }\n\n    withSelectedTags(selectedTags: string[]) {\n        return new TagState(this.availableTags, selectedTags, this.text, this.index);\n    }\n\n    decrementIndex() {\n        return new TagState(this.availableTags, this.selectedTags, this.text, Math.max(0, this.index - 1));\n    }\n\n    incrementIndex() {\n        return new TagState(this.availableTags, this.selectedTags, this.text, Math.max(0, Math.min(this.availableTags.length - 1, this.index + 1)));\n    }\n\n    addSelectedTag() {\n        return new TagState(this.availableTags, this.selectedTags.concat([this.getFilteredAvailableTags()[this.index]]), '', 0);\n    }\n\n    addTag(tag: string) {\n        return new TagState(this.availableTags, this.selectedTags.concat([tag]), '', 0);\n    }\n\n    addText() {\n        return new TagState(this.availableTags, this.selectedTags.concat([this.text]), '', 0);\n    }\n\n    reopenLastTag() {\n        const lastTag = this.selectedTags[this.selectedTags.length - 1];\n        return new TagState(this.availableTags, this.selectedTags.slice(0, this.selectedTags.length - 1), lastTag, 0);\n    }\n\n    getFilteredAvailableTags() {\n        return this.availableTags.filter(t => this.selectedTags.indexOf(t) === -1).filter(t => t.toLowerCase().indexOf(this.text) !== -1);\n    }\n\n    getTags() {\n        return this.selectedTags.join(' ');\n    }\n}\n\nexport const Tag: React.FC<{ name: string }> = props => {\n    return (\n        <div className=\"tag is-dark\">{props.name}</div>\n    );\n}\n\nexport const TagList: React.FC<{tags: string}> = props => {\n    return (\n        <div className=\"tags\" style={{marginBottom: 0}}>{props.tags && props.tags.split(' ').map((t, i) => <Tag key={i} name={t} />)}</div>\n    );\n}","import * as React from 'react';\nimport { ToolSection } from '../framework/ToolSection';\nimport { SimpleSplitEditor, SplitMode, SplitModeSelector, NoteModeSelector } from './SimpleSplitEditor';\nimport { isMobile } from './Layout';\nimport { getNoteTitle, Note, NoteMode } from '../db/note';\nimport { TreeEditor } from './TreeEditor';\nimport { SettingsCompactor } from './SettingsCompactor';\nimport './NoteEditor.scss';\nimport { ContextSelector } from '../components/ContextSelector';\nimport { Data } from '../model';\nimport moment from 'moment';\nimport { TagInput } from './TagInput';\n\nexport function NoteEditor(props: {note: Note, updateNote: (props: Partial<Note>) => void, onNoteAdded: () => void, availableTags: string[], data: Data}) {\n    const [splitMode, setSplitMode] = React.useState(isMobile() ? SplitMode.Editor : SplitMode.Split)\n\n    const updateDailyDate = (value: string) => {\n        if (value === '') {\n            props.updateNote({ dailyDate: null });\n        } else {\n            props.updateNote({ dailyDate: new Date(value).toISOString() });\n        }\n    }\n\n    return (\n        <div style={{width: '100%', flex: 1, display: 'flex', flexDirection: 'column'}}>\n            <ToolSection verticalAround={false}>\n                <SettingsCompactor wideStyle={{justifyContent: 'space-between'}} alwaysVisible={() => (\n                    <>\n                        <ContextSelector contextId={props.note.contextId} data={props.data} onChange={contextId => props.updateNote({ contextId })} />\n                        <input type=\"date\" className=\"input is-large\" value={(props.note.dailyDate && moment(props.note.dailyDate).format('YYYY-MM-DD')) || ''} onChange={e => updateDailyDate(e.target.value)} />\n                    </>\n                )}>\n                    <NoteModeSelector mode={props.note.mode || NoteMode.Tree} onModeChange={mode => props.updateNote({ mode })} />\n                    <SplitModeSelector mode={splitMode} onModeChange={splitMode => setSplitMode(splitMode)} />\n                </SettingsCompactor>\n            </ToolSection>\n            <ToolSection>\n                {!props.note.noteFor && !props.note.dailyDate && (\n                    <>\n                        <input type=\"text\" placeholder=\"Title\" className=\"input is-large is-wide\" value={props.note.title} onChange={e => props.updateNote({ title: e.target.value })} />\n                        <TagInput availableTags={props.availableTags} tags={props.note.tags} onChange={tags => props.updateNote({ tags })} />\n                    </>\n                )}\n                {props.note.dailyDate && (\n                    <h1>{getNoteTitle({ dailyDate: props.note.dailyDate, title: props.note.title, content: props.note.content })}</h1>\n                )}\n            </ToolSection>\n            <div style={{flex: 1}}>\n                {props.note.mode === NoteMode.Markdown ? (\n                    <SimpleSplitEditor text={props.note.content} expand={true} onTextChanged={content => props.updateNote({ content })} mode={splitMode} data={props.data} contextId={props.note.contextId} />\n                ) : (\n                    <TreeEditor text={props.note.content} onTextChanged={content => props.updateNote({ content })} contextId={props.note.contextId} />\n                )}\n            </div>\n        </div>\n    );\n}","import {history} from '../index';\nimport { Note } from './note';\nimport {createInstance} from 'localforage';\nimport { Api } from '../bridge/HostBridge';\nimport { syncer } from './syncer';\n\nlet registered = false;\n\nfunction ensureRegister() {\n    if (registered) {\n        return;\n    }\n\n    history.listen(onNavigate);\n    registered = true;\n}\n\nconst store = createInstance({ name: `staging-note` });\n\nasync function processQueue() {\n    for(const key of await store.keys()) {\n        const note = await store.getItem<Note>(key);\n        await Api.saveNote(note);\n        syncer.getData(true);\n        await store.removeItem(note.id);\n    }\n}\n\nprocessQueue();\n\nlet queuedPath: string|null = null;\nlet queuedNote: Note|null = null;\n\nasync function onNavigate(location: { pathname: string }, action: string) {\n    if (!queuedNote) {\n        return;\n    }\n\n    if (queuedPath === location.pathname) {\n        return;\n    }\n\n    await Api.saveNote(queuedNote);\n    syncer.getData(true);\n    await store.removeItem(queuedNote.id);\n    queuedNote = null;\n}\n\nexport async function register(note: Note, hasChanges: boolean) {\n    ensureRegister();\n    if(hasChanges) {\n        queuedNote = note;\n        queuedPath = window.location.pathname;\n        await store.setItem(note.id, note);\n    } else {\n        queuedNote = null;\n        queuedPath = null;\n        await store.removeItem(note.id);\n    }\n};","import * as React from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { NoteEditor } from '../../components/NoteEditor';\nimport { useData } from '../../model';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { useQueryState } from '../../lib/UseQueryState';\nimport * as styles from '../../layout/styles';\nimport { cx } from 'emotion';\nimport { Note, NoteMode } from '../../db/note';\nimport { register } from '../../db/stagingArea';\nimport moment from 'moment';\n\nfunction useNote(pristineNote: Note): [Note, (props: Partial<Note>) => void, boolean] {\n    const [pristine] = React.useState(pristineNote);\n    const [note, setNote] = React.useState<Note>({...pristineNote});\n    const [hasChanges, setHasChanges] = React.useState(false);\n\n    function updateNote(props: Partial<Note>) {\n        const newNote = {...note, ...props};\n        const newHasChanges = JSON.stringify(pristine) !== JSON.stringify(newNote);\n        setHasChanges(newHasChanges);\n        setNote(newNote);\n        register(newNote, newHasChanges);\n    }\n\n    return [note, updateNote, hasChanges];\n}\n\nexport const EditNotePage: React.FC<{id?: string }> = props => {\n    const {data} = useData();\n    let tags: {[key: string]: number} = {};\n    const [goBack, setGoBack] = React.useState(false);\n    const [source] = useQueryState(null, 'source');\n\n    const urlParams = new URLSearchParams(window.location.search);\n    const title = urlParams.get('title');\n    const contextId = urlParams.get('context');\n    const daily = urlParams.has('daily');\n\n    const [note, updateNote] = useNote(data.notes.find(x => x.id === props.id) || { title: title || '', content: '', mode: NoteMode.Tree, contextId, dailyDate: (daily && moment().format('YYYY-MM-DD')) || null, noteFor: null, tags: '' } as Note);\n\n    if (goBack) {\n        return <Redirect to={source ? decodeURIComponent(source) : '/'} />;\n    }\n\n    for (const note of data.notes || []) {\n        if(!note.tags || !note.tags.length) {\n            continue;\n        }\n\n        for(const tag of note.tags.split(' ')) {\n            if(!tags[tag]) {\n                tags[tag] = 0;\n            }\n\n            tags[tag] += 1;\n        }\n    }\n\n    const availableTags = Object.keys(tags).sort((a, b) => tags[b] - tags[a]);\n\n    if (props.id) {\n        return (\n            <>\n                <div style={{height: '100%', display: 'flex', flexDirection: 'column'}}>\n                    <ToolSection>\n                        <div className={cx(styles.horizontalSpace('.5rem'))}>\n                            <NavLink to={source ? decodeURIComponent(source) : '/'} className=\"button\">Back</NavLink>\n                            {!note.noteFor && <NavLink to={`/notes/${note.id}`} className=\"button\">Show</NavLink>}\n                        </div>\n                    </ToolSection>\n                    <NoteEditor note={note} updateNote={updateNote} {...note} data={data} availableTags={availableTags} onNoteAdded={() => { setGoBack(true); }} />\n                </div>\n            </>\n        );\n    }\n\n    return (\n        <>\n            <div style={{height: '100%', display: 'flex', flexDirection: 'column'}} >\n                <ToolSection>\n                    <NavLink to={`/`} className=\"button\">Back</NavLink>\n                </ToolSection>\n                <NoteEditor note={note} updateNote={updateNote} availableTags={availableTags} data={data} onNoteAdded={() => { setGoBack(true); }} />\n            </div>\n        </>\n    );\n}","import * as React from 'react';\nimport { useState } from 'react';\nimport { MarkedViewer } from './MarkedViewer';\n\nimport \"ace-builds/src-noconflict/mode-markdown\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport { Loader } from './Loader';\nimport { getNoteReferenceMatchRegExp, getNoteAliasReferenceMatchRegExp } from '../db/note';\n\ninterface Node {\n    text: string;\n    nodes: Node[];\n}\n\nexport const TreeViewer: React.FC<{ json: string, contextId: string|null, referenceTitle?: string, personAlias?: string }> = (props) => {\n    const [nodes, setNodes] = useState<Node[]|null>(null);\n    const [invalid, setInvalid] = useState(false);\n\n    React.useEffect(() => {\n        try {\n            let nodes = [];\n            if (props.json) {\n                nodes = JSON.parse(props.json)\n            }\n            setNodes(nodes);\n        } catch {\n            setInvalid(true);\n        }\n    }, [props.json]);\n\n    if (invalid) {\n        return <div>Invalid json</div>;\n    }\n\n    if (!nodes) {\n        return <Loader />;\n    }\n\n    const renderNode = (node: Node, index: number, level: number, filter: RegExp|null) => {\n        const extra: JSX.Element[] = [];\n        if (filter) {\n            if (filter.test(node.text)) {\n                filter = null;\n                if (level > 0) {\n                    extra.push(<div key={`extra-${index}-${level}`} style={{paddingTop: 8, color: '#aaa'}}>{'... > '.repeat(level)}</div>)\n                }\n            } else {\n                return (\n                    <React.Fragment key={`${level}-${index}`}>\n                        {node.nodes.map((n, i) => renderNode(n, i, level + 1, filter))}\n                    </React.Fragment>\n                );\n            }\n        }\n\n        return (\n            <React.Fragment key={`${level}-${index}`}>\n                {extra}\n                <div style={{display: 'flex', padding: '.6rem .8rem'}}>\n                    <div style={{letterSpacing: '.5rem', color: '#777', lineHeight: 1.5}}>•</div>\n                    <MarkedViewer markdown={node.text} contextId={props.contextId} />\n                </div>\n                <div style={{borderLeft: '1px solid #555', paddingLeft: 16, marginLeft: 16}}>\n                    {node.nodes.map((n, i) => renderNode(n, i, level + 1, filter))}\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    let referenceRegExp = props.referenceTitle ? getNoteReferenceMatchRegExp(props.referenceTitle) : null;\n\n    if (props.personAlias) {\n        referenceRegExp = getNoteAliasReferenceMatchRegExp(props.personAlias);\n    }\n\n    return (\n        <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'space-between', height: '100%'}}>\n            <div style={{width: '100%'}}>\n                {nodes.map((n, i) => renderNode(n, i, 0, referenceRegExp))}\n            </div>\n        </div>\n    );\n};","import * as React from 'react';\nimport { useData } from '../model';\nimport { MarkedViewer } from './MarkedViewer';\nimport { getNoteTitle, getNoteReferenceMatchRegExp, getNoteAliasReferenceMatchRegExp, NoteMode } from '../db/note';\nimport { Link } from 'react-router-dom';\nimport * as _ from 'lodash';\nimport { TreeViewer } from './TreeViewer';\n\nexport const ReferenceViewer: React.FC<{ title: string, contextId: string|null }> = (props) => {\n    const {data} = useData();\n    const referenceRegExp = getNoteReferenceMatchRegExp(props.title);\n    const contextNotes = _.orderBy(data.notes.filter(x => x.contextId === props.contextId && referenceRegExp.test(x.content)), x => x.updatedAt, 'desc');\n\n    if (contextNotes.length === 0) {\n        return null;\n    }\n\n    return (\n        <div style={{paddingTop: 32}}>\n            <div style={{fontWeight: 'bold'}}>{contextNotes.length} linked references for \"{props.title}\"</div>\n            {contextNotes.map(note => (\n                <div key={note.id} style={{marginTop: 16}}>\n                    <Link to={`/notes/${note.id}`} style={{color: '#078263'}}>{getNoteTitle(note)}</Link>\n                    <div style={{paddingLeft: 16, background: '#222', marginTop: 8}}>\n                        {note.mode === NoteMode.Markdown\n                        ? <MarkedViewer markdown={note.content} contextId={note.contextId} /> \n                        : <TreeViewer json={note.content} contextId={note.contextId} referenceTitle={props.title} />}\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport const PersonReferenceViewer: React.FC<{ alias: string }> = (props) => {\n    const {data} = useData();\n    const referenceRegExp = getNoteAliasReferenceMatchRegExp(props.alias);\n    const matchingNotes = _.orderBy(data.notes.filter(x => referenceRegExp.test(x.content)), x => x.updatedAt, 'desc');\n\n    if (matchingNotes.length === 0) {\n        return null;\n    }\n\n    return (\n        <div style={{paddingTop: 32}}>\n            <div style={{fontWeight: 'bold'}}>{matchingNotes.length} linked references for \"{props.alias}\"</div>\n            {matchingNotes.map(note => (\n                <div key={note.id} style={{marginTop: 16}}>\n                    <Link to={`/notes/${note.id}`} style={{color: '#078263'}}>{getNoteTitle(note)}</Link>\n                    <div style={{paddingLeft: 16, background: '#222', marginTop: 8}}>\n                        {note.mode === NoteMode.Markdown \n                        ? <MarkedViewer markdown={note.content} contextId={note.contextId} /> \n                        : <TreeViewer json={note.content} contextId={note.contextId} personAlias={props.alias} />}\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { MarkedViewer } from '../../components/MarkedViewer';\nimport { ReferenceViewer } from '../../components/ReferenceViewer';\nimport { useData } from '../../model';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { useQueryState } from '../../lib/UseQueryState';\nimport { TagList } from '../../components/TagInput';\nimport { ContextTag } from '../../components/ContextTag';\nimport { getNoteTitle, NoteMode } from '../../db/note';\nimport { TreeViewer } from '../../components/TreeViewer';\n\nexport const ShowNotePage: React.SFC<{id: string}> = (props) => {\n    const {data} = useData();\n    const [source] = useQueryState(null, 'source');\n    const note = data.notes.find(x => x.id === props.id);\n\n    if (!note) {\n        return <div>Note not found.</div>\n    }\n\n    let viewer = null;\n\n    if (note.mode === NoteMode.Markdown) {\n        viewer = <MarkedViewer markdown={note.content} contextId={note.contextId} />;\n    } else {\n        viewer = <TreeViewer json={note.content} contextId={note.contextId} />;\n    }\n\n    return (\n        <>\n            <ToolSection>\n                <NavLink to={source ? decodeURIComponent(source) : '/'} className=\"button\">Back</NavLink>\n                <NavLink to={`/notes/${note.id}/edit`} className=\"button\">Edit</NavLink>\n            </ToolSection>\n            <div className=\"panel\">\n                <div className=\"content\" style={{padding: '1rem'}}>\n                    <h1>{getNoteTitle(note)}</h1>\n                    <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                        <TagList tags={note.tags} />\n                        <ContextTag contextId={note.contextId} />\n                    </div>\n                    {viewer}\n                    <ReferenceViewer title={getNoteTitle(note)} contextId={note.contextId} />\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport const ShowVirtualNotePage: React.SFC<{}> = (props) => {\n    const [source] = useQueryState(null, 'source');\n\n    const urlParams = new URLSearchParams(window.location.search);\n    const title = urlParams.get('title');\n    const contextId = urlParams.get('context');\n\n    if(!title) {\n        return <div>Note not found.</div>\n    }\n\n    return (\n        <>\n            <ToolSection>\n                <NavLink to={source ? decodeURIComponent(source) : '/'} className=\"button\">Back</NavLink>\n                <NavLink to={`/notes/new?title=${encodeURIComponent(title)}${contextId ? `&context=${contextId}` : ''}&source=${encodeURIComponent(`${window.location.pathname}`)}`} className=\"button\">Create</NavLink>\n            </ToolSection>\n            <div className=\"panel\">\n                <div className=\"content\" style={{padding: '1rem'}}>\n                    <h1>{title}</h1>\n                    <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                        <ContextTag contextId={contextId} />\n                    </div>\n                    <ReferenceViewer title={title} contextId={contextId} />\n                </div>\n            </div>\n        </>\n    );\n}","import * as React from 'react';\n\ninterface ListProps<T> {\n    renderItem: (item: T) => JSX.Element;\n    items: T[];\n}\n\nexport function List<T>(props: ListProps<T>) {\n    return (\n        <div className=\"list\">\n            {props.items.map(props.renderItem)}\n        </div>\n    );\n}","import * as React from 'react';\nimport moment from 'moment';\nimport { TagList } from '../../components/TagInput';\nimport { NavLink } from 'react-router-dom';\nimport lunr from 'lunr';\nimport { debounce } from 'throttle-debounce';\nimport { useData } from '../../model';\nimport * as styles from '../../layout/styles';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { getNoteTitle, extractAllReferences } from '../../db/note';\nimport { List } from '../../framework/List';\nimport { isMobile } from '../../components/Layout';\nimport { useQueryState, useQueryStateT, useQueryStateBoolean } from '../../lib/UseQueryState';\nimport { SettingsCompactor } from '../../components/SettingsCompactor';\nimport { ContextTag } from '../../components/ContextTag';\nimport _ from 'lodash';\nimport { Loader } from '../../components/Loader';\nimport { cx } from 'emotion';\nimport { ContextState } from '../../db/context';\n\nexport function NotePage() {\n    const {data} = useData();\n    const [text, setText] = useQueryState(null, 'search');\n    const [filterTags, setFilterTags] = useQueryStateT<string[]>([], 'tags', s => s !== null ? s.split('|') : [], a => a.join('|'));\n    const [showTagsBar, setShowTagsBar] = React.useState(!isMobile());\n    const [searchResult, setSearchResult] = React.useState<{ id: string, score: number }[]|null>(null);\n    const [searchIndex, setSearchIndex] = React.useState<lunr.Index|null>(null);\n    const [showNotesFor, setShowNotesFor] = React.useState(false);\n    const [showNoContext, setShowNoContext] = useQueryStateBoolean(false, 'no-context');\n    const [virtualReferences, setVirtualReferences] = React.useState<{ title: string, contextId: string|null, updatedAt: Date }[]>();\n    const [inactiveContexts, setInactiveContexts] = React.useState<string[]>([]);\n\n    React.useEffect(() => {\n        const refs = extractAllReferences(data.notes);\n        setVirtualReferences(refs);\n    }, [data.notes]);\n\n    React.useEffect(() => {\n        setInactiveContexts(data.contexts.filter(c => c.state === ContextState.Inactive).map(c => c.id));\n    }, [data.contexts]);\n\n    const onSearch = (text: string) => {\n        if (!text || !text.length) {\n            setSearchResult(null);\n            return;\n        }\n\n        if (searchIndex === null) {\n            const idx = lunr(function() {\n                this.field('title');\n                this.field('text');\n    \n                for(let note of data.notes) {\n                    this.add({\n                        id: note.id,\n                        title: note.title,\n                        text: note.content\n                    });\n                }\n            });\n\n            setSearchIndex(idx);\n            const result = idx.search(text);\n            setSearchResult(result.map(r => { return { id: r.ref, score: r.score }; }));\n            return;\n        }\n\n        const result = searchIndex.search(text);\n        setSearchResult(result.map(r => { return { id: r.ref, score: r.score }; }));\n    };\n\n    const debouncedSearch = debounce(100, onSearch);\n\n    const toggleTag = (tag: string) => {\n        if (filterTags.indexOf(tag) === -1) {\n            setFilterTags(filterTags.concat([ tag ]));\n        } else {\n            setFilterTags(filterTags.filter(x => x !== tag));\n        }\n    }\n\n    let notes = data.notes || [];\n    let tags: {[key: string]: number} = {};\n\n    for(const tag of filterTags) {\n        notes = notes.filter(x => x.tags.split(' ').indexOf(tag) !== -1);\n    }\n\n    if (!showNotesFor) {\n        notes = notes.filter(x => !x.noteFor);\n    }\n\n    if (showNoContext) {\n        notes = notes.filter(x => !x.contextId);\n    }\n\n    notes = notes.filter(x => !x.contextId || inactiveContexts.indexOf(x.contextId) === -1)\n\n    if (searchResult) {\n        notes = searchResult.map(r => {\n            let idx =  notes.findIndex(n => n.id === r.id);\n            return notes[idx];\n        }).filter(n => n);\n    }\n\n    for (const note of notes) {\n\n        if(!note.tags) {\n            continue;\n        }\n\n        for(const tag of note.tags.split(' ')) {\n            if(!tags[tag]) {\n                tags[tag] = 0;\n            }\n\n            tags[tag] += 1;\n        }\n    }\n\n    const tagCounts = Object.keys(tags).map(k => { return { key: k, count: tags[k], active: filterTags.indexOf(k) !== -1 }; }).sort((a, b) => b.count - a.count);\n\n    let source: string|null = null;\n    if (window.location.search.length) {\n        const urlParams = new URLSearchParams(window.location.search);\n        source = `?source=${encodeURIComponent(`${window.location.pathname}?${urlParams.toString()}`)}`\n    }\n\n    if(!virtualReferences) {\n        return <Loader />;\n    }\n\n    interface NoteOutput {\n        id: string|null;\n        title: string;\n        tags: string|null;\n        contextId: string|null;\n        updatedAt: Date;\n        url: string;\n        isRef: boolean;\n    }\n\n    const notesOutput: NoteOutput[] = notes.map(n => ({\n        id: n.id,\n        title: getNoteTitle(n),\n        tags: n.tags,\n        contextId: n.contextId,\n        updatedAt: new Date(n.updatedAt),\n        url: `/notes/${n.id}${source ? source : ''}`,\n        isRef: false\n    }));\n\n    let virtualReferencesOutput: NoteOutput[] = [];\n    \n    if(!searchResult) {\n        virtualReferencesOutput = virtualReferences.map(v => ({\n            id: null,\n            title: v.title,\n            tags: null,\n            contextId: v.contextId,\n            updatedAt: v.updatedAt,\n            url: `/notes/virtual?title=${encodeURIComponent(v.title)}${v.contextId ? `&context=${v.contextId}` : ''}&source=${encodeURIComponent(`${window.location.pathname}`)}`,\n            isRef: true\n        }));\n    }\n\n    virtualReferencesOutput = virtualReferencesOutput.filter(x => !x.contextId || inactiveContexts.indexOf(x.contextId) === -1)\n\n    const output = _.orderBy(notesOutput.concat(virtualReferencesOutput), o => o.updatedAt, 'desc');\n\n    return (\n        <div style={{display: 'flex', height: '100%'}}>\n            {showTagsBar && <div style={{borderRight: '1px solid #666', width: 200}}>\n                <List<{key: string, count: Number, active: boolean}> items={tagCounts} renderItem={i => {\n                    return (\n                        <div key={i.key} style={{background: i.active ? '#444' : undefined}} onClick={() => toggleTag(i.key)} className={cx('item', styles.hoverGlow)}>{i.key} <span style={{color: '#999'}}>{i.count}</span></div>\n                    );\n                }} />\n            </div>}\n            <div style={{width: '100%'}}>\n                <ToolSection>\n                    <SettingsCompactor alwaysVisible={() => (\n                        <>\n                            <NavLink to={`/notes/new`} className=\"button\">New Note</NavLink>\n                        </>\n                    )}>\n                        <div>\n                            <input id=\"tags-box\" type=\"checkbox\" checked={showTagsBar} onChange={() =>setShowTagsBar(!showTagsBar)} />\n                            <label htmlFor=\"tags-box\">Show tags bar</label>\n                        </div>\n                        <div>\n                            <input id=\"show-notes-for-box\" type=\"checkbox\" checked={showNotesFor} onChange={() =>setShowNotesFor(!showNotesFor)} />\n                            <label htmlFor=\"show-notes-for-box\">Show notes for</label>\n                        </div>\n                        <div>\n                            <input id=\"show-no-context-box\" type=\"checkbox\" checked={showNoContext} onChange={() =>setShowNoContext(!showNoContext)} />\n                            <label htmlFor=\"show-no-context-box\">Show no context</label>\n                        </div>\n                    </SettingsCompactor>\n                    <input style={{fontSize: 16, padding: '.3rem', width: '100%'}} placeholder=\"Search...\" type=\"text\" value={text || ''} onChange={e => { setText(e.target.value); debouncedSearch(e.target.value); }}/>\n                </ToolSection>\n                <div className=\"list\">\n                    {output.map((n, i) => (\n                        <React.Fragment key={i}>\n                            <NavLink to={n.url} className={cx('item', 'note', styles.hoverGlow)} style={{color: n.isRef ? '#aaa' : undefined}}>\n                                <div className=\"note-title\">\n                                    <div>{n.title}</div>\n                                </div> \n                                <div className=\"note-details\">\n                                    <TagList tags={n.tags || ''} />\n                                    <div className=\"tags\">\n                                        <ContextTag contextId={n.contextId} />\n                                    </div>\n                                    <div className=\"note-date\">{moment(n.updatedAt).format('ddd MMM Do HH:mm')}</div>\n                                </div>\n                            </NavLink>\n                        </React.Fragment>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n","import * as React from 'react';\nimport { ToolSection } from '../framework/ToolSection';\nimport { extractAllReferences } from '../db/note';\nimport { useData } from '../model';\n\nexport const PlaygroundPage: React.FC<{}> = () => {\n    \n    const {data} = useData();\n\n    console.log(extractAllReferences(data.notes));\n    \n    return (\n        <div style={{height: '100%'}}>\n            <ToolSection>\n            </ToolSection>\n        </div>\n    );\n}","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as styles from '../layout/styles';\nimport { ToolSection } from '../framework/ToolSection';\nimport { Context, ContextState } from '../db/context';\nimport { useData } from '../model';\nimport { cx } from 'emotion';\nimport { getVariable } from '../layout/theme';\nimport { Api } from '../bridge/HostBridge';\n\nexport const ContextPage: React.FC<{ refreshData(): void }> = props => {\n    const {data} = useData();\n\n    const [text, setText] = React.useState('');\n\n    async function onKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            await Api.saveContext({\n                title: text,\n                state: ContextState.Active,\n                contextId: null\n            } as Context);\n\n            props.refreshData();\n            setText('');\n        }\n    }\n\n    function renderTarget(target: Context) {\n        return (\n            <NavLink key={target.id} to={`/contexts/${target.id}`} className={cx('item', styles.hoverGlow)}>\n                <div>\n                    {target.title}\n                </div>\n            </NavLink>\n        );\n    }\n\n    return (\n        <>\n            <ToolSection>\n                <input type=\"text\" className=\"input is-large is-wide\" placeholder=\"Add context...\" value={text} onChange={e => setText(e.target.value)} onKeyPress={onKeyPress} />\n            </ToolSection>\n\n            <div className=\"list\">\n                <div className=\"header\" style={{background: getVariable('--task-context-background')}}>Active</div>\n                {data.contexts.filter(p => p.state === ContextState.Active).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => renderTarget(t))}\n                <div className=\"header\" style={{background: getVariable('--task-context-background')}}>Not Active</div>\n                {data.contexts.filter(p => p.state === ContextState.Inactive).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => renderTarget(t))}\n            </div>\n        </>\n    );\n}\n","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as styles from '../layout/styles';\nimport { Data } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport { ProjectState, Project } from '../db/project';\nimport { ContextTag } from '../components/ContextTag';\nimport { cx } from 'emotion';\nimport { getVariable } from '../layout/theme';\nimport { Api } from '../bridge/HostBridge';\n\nexport class ProjectPage extends React.Component<{ data: Data, refreshData: () => void }, { text: string }> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            text: ''\n        };\n    } \n    \n    async onKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            await Api.saveProject({\n                title: this.state.text,\n                state: ProjectState.Active,\n                contextId: null\n            } as Project);\n            this.setState({ text: '' }, this.props.refreshData);\n        }\n    }\n\n    renderProject(target: Project) {\n        return (\n            <NavLink key={target.id} to={`/projects/${target.id}`} className={cx('item', styles.hoverGlow)}>\n                <div>\n                    {target.title}\n                </div>\n                <div className=\"tags\">\n                    <div className=\"tag\">{target.state}</div>\n                    <ContextTag contextId={target.contextId} />\n                </div>\n            </NavLink>\n        );\n    }\n\n    render() {\n        return (\n            <>\n                <ToolSection>\n                    <input type=\"text\" className=\"input is-large is-wide\" placeholder=\"Add project...\" value={this.state.text} onChange={e => this.setState({ text: e.target.value })} onKeyPress={this.onKeyPress.bind(this)} />\n                </ToolSection>\n\n                <div className=\"list\">\n                    <div className=\"header\" style={{background: getVariable('--task-project-background')}}>Active</div>\n                    {this.props.data.projects.filter(p => p.state === ProjectState.Active).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => this.renderProject(t))}\n                    <div className=\"header\"  style={{background: getVariable('--task-project-background')}}>Incubated</div>\n                    {this.props.data.projects.filter(p => !p.state || p.state === ProjectState.Incubated).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => this.renderProject(t))}\n                    <div className=\"header\"  style={{background: getVariable('--task-project-background')}}>Not Active</div>\n                    {this.props.data.projects.filter(p => p.state !== ProjectState.Active && p.state !== ProjectState.Incubated).sort((a, b) =>  b.title! < a.title! ?  -1 : b.title! > a.title! ? 1 : 0).map(t => this.renderProject(t))}\n                </div>\n            </>\n        );\n    }\n}\n","import * as React from 'react';\nimport { useData } from '../model';\nimport { Person } from '../db/person';\nimport { NavLink } from 'react-router-dom';\nimport { MarkedViewer } from './MarkedViewer';\nimport { Task } from '../db/task';\nimport { HasNote, Note, NoteMode } from '../db/note';\nimport { TreeViewer } from './TreeViewer';\nimport { Api } from '../bridge/HostBridge';\n\nexport function EmbeddedNoteEdit(props: { type:'person'|'task', targetEntity: Person|Task|null }) {\n    const {data, refresh} = useData();\n\n    if (!props.targetEntity) {\n        return null;\n    }\n\n    const {noteId} = props.targetEntity;\n\n    const addNode = async () => {\n        if (!props.targetEntity) {\n            return;\n        }\n\n        const note = await Api.saveNote({\n            title: '',\n            content: '',\n            tags: '',\n            contextId: null,\n            noteFor: props.targetEntity.id,\n            mode: NoteMode.Tree,\n            dailyDate: null\n        } as Note);\n\n        if (props.type === 'person') {\n            props.targetEntity.noteId = note.id;\n            await Api.savePerson(props.targetEntity as Person);\n        }\n\n        if (props.type === 'task') {\n            props.targetEntity.noteId = note.id;\n            await Api.saveTask(props.targetEntity as Task);\n        }\n\n        refresh();\n    };\n\n    if (!noteId) {\n        return (\n            <div>\n                <div className=\"button\" onClick={addNode}>Add note</div>\n            </div>\n        );\n    }\n\n    const note = data.notes.find(x => x.id === noteId);\n\n    if (!note) {\n        return null;\n    }\n\n    return (\n        <div>\n            <NavLink to={`/notes/${note.id}/edit?source=${encodeURIComponent(`${window.location.pathname}`)}`} className=\"button\">Edit note</NavLink>\n            {note.mode === NoteMode.Markdown ? (\n                <MarkedViewer markdown={note.content} contextId={note.contextId} />\n            ) : (\n                <TreeViewer json={note.content} contextId={note.contextId} />\n            )}\n        </div>\n    )\n};\n\nexport const EmbeddedNoteShow: React.FC<{ targetEntity: HasNote|null }> = (props) => {\n    const {data} = useData();\n\n    if (!props.targetEntity) {\n        return null;\n    }\n\n    const {noteId} = props.targetEntity;\n    if (!noteId) {\n        return null;\n    }\n\n    const note = data.notes.find(x => x.id === noteId);\n\n    if (!note) {\n        return null;\n    }\n\n    return (\n        <div>\n            {note.mode === NoteMode.Markdown ? (\n                <MarkedViewer markdown={note.content} contextId={note.contextId} />\n            ) : (\n                <TreeViewer json={note.content} contextId={note.contextId} />\n            )}\n        </div>\n    )\n};","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useData } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport { Task, TaskState } from '../db/task';\nimport { ProjectState } from '../db/project';\nimport moment from 'moment';\nimport * as styles from '../layout/styles';\nimport { EmbeddedNoteEdit } from '../components/EmbeddedNote';\nimport { cx } from 'emotion';\nimport { Api } from '../bridge/HostBridge';\n\nexport function ShowTaskPage(props: { id: string}) {\n    const {data, refresh} = useData();\n    const [title, setTitle] = React.useState('');\n    const [source, setSource] = React.useState('/tasks');\n\n\n    React.useEffect(() => {\n        const urlParams = new URLSearchParams(window.location.search);\n        const task = data.tasks.find(x => x.id === props.id);\n        setTitle(task!.title);\n        if (urlParams.has('source')) {\n            setSource(decodeURIComponent(urlParams.get('source')!));\n        }\n    }, [data.tasks, props.id]);\n\n    async function setContext(task: Task, event: React.ChangeEvent<HTMLSelectElement>) {\n        let contextId: string|null = event.target.value;\n\n        if (contextId === '') {\n            contextId = null;\n        }\n\n        task.contextId = contextId;\n\n        await Api.saveTask(task);\n        refresh();\n    }\n\n    async function setProject(task: Task, event: React.ChangeEvent<HTMLSelectElement>) {\n        let projectId: string|null = event.target.value;\n\n        if (projectId === '') {\n            projectId = null;\n        }\n\n        task.projectId = projectId;\n\n        await Api.saveTask(task);\n        refresh();\n    }\n\n    async function setDefer(task: Task, event: React.ChangeEvent<HTMLInputElement>) {\n        let value: string|null = event.target.value;\n\n        if (value === '') {\n            task.deferredUntil = null;\n        } else {\n            task.deferredUntil = new Date(value).toISOString();\n        }\n\n        await Api.saveTask(task);\n        refresh();\n    }\n\n    async function onKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            let task = data.tasks.find(x => x.id === props.id);\n\n            if (!task) {\n                return;\n            }\n\n            if (task.title !== title) {\n                task.title = title;\n                await Api.saveTask(task);\n                refresh();\n            }\n        }\n    }\n\n    async function setTaskState(state: TaskState) {\n        const task = data.tasks.find(x => x.id === props.id);\n\n        if (!task) {\n            return;\n        }\n\n        if (task.state === state) {\n            return;\n        }\n\n        task.state = state;\n        task.stateChangedAt = new Date().toISOString();\n        await Api.saveTask(task);\n        refresh();\n    }\n\n    let task = data.tasks.find(x => x.id === props.id);\n\n    if (!task) {\n        return <div>Task not found.</div>\n    }\n\n    let isDirty = false;\n\n    if (task.title !== title) {\n        isDirty = true;\n    }\n\n    return (\n        <>\n            <ToolSection>\n                <NavLink to={source} className=\"button\">Back</NavLink>\n            </ToolSection>\n\n            <ToolSection>\n                <div>Task</div>\n                <input type=\"text\" className=\"input is-large is-wide\" style={{border: isDirty ? '2px solid orange' : undefined}} value={title} onKeyDown={e => onKeyDown(e)} onChange={e => setTitle(e.target.value)} />\n\n                <div>State</div>\n                <div className={cx(styles.horizontalSpace('.5rem'))}>\n                    <div className={cx('button', task.state !== TaskState.Active ? 'inactive' : null)} onClick={() => setTaskState(TaskState.Active)}>Active</div>\n                    <div className={cx('button', task.state !== TaskState.Incubated ? 'inactive' : null)} onClick={() => setTaskState(TaskState.Incubated)}>Incubated</div>\n                    <div className={cx('button', task.state !== TaskState.Completed ? 'inactive' : null)} onClick={() => setTaskState(TaskState.Completed)}>Completed</div>\n                </div>\n\n                <div>Context</div>\n                <select className=\"input is-large\" value={task.contextId || ''} onChange={e => setContext(task!, e)}>\n                    <option value=\"\">Not set</option>\n                    {data.contexts.map(c => (\n                        <option key={c.id} value={c.id}>{c.title}</option>\n                    ))}\n                </select>\n\n                <div>Project</div>\n                <select className=\"input is-large\" value={task.projectId || ''} onChange={e => setProject(task!, e)}>\n                    <option value=\"\">Not set</option>\n                    {data.projects.filter(p => p.state === ProjectState.Active || p.id === task!.projectId).map(c => (\n                        <option key={c.id} value={c.id}>{c.title}</option>\n                    ))}\n                </select>\n\n                <div>Defer</div>\n                <input type=\"date\" className=\"input is-large\" value={(task.deferredUntil && moment(task.deferredUntil).format('YYYY-MM-DD')) || ''} onChange={e => setDefer(task!, e)} />\n            </ToolSection>\n\n            <ToolSection>\n                <EmbeddedNoteEdit targetEntity={task} type={'task'} {...props} />\n            </ToolSection>\n        </>\n    );\n} \n","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Data } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport { Project, ProjectState } from '../db/project';\nimport { Loader } from '../components/Loader';\nimport { ContextSelector } from '../components/ContextSelector';\nimport { Api } from '../bridge/HostBridge';\n\nexport class ShowProjectPage extends React.Component<{ data: Data, refreshData: () => void, id: string }, { title: string }> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            title: '',\n        }\n    }\n\n    componentDidMount() {\n        let target = this.props.data.projects.find(x => x.id === this.props.id);\n        this.setState({title: target!.title});\n    }\n\n    async setContext(target: Project, contextId: string|null) {\n        if (contextId === '') {\n            contextId = null;\n        }\n\n        target.contextId = contextId;\n        await Api.saveProject(target);\n        this.props.refreshData();\n    }\n\n    async setProjectState(target: Project, event: React.ChangeEvent<HTMLSelectElement>) {\n        let projectState: ProjectState = event.target.value as unknown as ProjectState;\n\n        target.state = projectState;\n        await Api.saveProject(target);\n        this.props.refreshData();\n    }\n\n    async onKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            let target = this.props.data!.projects.find(x => x.id === this.props.id);\n\n            if (!target) {\n                return;\n            }\n\n            if (target.title !== this.state.title) {\n                target.title = this.state.title;\n                await Api.saveProject(target);\n                this.props.refreshData();\n            }\n        }\n    }\n\n    render() {\n        if (this.props.data === null) {\n            return <Loader />;\n        }\n\n        let target = this.props.data.projects.find(x => x.id === this.props.id);\n\n        if (!target) {\n            return <div>Project not found.</div>\n        }\n\n        let isDirty = false;\n\n        if (target.title !== this.state.title) {\n            isDirty = true;\n        }\n\n        return (\n            <>\n                <ToolSection>\n                    <NavLink to={`/projects`} className=\"button\">Back</NavLink>\n                </ToolSection>\n\n                <ToolSection>\n                    <div>Project</div>\n                    <input type=\"text\" className=\"input is-large is-wide\" style={{border: isDirty ? '2px solid orange' : undefined}} value={this.state.title} onKeyDown={e => this.onKeyDown(e)} onChange={e => this.setState({ title: e.target.value })} />\n                    \n                    <div>Context</div>\n                    <ContextSelector contextId={target.contextId} onChange={e => this.setContext(target!, e)} data={this.props.data} />\n                    <div>State</div>\n                    <select className=\"input is-large\" value={target.state || ProjectState.Active} onChange={e => this.setProjectState(target!, e)}>\n                        {Object.keys(ProjectState).map(c => (\n                            <option key={c} value={c}>{ProjectState[c as any]}</option>\n                        ))}\n                    </select>\n\n                </ToolSection>\n\n            </>\n        );\n    }\n}","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Data } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport { Context, ContextState } from '../db/context';\nimport { Api } from '../bridge/HostBridge';\n\nexport class ShowContextPage extends React.Component<{id: string, data: Data, refreshData(): void }, { title: string }> {\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            title: '',\n        }\n    }\n\n    componentDidMount() {\n        let target = this.props.data.contexts.find(x => x.id === this.props.id);\n        this.setState({ title: target!.title })\n    }\n\n    async onKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            const target = this.props.data.contexts.find(x => x.id === this.props.id);\n\n            if (!target) {\n                return;\n            }\n\n            if (target.title !== this.state.title) {\n                target.title = this.state.title;\n                await Api.saveContext(target);\n                this.props.refreshData();\n            }\n        }\n    }\n\n    async setContext(target: Context, event: React.ChangeEvent<HTMLSelectElement>) {\n        let contextId: string|null = event.target.value;\n\n        if (contextId === '') {\n            contextId = null;\n        }\n\n        target.contextId = contextId;\n        await Api.saveContext(target);\n        this.props.refreshData();\n    }\n\n    async setContextState(target: Context, event: React.ChangeEvent<HTMLSelectElement>) {\n        let contextState: ContextState = event.target.value as unknown as ContextState;\n\n        target.state = contextState;\n        await Api.saveContext(target);\n        this.props.refreshData();\n    }\n\n    render() {\n        let target = this.props.data.contexts.find(x => x.id === this.props.id);\n\n        if (!target) {\n            return <div>Context not found.</div>\n        }\n\n        let isDirty = false;\n\n        if (target.title !== this.state.title) {\n            isDirty = true;\n        }\n\n        return (\n            <>\n                <ToolSection>\n                    <NavLink to={`/contexts`} className=\"button\">Back</NavLink>\n                </ToolSection>\n\n                <ToolSection>\n                    <div>Context</div>\n                    <input type=\"text\" className=\"input is-large is-wide\" style={{border: isDirty ? '2px solid orange' : undefined}} value={this.state.title} onKeyDown={e => this.onKeyDown(e)} onChange={e => this.setState({ title: e.target.value })} />\n\n                    <div>Parent Context</div>\n                    <select className=\"input is-large\" value={target.contextId || ''} onChange={e => this.setContext(target!, e)}>\n                        <option value=\"\">Not set</option>\n                        {this.props.data.contexts.filter(c => c.id !== target!.id).map(c => (\n                            <option key={c.id} value={c.id}>{c.title}</option>\n                        ))}\n                    </select>\n\n                    <div>State</div>\n                    <select className=\"input is-large\" value={target.state || ContextState.Active} onChange={e => this.setContextState(target!, e)}>\n                        {Object.keys(ContextState).filter(c => !isNaN(c as any)).map(c => (\n                            <option key={c} value={c}>{ContextState[c as any]}</option>\n                        ))}\n                    </select>\n                </ToolSection>\n            </>\n        );\n    }\n}","import * as React from 'react';\nimport { Data } from '../model';\nimport { ToolSection } from '../framework/ToolSection';\nimport { syncer } from '../db/syncer';\nimport { Loader } from '../components/Loader';\n\ninterface DataPageProps {\n    data: Data;\n    refreshData(): void;\n}\n\nexport class DataPage extends React.Component<{ render: (props: DataPageProps)=>React.ReactNode }, { data: Data|null, error: string|null }> {\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            error: null,\n            data: null\n        };\n\n        this.refreshData = this.refreshData.bind(this);\n    }\n\n    async componentDidMount() {\n        syncer.registerDataListener(data => this.setState({ data }));\n        this.setState({ data: await syncer.getData() }, async () => {\n            await syncer.startServerSync();\n            await syncer.ensureServerSyncEnqueued();\n        });\n    }\n\n    async refreshData() {\n        this.setState({ data: await syncer.getData(true) });\n    }\n\n    render() {\n        if (this.state.error) {\n            return (\n                <>\n                    <div>{this.state.error}</div>\n                    <ToolSection>\n                        <div className=\"button\" onClick={() => this.refreshData()}>Retry</div>\n                        <div className=\"button\" onClick={() => window.location.reload()}>Reload</div>\n                        <div className=\"button\" onClick={() => window.location.reload(true)}>Force Reload</div>\n                        <a className=\"button\" href=\"/login\" >Login</a>\n                    </ToolSection>\n                </>\n            );\n        }      \n        \n        if (!this.state.data) {\n            return <Loader />;\n        }\n\n        return this.props.render({ data: this.state.data, refreshData: this.refreshData });\n    }\n}","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as styles from '../../layout/styles';\nimport { useData } from '../../model';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { convertAliasToName, getAllVirtualPersonAliases } from '../../db/person';\nimport { cx } from 'emotion';\n\ntype ExistingPerson = {\n    id: string;\n    name: string;\n    isRef: false;\n};\n\ntype VirtualPerson = {\n    name: string;\n    alias: string;\n    isRef: true;\n};\n\n\nexport const PeoplePage: React.FC<{}> = props => {\n    const {data} = useData();\n    const [virtualReferences, setVirtualReferences] = React.useState<string[]>();\n\n    React.useEffect(() => {\n        setVirtualReferences(getAllVirtualPersonAliases(data.people, data.notes));\n    }, [data.people, data.notes]);\n\n    const people: ExistingPerson[] = data.people.map(p => ({ id: p.id, name: p.name, isRef: false }));\n    const virtualPeople: VirtualPerson[] = virtualReferences ? virtualReferences.map(r => ({ name: convertAliasToName(r), alias: r, isRef: true })) : [];\n    const allPeople: (ExistingPerson|VirtualPerson)[] = people.concat(virtualPeople as any);\n\n    const renderTarget = (target: ExistingPerson|VirtualPerson) => {\n\n        if (!target.isRef)\n        {\n            return (\n                <NavLink key={target.id} to={`/people/${target.id}`} className={cx('item', styles.hoverGlow)}>\n                    <div>\n                        {target.name}\n                    </div>\n                </NavLink>\n            );\n        }\n\n        return (\n            <NavLink key={target.alias} to={`/people/virtual?alias=${target.alias}&source=${encodeURIComponent(`${window.location.pathname}`)}`} className={cx('item', styles.hoverGlow)} style={{color: '#aaa'}}>\n                <div>\n                    {target.name}\n                </div>\n            </NavLink>\n        );\n    };\n\n    return (\n        <>\n            <ToolSection>\n                <NavLink to={`/people/new`} className=\"button\">New Person</NavLink>\n            </ToolSection>\n\n            <div className=\"list\">\n                {allPeople.sort((a, b) => a.name.localeCompare(b.name)).map(t => renderTarget(t))}\n            </div>\n        </>\n    );\n};\n","import * as React from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { useState } from 'react';\nimport { EmbeddedNoteEdit } from '../../components/EmbeddedNote';\nimport { useData } from '../../model';\nimport { Api } from '../../bridge/HostBridge';\nimport { Person } from '../../db/person';\n\nconst useForm = <T extends {}>(initialState: ()=>T) => {\n    const [values, setValues] = useState<T>(initialState);\n    \n    const handleChange = (event: any) => {\n        event.persist();\n        setValues((values) => ({ ...values, [event.target.name]: event.target.value }));\n    };\n\n    return {\n        values,\n        handleChange\n    };\n};\n\nexport const EditPersonPage: React.FC<{id?: string }> = (props) => {\n    const {data} = useData();\n    const [goBack, setGoBack] = useState<string|null>(null);\n\n    const {values, handleChange} = useForm(() => {\n        const person = props.id ? data.people.find(x => x.id === props.id) : null;\n        return {\n            name:  person ? person.name : '',\n            alias: person ? person.alias : '',\n            birthday: person ? person.birthday : null\n        }\n    });\n\n    const onSave = async () => {\n        const id = props.id || null;\n\n        if (id) {\n            let person = data.people.find(p => p.id === id)!;\n\n            if (person === null) {\n                throw new Error('Person is null?');\n            }\n\n            person.name = values.name;\n            person.alias = (values.alias?.length && values.alias) || null;\n            person.birthday = values.birthday;\n\n            await Api.savePerson(person);\n            setGoBack(person.id);\n        } else {\n            await Api.savePerson({\n                name: values.name,\n                alias: (values.alias?.length && values.alias) || null,\n                birthday: values.birthday,\n                noteId: null,\n            } as Person);\n\n            // setGoBack(person.id);\n        }\n    };\n\n    const person = props.id ? data.people.find(x => x.id === props.id) || null : null;\n\n    return (\n        <>\n            {goBack && <Redirect to={`/people/${goBack}`} />}\n            <div style={{height: '100%', display: 'flex', flexDirection: 'column'}} >\n                <ToolSection>\n                    <NavLink to={`/people`} className=\"button\">Back</NavLink>\n                    {props.id && <NavLink to={`/people/${props.id}`} className=\"button\">Show</NavLink>}\n                </ToolSection>\n                <ToolSection>\n                    {props.id === undefined ?\n                            <button type=\"button\" className=\"button is-primary\" onClick={onSave}>Add person</button> :\n                            <button type=\"button\" className=\"button is-primary\" onClick={onSave}>Update person</button>}\n                </ToolSection>\n                <ToolSection>\n                    <div>Name</div>\n                    <input type=\"text\" name=\"name\" className=\"input is-large is-wide\" value={values.name} onChange={handleChange} />\n                    <div>Alias</div>\n                    <input type=\"text\" name=\"alias\" className=\"input is-large is-wide\" value={values.alias || ''} onChange={handleChange} />\n                    <div>Birthday</div>\n                    <input type=\"date\" name=\"birthday\" className=\"input is-large\" value={values.birthday || ''} onChange={handleChange} />\n                </ToolSection>\n                <ToolSection>\n                    <EmbeddedNoteEdit targetEntity={person} type={'person'} />\n                </ToolSection>\n            </div>\n        </>\n    );\n};","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useData } from '../../model';\nimport { ToolSection } from '../../framework/ToolSection';\nimport moment from 'moment';\nimport { EmbeddedNoteShow } from '../../components/EmbeddedNote';\nimport { getAlias } from '../../db/person';\nimport { PersonReferenceViewer } from '../../components/ReferenceViewer';\nimport { useQueryState } from '../../lib/UseQueryState';\n\nexport const ShowPersonPage: React.FC<{id: string}> = (props) => {\n    const {data} = useData();\n    const person = data.people.find(x => x.id === props.id);\n\n    if (!person) {\n        return <div>Person not found.</div>\n    }\n\n    return (\n        <>\n            <ToolSection>\n                <NavLink to={`/people`} className=\"button\">Back</NavLink>\n                <NavLink to={`/people/${person.id}/edit`} className=\"button\">Edit</NavLink>\n            </ToolSection>\n            <div className=\"panel\">\n                <div className=\"content\" style={{padding: '1rem'}}>\n                    <h1>{person.name} (@{getAlias(person)})</h1>\n                    {person.birthday && <div>Birthday: {moment(person.birthday).format('YYYY-MM-DD')}</div>}\n                    <EmbeddedNoteShow targetEntity={person} {...props} />\n                    <PersonReferenceViewer alias={getAlias(person)} />\n                </div>\n            </div>\n        </>\n    );\n}; \n\nexport const ShowVirtualPersonPage: React.SFC<{}> = (props) => {\n    const [source] = useQueryState(null, 'source');\n\n    const urlParams = new URLSearchParams(window.location.search);\n    const alias = urlParams.get('alias');\n\n    if(!alias) {\n        return <div>Person not found.</div>\n    }\n\n    return (\n        <>\n            <ToolSection>\n                <NavLink to={source ? decodeURIComponent(source) : '/'} className=\"button\">Back</NavLink>\n                <NavLink to={`/notes/new?alias=${alias}&source=${encodeURIComponent(`${window.location.pathname}`)}`} className=\"button\">Create</NavLink>\n            </ToolSection>\n            <div className=\"panel\">\n                <div className=\"content\" style={{padding: '1rem'}}>\n                    <h1>{alias}</h1>\n                    <PersonReferenceViewer alias={alias} />\n                </div>\n            </div>\n        </>\n    );\n}","import * as React from 'react';\nimport { ToolSection } from '../framework/ToolSection';\nimport { useData } from '../model';\n\nexport const StatsPage: React.FunctionComponent<{}> = (props) => {\n    const {data} = useData();\n    const [noteTotalCount] = React.useState<number|null>(null);\n    const [taskTotalCount] = React.useState<number|null>(null);\n    const [peopleTotalCount] = React.useState<number|null>(null);\n    const [projectTotalCount] = React.useState<number|null>(null);\n    const [contextTotalCount] = React.useState<number|null>(null);\n    \n    React.useEffect(() => {\n        // db.notes.getSyncKeys().then(c => setNoteTotalCount(c.length));\n        // db.tasks.getSyncKeys().then(c => setTaskTotalCount(c.length));\n        // db.people.getSyncKeys().then(c => setPeopleTotalCount(c.length));\n        // db.projects.getSyncKeys().then(c => setProjectTotalCount(c.length));\n        // db.contexts.getSyncKeys().then(c => setContextTotalCount(c.length));\n    });\n\n    return (\n        <>\n            <ToolSection>\n            </ToolSection>\n            <div className=\"panel\">\n                <div className=\"content\" style={{padding: '1rem'}}>\n                    <h1>Stats</h1>\n                    <ul>\n                        <li>Notes: {data.notes.length}, versions: {noteTotalCount ? noteTotalCount : '...'}</li>\n                        <li>Tasks: {data.tasks.length}, versions: {taskTotalCount ? taskTotalCount : '...'}</li>\n                        <li>People: {data.people.length}, versions: {peopleTotalCount ? peopleTotalCount : '...'}</li>\n                        <li>Projects: {data.projects.length}, versions: {projectTotalCount ? projectTotalCount : '...'}</li>\n                        <li>Contexts: {data.contexts.length}, versions: {contextTotalCount ? contextTotalCount : '...'}</li>\n                    </ul>\n                </div>\n            </div>\n        </>\n    );\n}","import * as React from 'react';\nimport { ContextBar } from '../../components/ContextBar';\nimport { useQueryState } from '../../lib/UseQueryState';\nimport { ToolSection } from '../../framework/ToolSection';\nimport { useData } from '../../model';\nimport moment from 'moment';\nimport { getNoteTitle, Note, NoteMode } from '../../db/note';\nimport { ContextTag } from '../../components/ContextTag';\nimport { MarkedViewer } from '../../components/MarkedViewer';\nimport _ from 'lodash';\nimport * as ContextActions from '../../lib/contextActions';\nimport { TreeViewer } from '../../components/TreeViewer';\nimport { NavLink } from 'react-router-dom';\nimport { horizontalSpace } from '../../layout/styles';\n\nexport const DailyNotePage: React.SFC<{ }> = (props) => {\n    const [contextId, setContextId] = useQueryState(null, 'context');\n    const {data} = useData();\n\n    const oneMonthAgo = moment().add(-30,'d');\n    \n    const filteredContexts = ContextActions.getFilteredContextIds(contextId, data);\n    const dailyNotes = _.orderBy(data.notes.filter(x => x.dailyDate && moment(x.dailyDate) > oneMonthAgo && (!contextId || filteredContexts.indexOf(x.contextId!) !== -1)), n => n.dailyDate,  'desc');\n\n    function renderViewer(note: Note) {\n        if (note.mode === NoteMode.Markdown) {\n            return <MarkedViewer markdown={note.content} contextId={note.contextId} />;\n        } \n          \n        return <TreeViewer json={note.content} contextId={note.contextId} />;\n    }\n\n    const contextCounts = _.countBy(data.notes.filter(n => n.dailyDate), x  => x.contextId);\n    const contexts = _.orderBy(Object.keys(contextCounts).map(k => ({ contextId: k, count: contextCounts[k], context: data.contexts.find(x => x.id === k) })), x => x.count, 'desc');\n\n    const urlParams = new URLSearchParams(window.location.search);\n    const source = `?source=${encodeURIComponent(`${window.location.pathname}?${urlParams.toString()}`)}`\n\n    return (\n        <div style={{display: 'flex', height: '100%'}}>\n            <ContextBar contextId={contextId} onChange={setContextId} />\n            <div style={{width: '100%'}}>\n                <ToolSection>\n                    {contexts.map(c => (\n                        <NavLink key={c.contextId} to={`/notes/new?context=${c.contextId}&daily`} className=\"button\">New Note{c.context ? ` - ${c.context.title}` : ''}</NavLink>\n                    ))}\n                </ToolSection>\n                <div className=\"panel\">\n                    {dailyNotes.map(n => (\n                        <div key={n.id} className=\"content\" style={{padding: '1rem'}}>\n                            <h1>{getNoteTitle(n)}</h1>\n                            <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                                <div className={horizontalSpace('8px')}>\n                                    <a className=\"button small\" href={`/notes/${n.id}${source}`}>Show</a>\n                                    <a className=\"button small\" href={`/notes/${n.id}/edit${source}`}>Edit</a>\n                                </div>\n                                <ContextTag contextId={n.contextId} />\n                            </div>\n                            {renderViewer(n)}\n                        </div>))}\n                </div>\n            </div>\n        </div>\n    )\n};\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Layout } from './components/Layout';\nimport { TaskPage } from './pages/TaskPage';\nimport { EditNotePage } from './pages/notes/EditNotePage';\nimport { ShowNotePage, ShowVirtualNotePage } from './pages/notes/ShowNotePage';\nimport { NotePage } from './pages/notes/NotePage';\nimport { PlaygroundPage } from './pages/PlaygroundPage';\nimport { ContextPage } from './pages/ContextPage';\nimport { ProjectPage } from './pages/ProjectPage';\nimport { ShowTaskPage } from './pages/ShowTaskPage';\nimport { ShowProjectPage } from './pages/ShowProjectPage';\nimport { ShowContextPage } from './pages/ShowContextPage';\nimport { DataPage } from './pages/DataPage';\nimport { SyncPage } from './pages/SyncPage';\nimport { SettingsPage } from './pages/SettingsPage';\nimport { PeoplePage } from './pages/people/PeoplePage';\nimport { EditPersonPage } from './pages/people/EditPersonPage';\nimport { ShowPersonPage, ShowVirtualPersonPage } from './pages/people/ShowPersonPage';\nimport { StatsPage } from './pages/StatsPage';\nimport {DataProvider} from './model';\nimport { DailyNotePage } from './pages/notes/DailyNotes';\nimport './theme.scss';\n\nexport const routes = <Layout>\n    <DataProvider>\n        <Switch>\n            <Route exact path='/' render={routeProps => <NotePage />} />\n            <Route exact path='/notes/new' render={routeProps => <EditNotePage />} />\n            <Route exact path='/notes/daily' render={routeProps => <DailyNotePage />} />\n            <Route exact path='/notes/virtual' render={routeProps => <ShowVirtualNotePage />} />\n            <Route exact path='/notes/:id' render={routeProps => <ShowNotePage id={routeProps.match.params.id} />} />\n            <Route exact path='/notes/:id/edit' render={routeProps => <EditNotePage id={routeProps.match.params.id} />} />\n            <Route exact path='/tasks' render={routeProps => <TaskPage />} />\n            <Route exact path='/tasks/:id' render={routeProps => <DataPage render={(props) => <ShowTaskPage {...props} id={routeProps.match.params.id} />} />} />\n            <Route exact path='/contexts' render={routeProps => <DataPage render={(props) => <ContextPage {...props} />}  />} />\n            <Route exact path='/contexts/:id' render={routeProps => <DataPage render={(props) => <ShowContextPage {...props} id={routeProps.match.params.id} />} />} />\n            <Route exact path='/projects' render={routeProps => <DataPage render={(props) => <ProjectPage {...props} />} />} />\n            <Route exact path='/projects/:id' render={routeProps => <DataPage render={(props) => <ShowProjectPage {...props} id={routeProps.match.params.id} />} />} />\n            <Route exact path='/people' render={routeProps => <PeoplePage />} />\n            <Route exact path='/people/virtual' render={routeProps => <ShowVirtualPersonPage />} />\n            <Route exact path='/people/new' render={routeProps => <EditPersonPage />} />\n            <Route exact path='/people/:id' render={routeProps => <ShowPersonPage id={routeProps.match.params.id} />} />\n            <Route exact path='/people/:id/edit' render={routeProps => <EditPersonPage id={routeProps.match.params.id} />} />\n            <Route path='/playground' component={PlaygroundPage} />\n            <Route path='/sync' component={SyncPage} />\n            <Route path='/stats' render={routeProps => <StatsPage />} />\n            <Route path='/settings' component={SettingsPage} />\n        </Switch>\n    </DataProvider>\n</Layout>;\n","import React from 'react';\nimport { ToolSection } from '../framework/ToolSection';\nimport { syncer, SyncStatus } from '../db/syncer';\nimport moment from 'moment';\n\nexport const SyncPage: React.FC<{}> = props => {\n    const [count, setCount] = React.useState(0);\n\n    React.useEffect(() => {\n        syncer.registerSyncListener(() => {\n            setCount(c => c + 1);\n        });\n    }, []);\n   \n    return (\n        <>\n            <React.Fragment key={count}></React.Fragment>\n            <ToolSection>\n                <div>Status: {SyncStatus[syncer.status]}</div>\n                <div className=\"button\" onClick={() => syncer.startServerSync()}>Sync Now</div>\n            </ToolSection>\n            <div className=\"list\">\n                {syncer.getResults().slice(0).reverse().map((result, i) =>\n                    <React.Fragment key={i}>\n                        <div className=\"item\">{moment(result.endAt).diff(moment(result.startAt))} ms - start: {moment(result.startAt).format('HH:mm:ss')}, end: {moment(result.endAt).format('HH:mm:ss')}, fetch: {result.fetch}, send: {result.send}{result.error ? `, error: ${result.error}` : null}</div>\n                    </React.Fragment>)}\n            </div>\n        </>\n    );\n}\n","import * as React from 'react';\nimport { ToolSection } from '../framework/ToolSection';\nimport { setTheme } from '../layout/theme';\nimport { Api } from '../bridge/HostBridge';\n\nexport const SettingsPage: React.FC<{}> = () => {\n    const [remoteConnected, setRemoteConnected] = React.useState<boolean|null>(null);\n    const [blobConnectionString, setBlobConnectionString] = React.useState('');\n\n    React.useEffect(() => {\n        async function check() {\n            setRemoteConnected(await Api.syncRemoteConnected());\n        }\n        check();\n    }, []);\n\n    return (\n        <>\n            <ToolSection>\n                <div className=\"button\" onClick={() => setTheme('dark-theme')}>Dark theme</div>\n                <div className=\"button\" onClick={() => setTheme('light-theme')}>Light theme</div>\n            </ToolSection>\n\n            <ToolSection>\n                <div className=\"button\" onClick={() => window.location.reload()}>Reload</div>\n                <div className=\"button\" onClick={() => window.location.reload(true)}>Force Reload</div>\n            </ToolSection>\n            <ToolSection>\n                {remoteConnected ? (\n                    <div className=\"button\" onClick={async _ => { Api.disconnectBlobStorage(); setRemoteConnected(await Api.syncRemoteConnected()); }}>Disconnect Blob Storage</div>\n                ) : (\n                    <>\n                        <div className=\"button\" onClick={async _ => { Api.connectBlobStorage(blobConnectionString); setRemoteConnected(await Api.syncRemoteConnected()); }}>Connect Blob Storage</div>\n                        <input type=\"text\" value={blobConnectionString} onChange={e => setBlobConnectionString(e.target.value)} />\n                    </>\n                )}\n            </ToolSection>\n        </>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport { routes } from './routes';\nimport {createBrowserHistory} from 'history';\nimport 'whatwg-fetch';\n\nexport const history = createBrowserHistory()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router children={routes} history={history} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}